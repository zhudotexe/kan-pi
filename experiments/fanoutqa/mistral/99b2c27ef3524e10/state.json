{
  "id": "1728691684-70603dc9-f288-4542-b8c5-4e0fd603ded3",
  "title": "fanoutqa: Who are the founders of the five largest companies by revenue in 2023? (99b2c27ef3524e10)",
  "last_modified": 1728715278.5720637,
  "n_events": 60,
  "state": [
    {
      "id": "88738771-ea2e-46fd-becd-c9cd2bea43e5",
      "depth": 0,
      "parent": null,
      "children": [],
      "always_included_messages": [],
      "chat_history": [
        {
          "role": "user",
          "content": "Who are the founders of the five largest companies by revenue in 2023?",
          "name": null,
          "tool_call_id": null,
          "tool_calls": null,
          "is_tool_call_error": null
        },
        {
          "role": "assistant",
          "content": "",
          "name": null,
          "tool_call_id": null,
          "tool_calls": [
            {
              "id": "0d006133-bd33-45df-8dfe-d0ec25fc90d8",
              "type": "function",
              "function": {
                "name": "delegate",
                "arguments": "{\"instructions\": \"Find the five largest companies by revenue in 2023 and their founders.\"}"
              }
            }
          ],
          "is_tool_call_error": null
        },
        {
          "role": "function",
          "content": "[TOOL_CALLS] {\"content\": \"<document>\\n<title>Amazon (company)</title>\\n<content>\\nAmazon.com, Inc. (/\u02c8\u00e6m\u0259z\u0252n/ AM-\u0259-zon), is an American multinational technology company which focuses on e-commerce, cloud computing, digital streaming, and artificial intelligence. It is one of the Big Five companies in the U.S. information technology industry, along with Google, Apple, Microsoft, and Facebook. The company has been referred to as \\\"one of the most influential economic and cultural forces in the world\\\", as well as the world's most valuable brand.\\n\\n\\n\\n\\n\\n## History[edit]\\n\\n\\n### Early years[edit]\\n\\n\\nAmazon was founded by Jeff Bezos on July 5, 1994, in Bellevue, Washington.[1] The company started as an online marketplace for books but expanded to sell electronics, software, video games, apparel, furniture, food, toys, and jewelry. In 1998, Amazon diversified into the online sale of music and video; by the end of the year, it had established itself in the major European markets.[2]\\n\\n\\nIn 2002, Amazon Web Services (AWS) was launched, providing online services for other websites and client-side applications.[3]\\n\\n\\nIn 2006, Amazon grew its portfolio with the release of its Elastic Compute Cloud (EC2).[4]\\n\\n\\n\\n### Growth and expansion[edit]\\n\\n\\nIn 2007, Amazon released the Kindle e-reader which popularized e-books.[5] In 2011, Amazon launched the Kindle Fire, which was designed to compete with Apple's iPad.[6]\\n\\n\\nIn 2012, Amazon acquired Kiva Systems, a company that makes robots and software for order fulfillment, for $775 million.[7] The same year, Amazon Studios was founded to develop television shows, movies and comics from online submissions.[8]\\n\\n\\nIn 2014, Amazon acquired the live streaming platform Twitch for $970 million,[9] which later became a subsidiary of Amazon.[10]\\n\\n\\nIn 2017, Amazon acquired Whole Foods Market for $13.7 billion, marking a significant expansion into brick-and-mortar retail.[11]\\n\\n\\nIn 2018, Amazon's market capitalization reached $1 trillion for the first time.[12]\\n\\n\\nIn 2020, Jeff Bezos announced he would step down as CEO to become executive chair, with Andy Jassy succeeding him.[13]\\n\\n\\n\\n## Products and services[edit]\\n\\n\\n### Amazon Web Services[edit]\\n\\n\\nAmazon Web Services (AWS) offers a suite of cloud computing services that make up an on-demand computing platform. These services operate from 16 geographical regions across the world.[14] The most central and well-known of these services arguably include Amazon Elastic Compute Cloud, also known as \\\"EC2\\\", and Amazon Simple Storage Service, also known as \\\"S3\\\".[15]\\n\\n\\n\\n### Amazon Prime[edit]\\n\\n\\nAmazon Prime is a paid subscription service offered by Amazon that gives users access to free two-day delivery (one-day in some areas), streaming video/music and other benefits for a monthly or yearly fee.[16] In April 2021, Amazon reported that Prime had more than 200 million subscribers worldwide.[17]\\n\\n\\n\\n### Amazon Alexa[edit]\\n\\n\\nAmazon Alexa, also known simply as Alexa, is a virtual assistant developed by Amazon, first used in the Amazon Echo and the Amazon Echo Dot smart speakers developed by Amazon Lab126. It is capable of voice interaction, music playback, making to-do lists, setting alarms, streaming podcasts, playing audiobooks, and providing weather, traffic, sports, and other real-time information, such as news. Alexa can also control several smart devices using itself as a home automation system. Users are able to extend the Alexa capabilities by installing \\\"skills\\\" (additional functionality developed by third-party vendors, in other settings more commonly called apps such as weather programs and audio features).[18]\\n\\n\\nMost devices with Alexa allow users to activate the device using a wake-word (such as *Alexa* or *Amazon*); other devices (such as the Amazon mobile app on iOS or Android) require the user to push a button to activate Alexa's listening mode, although, some phones also allow a user to say a command, such as \\\"Alexa\\\" or \\\"Alexa wake\\\".[19]\\n\\n\\n\\n### Amazon Studios[edit]\\n\\n\\nAmazon Studios is the television and film production and distribution arm of Amazon. It was started in late 2010.[20] Content is distributed through Amazon Video, Amazon's digital video streaming service, and is a competitor to services like Netflix and Hulu.[21]\\n\\n\\n\\n### Amazon Music[edit]\\n\\n\\nAmazon Music (previously Amazon MP3) is a music streaming platform and online music store operated by Amazon. Launched in public beta on September 25, 2007,[22] in January 2008 it became the first music store to sell music without digital rights management (DRM) from the four major music labels (EMI, Universal, Warner Music, and Sony BMG), as well as many independents.[23] All tracks were originally sold in 256 kilobits-per-second variable bitrate MP3 format without per-customer watermarking or DRM; however, some tracks are now watermarked.[24]\\n\\n\\n\\n### Amazon Kindle[edit]\\n\\n\\nAmazon Kindle is a series of e-readers designed and marketed by Amazon. Amazon Kindle devices enable users to browse, buy, download, and read e-books, newspapers, magazines and other digital media via wireless networking to the Kindle Store.[25] The hardware platform, developed by Amazon subsidiary Lab126, began as a single device in 2007 and now comprises a range of devices, including e-readers with E Ink electronic paper displays, and LCD display products that resemble conventional tablets. There is integrated software for content purchase, and proprietary formats for digital books and publications.[26]\\n\\n\\n\\n### Amazon Appstore[edit]\\n\\n\\nThe Amazon Appstore is an app store for the Android operating system operated by Amazon. It was opened on March 22, 2011 and was made available in nearly 200 countries.[27] Developers are paid 70% of the list price of the app or in-app purchase.[28]\\n\\n\\n\\n### Amazon Fresh[edit]\\n\\n\\nAmazon Fresh is a grocery delivery service offered by Amazon in several countries. In 2007, Amazon began working on creating its own delivery infrastructure. At the time, the company was renting trucks from local delivery companies to deliver products to customers. In 2015, Amazon launched a separate grocery delivery service called Prime Now devoted to delivering fresh items. It is available in 40 major cities in the United States, as well as in some international cities such as London and Tokyo. In 2018, the service was merged with Amazon Fresh.[29]\\n\\n\\n\\n### Amazon Go[edit]\\n\\n\\nAmazon Go (styled as *amazon go*) is a chain of convenience stores operated by the online retailer Amazon, with 20 locations in the United States planned as of 2018. The stores are partly automated, with customers able to purchase products without being checked out by a cashier or using a self-checkout station.[30] Sensors and technology, such as computer vision and deep learning, detect when products are taken from or returned to the shelves and keep track of them in a virtual cart. The customer's Amazon account is automatically charged when they leave the store with their items. The first store was opened to Amazon employees in December 2016 and to the public in January 2018.[31]\\n\\n\\n\\n### Amazon Books[edit]\\n\\n\\nAmazon Books is a chain of bookstores owned by Amazon. The first was opened in Seattle's University Village in November 2015. As of 2018, there are 17 stores across the United States.[32]\\n\\n\\n\\n### Amazon 4-star[edit]\\n\\n\\nAmazon 4-star is a chain of stores owned by Amazon that opened in 2018. The stores carry items that are rated 4 stars and above, are top sellers, or are new and trending on Amazon's website.[33]\\n\\n\\n\\n### Amazon Cash[edit]\\n\\n\\nAmazon Cash is a service that lets customers add cash to their Amazon.com balance at participating stores by having the cashier scan a barcode on the customer's phone. Amazon then credits the funds to the customer's account to use for future purchases.[34]\\n\\n\\n\\n### Amazon Pay[edit]\\n\\n\\nAmazon Pay is an online payment processing service that is owned by Amazon. Launched in 2007,[35] Amazon Pay uses the consumer base of Amazon.com and focuses on giving users the option to pay with their Amazon accounts on external merchant websites. Its main product is a \\\"Pay with Amazon\\\" button, which can be integrated on a merchant's website.[36]\\n\\n\\n\\n### Amazon Drive[edit]\\n\\n\\nAmazon Drive, also known in other parts of the world as Amazon Cloud Drive, is a cloud storage application managed by Amazon. The service offers secure cloud storage, file backup, file sharing, and Photo printing.[37] Using an Amazon account, the files and folders can be transferred and managed from multiple devices including web browsers, desktop applications, mobiles, and tablets.[38] Amazon Drive also lets their users share and collaborate on files and folders.[39]\\n\\n\\n\\n### Amazon Flex[edit]\\n\\n\\nAmazon Flex is a mobile application that allows drivers to get paid for delivering packages from their own vehicle. As of 2015, the service operates in more than 50 cities across the United States. It has also expanded internationally to countries such as India and Japan.[40]\\n\\n\\n\\n### Amazon Air[edit]\\n\\n\\nAmazon Air, previously called Amazon Prime Air, is a conceptual drone-based delivery system currently in development by Amazon.[41] In December 2013, CEO Jeff Bezos announced that aerial vehicles will be used to autonomously fly individual customer orders to their destinations.[42]\\n\\n\\n\\n### Amazon Key[edit]\\n\\n\\nAmazon Key is a smart lock and camera system that allows Amazon couriers to deliver packages inside a customer's door. In April 2018, the service was expanded to include a partnership with GM and Volvo to also deliver packages inside customers' cars.[43]\\n\\n\\n\\n### Amazon Comprehend[edit]\\n\\n\\nAmazon Comprehend is a natural language processing service that uses machine learning to find insights and relationships in text.[44] The service can identify the language of the text; extract key phrases, places, people, brands, or events; understand how positive or negative the text is; and automatically organize a collection of text files by topic.[45]\\n\\n\\n\\n### Amazon Inspector[edit]\\n\\n\\nAmazon Inspector is a service that helps identify security vulnerabilities and compliance issues in applications before they are deployed. It uses static and dynamic analysis to scan application code and dependencies for known vulnerabilities and compliance violations.[46]\\n\\n\\n\\n### Amazon Macie[edit]\\n\\n\\nAmazon Macie is a data privacy and data loss prevention service that uses machine learning and pattern matching to discover and protect personal data, such as personally identifiable information (PII).[47]\\n\\n\\n\\n### Amazon SageMaker[edit]\\n\\n\\nAmazon SageMaker is a cloud machine-learning platform that enables developers and data scientists to build, train, and deploy machine-learning models at scale.[48] It provides a range of built-in algorithms and also supports custom algorithms. The service integrates with Jupyter notebooks for easy experimentation and visualization.[49]\\n\\n\\n\\n### Amazon Polly[edit]\\n\\n\\nAmazon Polly is a text-to-speech service that uses advanced deep learning technologies to synthesize speech that sounds like a human voice.[50] It supports multiple languages and voices, and can be used to convert text into lifelike speech for various applications, including voice assistants, audiobooks, and interactive voice response systems.[51]\\n\\n\\n\\n### Amazon Rekognition[edit]\\n\\n\\nAmazon Rekognition is a service that makes it easy to add image and video analysis to applications. It identifies the objects, people, text, scenes, and activities, as well as detects any inappropriate content.[52] The service provides highly accurate facial analysis and facial search capabilities. You can detect, analyze, and compare faces for a wide variety of user verification, public safety, and surveillance use cases.[53]\\n\\n\\n\\n### Amazon Translate[edit]\\n\\n\\nAmazon Translate is a neural machine translation service that delivers fast, high-quality, and affordable language translation.[54] It is a part of the Amazon Web Services suite and supports multiple languages for text translation.[55]\\n\\n\\n\\n### Amazon Transcribe[edit]\\n\\n\\nAmazon Transcribe is an automatic speech recognition (ASR) service that makes it easy for developers to add speech-to-text capabilities to their applications.[56] Amazon Transcribe can be used to transcribe customer service calls, to generate subtitles on video content, and to convert speech input into text for further processing or analysis.[57]\\n\\n\\n\\n### Amazon Pinpoint[edit]\\n\\n\\nAmazon Pinpoint is a scalable and flexible messaging service that you can use to send targeted messages to your customers through multiple messaging channels.[58] The service supports SMS text messages, push notifications, email, and voice messages. It provides capabilities for segmenting your audience, creating personalized messages, and tracking the performance of your messaging campaigns.[59]\\n\\n\\n\\n### Amazon Connect[edit]\\n\\n\\nAmazon Connect is a self-service, cloud-based contact center service that makes it easy for any business to deliver better customer service at lower cost.[60] Amazon Connect is based on the same contact center technology used by Amazon customer service associates around the world to power millions of customer conversations. The service enables businesses to set up a virtual contact center in minutes and to scale to thousands of agents to support customer communications over voice and chat.[61]\\n\\n\\n\\n### Amazon Chime[edit]\\n\\n\\nAmazon Chime is a communications service that lets you meet, chat, and place business calls inside and outside your organization, all using the AWS management console.[62] You can use the service to conduct online meetings, video conferences, make voice calls, and to send chat messages.[63]\\n\\n\\n\\n### Amazon WorkSpaces[edit]\\n\\n\\nAmazon WorkSpaces is a fully managed, secure desktop computing service which runs on the AWS cloud. Amazon WorkSpaces allows customers to provision either Windows or Linux desktops in just a few minutes and quickly scale to provide thousands of desktops to users around the globe.[64] With Amazon WorkSpaces, customers can use the desktop they want, when they want it. Users can access their Amazon WorkSpaces from any supported device, including Windows and Mac computers, Chromebooks, iPads, Fire tablets, Android tablets, and Chrome and Firefox web browsers.[65]\\n\\n\\n\\n### Amazon WorkDocs[edit]\\n\\n\\nAmazon WorkDocs is a fully managed, secure enterprise storage and sharing service with strong administrative controls and feedback capabilities that improve user productivity.[66] Users can easily create, edit, and share content, and request and add rich feedback, from any device. WorkDocs provides IT administrators and users with the ability to integrate with existing systems, enforce security and compliance requirements, and set sharing permissions for their organizations.[67]\\n\\n\\n\\n### Amazon WorkMail[edit]\\n\\n\\nAmazon WorkMail is a secure, managed business email and calendaring service with support for existing desktop and mobile email clients.[68] Users can send and receive email, manage contacts, share calendars, and book resources using the email client of their choice, including Microsoft Outlook, native iOS and Android email apps, or directly through the Amazon WorkMail web application.[69]\\n\\n\\n\\n### Amazon QuickSight[edit]\\n\\n\\nAmazon QuickSight is a scalable, serverless, embeddable, machine learning-powered business analytics service built for the cloud.[70] It makes it easy for all employees within an organization to understand their data by asking natural language questions, exploring through interactive dashboards, or automatically searching for insights using ML.[71]\\n\\n\\n\\n### Amazon Redshift[edit]\\n\\n\\nAmazon Redshift is a data warehouse product which forms part of the larger cloud-computing platform Amazon Web Services.[72] It is built on top of technology from the massive parallel processing (MPP) data warehouse company ParAccel, which Amazon acquired in 2012.[73]\\n\\n\\n\\n### Amazon Glacier[edit]\\n\\n\\nS3 Glacier (Glacier) and S3 Glacier Deep Archive (Deep Archive) are a secure, durable, and extremely low-cost Amazon S3 cloud storage classes for data archiving and long-term backup.[74] They are designed to deliver 99.999999999% durability, and provide comprehensive security and compliance capabilities that can help meet even the most stringent regulatory requirements.[75]\\n\\n\\n\\n### Amazon Athena[edit]\\n\\n\\nAmazon Athena is an interactive query service that makes it easy to analyze data in Amazon S3 using standard SQL.[76] Athena is ideal for ad-hoc querying but it can also handle complex analysis, including large datasets and sophisticated queries.[77]\\n\\n\\n\\n### Amazon Quicksight[edit]\\n\\n\\nAmazon QuickSight is a scalable, serverless, embeddable, machine learning-powered business analytics service built for the cloud.[78] It makes it easy for all employees within an organization to understand their data by asking natural language questions, exploring through interactive dashboards, or automatically searching for insights using ML.[79]\\n\\n\\n\\n### Amazon S3[edit]\\n\\n\\nAmazon S3 or Amazon Simple Storage Service is a storage service offered by Amazon Web Services that is used for online backup and archiving of data and application programs.[80] It provides management features and unlimited storage space for its users through a web interface.[81]\\n\\n\\n\\n### Amazon CloudFront[edit]\\n\\n\\nAmazon CloudFront is a content delivery network (CDN) offered by Amazon Web Services.[82] Content delivery networks provide a globally-distributed network of proxy servers which cache content, such as web videos or other bulky media, more locally to consumers, thus improving access speed for downloading the content.[83]\\n\\n\\n\\n### Amazon Route 53[edit]\\n\\n\\nAmazon Route 53 is a scalable and highly available Domain Name System (DNS) web service.[84] It is designed to give developers and businesses an extremely reliable and cost effective way to route end users to Internet applications by translating human readable names like www.example.com into the numeric IP addresses like 192.0.2.1 that computers use to connect to each other. Route 53 effectively connects user requests to infrastructure running in AWS \\u2013 such as Amazon EC2 instances, Elastic Load Balancing load balancers, or Amazon S3 buckets \\u2013 and can also be used to route users to infrastructure outside of AWS.[85]\\n\\n\\n\\n### Amazon CloudWatch[edit]\\n\\n\\nAmazon CloudWatch is a monitoring and observability service built for DevOps engineers, developers, site reliability engineers (SREs), and IT managers.[86] CloudWatch provides you with data and actionable insights to monitor your applications, understand and respond to system-wide performance changes, optimize resource utilization, and get a unified view of operational health. CloudWatch collects monitoring and operational data in the form of logs, metrics, and events, and visualizes it using automated dashboards. You can create alarms, automate actions based on predefined thresholds, search and analyze logs and metric data, and discover insights to keep your applications running smoothly.[87]\\n\\n\\n\\n### Amazon DynamoDB[edit]\\n\\n\\nAmazon DynamoDB is a fully managed proprietary NoSQL database service that is offered by Amazon.com as part of the Amazon Web Services portfolio.[88] DynamoDB uses a schema-less model that is flexible enough to adapt as the data model of the application that uses the DynamoDB database changes over time.[89]\\n\\n\\n\\n### Amazon Elastic Beanstalk[edit]\\n\\n\\nAWS Elastic Beanstalk is an orchestration service offered by Amazon Web Services for deploying applications that orchestrates various AWS services, including EC2, S3, CloudWatch, autoscaling, and load balancers.[90] This is an alternative to using Amazon's virtual machines. A developer can simply upload the application, and Elastic Beanstalk automatically handles the deployment, from capacity provisioning, load balancing, auto-scaling to application health monitoring.[91]\\n\\n\\n\\n### Amazon Lightsail[edit]\\n\\n\\nAmazon Lightsail is a cloud platform that offers virtual servers, storage, databases, and networking, plus a cost-management console, for a low, predictable price.[92] It includes everything customers need to launch their project quickly \\u2013 a virtual machine, SSD-based storage, data transfer, DNS management, and a static IP \\u2013 for a low, monthly price.[93]\\n\\n\\n\\n### Amazon Elastic Container Service[edit]\\n\\n\\nAmazon Elastic Container Service (ECS) is a highly scalable, high performance container management service that supports Docker containers and allows you to easily run and manage distributed applications that are containerized applications.[94] It is well-integrated with familiar AWS services including Amazon ECR, ECS, ELB, IAM, CloudWatch, CloudFormation, CodeStar, and AWS Marketplace.[95]\\n\\n\\n\\n### Amazon Elastic Kubernetes Service[edit]\\n\\n\\nAmazon Elastic Kubernetes Service (Amazon EKS) is a fully managed Kubernetes service provided by Amazon as part of Amazon Web Services.[96] EKS is certified Kubernetes-conformant, which means you can use any standard Kubernetes tools to manage your applications.[97]\\n\\n\\n\\n### Amazon Relational Database Service[edit]\\n\\n\\nAmazon Relational Database Service (Amazon RDS) is a distributed relational database service by Amazon Web Services (AWS).[98] It is a web service running in the cloud designed to simplify the setup, operation, and scaling of a relational database for use in applications.[99]\\n\\n\\n\\n### Amazon SimpleDB[edit]\\n\\n\\nAmazon SimpleDB is a distributed database created by Amazon Web Services.[100] It was designed to easily store, process and query structured data.[101]\\n\\n\\n\\n### Amazon Elastic MapReduce[edit]\\n\\n\\nAmazon Elastic MapReduce (EMR) is a web service that enables businesses, researchers, data analysts, and developers to easily and cost-effectively process vast amounts of data.[102] It utilizes a hosted Hadoop framework running on the web-scale infrastructure of Amazon Elastic Compute Cloud (Amazon EC2) and Amazon Simple Storage Service (Amazon S3).[103]\\n\\n\\n\\n### Amazon CloudSearch[edit]\\n\\n\\nAmazon CloudSearch is a service that makes it simple and cost-effective to set up, manage, and scale a search solution for websites.[104]\\n\\n\\n\\n### Amazon ElastiCache[edit]\\n\\n\\nAmazon ElastiCache is a web service that makes it easy to deploy, operate, and scale an in-memory cache in the cloud.[105] The service improves the performance of web applications by allowing you to retrieve information from fast, managed, in-memory caches, instead of relying entirely on slower disk-based databases.[106]\\n\\n\\n\\n### Amazon Simple Queue Service[edit]\\n\\n\\nAmazon Simple Queue Service (SQS) is a distributed queue messaging service introduced by Amazon.com in 2004.[107] Among other things, it can be used to store messages while waiting for a computer to process them.[108]\\n\\n\\n\\n### Amazon Simple Notification Service[edit]\\n\\n\\nAmazon Simple Notification Service (Amazon SNS) is a notification service provided as a part of Amazon Web Services.[109] Amazon SNS follows the publish-subscribe (pub-sub) messaging paradigm, with notifications being delivered to clients using a \\\"push\\\" mechanism that eliminates the need to periodically check or \\\"poll\\\" for new information and updates. The service allows applications, end-users, and devices to instantly send or receive notifications from the cloud.[110]\\n\\n\\n\\n### Amazon Simple Email Service[edit]\\n\\n\\nAmazon Simple Email Service (Amazon SES) is a scalable and cost-effective email service for businesses and developers to send marketing, notification, and transactional emails.[111] It is a building block that can be integrated with other AWS services to send emails from applications, such as order confirmations, password resets, or newsletters.[112]\\n\\n\\n\\n### Amazon Machine Learning[edit]\\n\\n\\nAmazon Machine Learning is a cloud-based service that developers can use to build machine learning models for their software applications.[113] The service uses visualization tools and wizards that guide users through the process of creating machine learning models without having to learn complex ML algorithms and technology.[114]\\n\\n\\n\\n### Amazon Cognito[edit]\\n\\n\\nAmazon Cognito lets you add user sign up, sign in, and access control to your web and mobile apps quickly and easily.[115] Amazon Cognito scales to millions of users and supports sign-in through social identity providers such as Facebook, Twitter, Amazon, and Google, as well as enterprise identity providers via SAML 2.0 and OpenID Connect.[116]\\n\\n\\n\\n### Amazon Elastic Transcoder[edit]\\n\\n\\nAmazon Elastic Transcoder is a web service for transcoding media files from their source format into versions that will playback on devices like smartphones, tablets, and PCs.[117] The service provides transcoding presets for popular output formats and codecs, and also allows users to customize the encoding parameters.[118]\\n\\n\\n\\n### Amazon AppStream[edit]\\n\\n\\nAmazon AppStream is a fully managed application streaming service that allows users to stream desktop applications from AWS to any computer, without requiring rewriting of the applications.[119] AppStream enables the streaming of resource-intensive applications, 3D design and engineering software, and games, providing the same fluid user experience as a local installation without the need for high-end hardware.[120]\\n\\n\\n\\n### Amazon FreeRTOS[edit]\\n\\n\\nAmazon FreeRTOS is an operating system for microcontrollers that makes small, low-power edge devices easy to program, deploy, secure, connect, and manage.[121] It is built on the FreeRTOS kernel, a popular open source operating system for microcontrollers, and extends it with software libraries that make it easy to securely connect small, low-power devices to AWS cloud services like AWS IoT Core or to more powerful edge devices running AWS IoT Greengrass.[122]\\n\\n\\n\\n### Amazon Corretto[edit]\\n\\n\\nAmazon Corretto is a no-cost, multiplatform, production-ready distribution of the OpenJDK.[123] Corretto comes with long-term support that will include performance enhancements and security fixes. Amazon runs Corretto internally on thousands of production services and Corretto is certified as compliant with the Java SE standard.[124]\\n\\n\\n\\n### Amazon Timestream[edit]\\n\\n\\nAmazon Timestream is a fully managed time series database service for IoT and operational applications that makes it easy to store and analyze trillions of time series data points per day.[125] Timestream enables you to keep data for months or years and access it quickly when you need it.[126]\\n\\n\\n\\n### Amazon Managed Streaming for Apache Kafka[edit]\\n\\n\\nAmazon Managed Streaming for Apache Kafka (Amazon MSK) is a fully managed service that makes it easy for you to build and run applications that use Apache Kafka to process streaming data.[127] Apache Kafka is an open-source platform for distributed stream processing.[128]\\n\\n\\n\\n### Amazon Managed Blockchain[edit]\\n\\n\\nAmazon Managed Blockchain is a fully managed service that makes it easy to create and manage scalable blockchain networks using popular open source frameworks.[129] Blockchain is a technology that records transactions on a distributed, often public, ledger.[130]\\n\\n\\n\\n### Amazon Quantum Ledger Database[edit]\\n\\n\\nAmazon Quantum Ledger Database (QLDB) is a fully managed ledger database that provides a transparent, immutable, and cryptographically verifiable transaction log.[131] Owned by a central trusted authority, it eliminates the need to engage in the complex development effort typically required to build your own ledger-like applications.[132]\\n\\n\\n\\n### Amazon Keyspaces[edit]\\n\\n\\nAmazon Keyspaces (for Apache Cassandra) is a scalable, highly available, and managed Apache Cassandra\u2013compatible database service.[133] This database is ideal for use cases that require high availability with no downtime.[134]\\n\\n\\n\\n### Amazon DocumentDB[edit]\\n\\n\\nAmazon DocumentDB (with MongoDB compatibility) is a document database service that makes it easy to store, search, and manage semi-structured data.[135] It is a non-relational database designed for JSON-like data storage.[136]\\n\\n\\n\\n### Amazon Neptune[edit]\\n\\n\\nAmazon Neptune is a fast, reliable, fully-managed graph database service that makes it easy to build and run applications that work with highly connected datasets.[137] The core of Amazon Neptune is a purpose-built, high-performance graph database engine optimized for storing billions of relationships and querying the graph with milliseconds latency.[138]\\n\\n\\n\\n### Amazon Elastic File System[edit]\\n\\n\\nAmazon Elastic File System (Amazon EFS) provides a simple, scalable, fully managed elastic NFS file system for use with AWS Cloud services and on-premises resources.[139] It is built to scale on demand to petabytes without disrupting applications, growing and shrinking automatically as you add and remove files.[140]\\n\\n\\n\\n### Amazon FSx[edit]\\n\\n\\nAmazon FSx makes it easy and cost effective to launch, run, and scale popular file systems that are fully managed by AWS.[141] The first one available is Amazon FSx for Windows File Server, which provides fully managed Microsoft Windows file servers with features and performance optimized for a wide variety of Windows-based applications.[142]\\n\\n\\n\\n### Amazon SageMaker Ground Truth[edit]\\n\\n\\nAmazon SageMaker Ground Truth is a fully managed data labeling service that makes it easy to build highly accurate training datasets quickly.[143] Ground Truth offers easy-to-use labeling interfaces for common data labeling tasks.[144]\\n\\n\\n\\n### AWS Lambda[edit]\\n\\n\\nAWS Lambda is a compute service that runs code in response to events and automatically manages the compute resources required by that code.[145] It was introduced in November 2014.[146]\\n\\n\\n\\n### AWS Batch[edit]\\n\\n\\nAWS Batch enables developers, scientists, and engineers to easily and efficiently run hundreds of thousands of batch computing jobs on AWS.[147] AWS Batch dynamically provisions the optimal quantity and type of compute resources (e.g., CPU or memory optimized instances) based on the volume and specific resource requirements of the batch jobs submitted.[148]\\n\\n\\n\\n### AWS Step Functions[edit]\\n\\n\\nAWS Step Functions is a web service that enables you to coordinate the components of distributed applications and microservices using visual workflows.[149] You build applications from individual components that each perform a discrete function, or \\\"step\\\", allowing you to scale and change applications quickly.[150]\\n\\n\\n\\n### AWS Glue[edit]\\n\\n\\nAWS Glue is a fully managed extract, transform, and load (ETL) service that makes it easy for you to prepare and load data for analytics.[151] You can create and run an ETL job with a few clicks in the AWS Management Console.[152]\\n\\n\\n\\n### AWS Data Pipeline[edit]\\n\\n\\nAWS Data Pipeline is a web service that helps you reliably process and move data between different AWS compute and storage services, as well as on-premises data sources, at specified intervals.[153] With AWS Data Pipeline, you can regularly access your data where it's stored, transform and process it at scale, and efficiently transfer the results to AWS services such as Amazon S3, Amazon RDS, Amazon DynamoDB, and Amazon EMR.[154]\\n\\n\\n\\n### AWS Database Migration Service[edit]\\n\\n\\nAWS Database Migration Service helps you migrate databases to AWS quickly and securely.[155] The source database remains fully operational during the migration, minimizing downtime to applications that rely on the database.[156]\\n\\n\\n\\n### AWS Schema Conversion Tool[edit]\\n\\n\\nAWS Schema Conversion Tool is a tool for converting the schema and code of your databases to a format that can be easily migrated to AWS.[157] It automatically converts the schema and generates the scripts needed to migrate your data.[158]\\n\\n\\n\\n### AWS Snowball[edit]\\n\\n\\nAWS Snowball is a petabyte-scale data transport solution that uses secure appliances to transfer large amounts of data into and out of AWS.[159] Using Snowball addresses common challenges with large-scale data transfers including high network costs, long transfer times, and security concerns.[160]\\n\\n\\n\\n### AWS Snowmobile[edit]\\n\\n\\nAWS Snowmobile is an Exabyte-scale data transfer service used to move extremely large amounts of data to AWS, including video libraries, image repositories, or even a complete data center migration.[161] It can transfer up to 100PB per Snowmobile, a 45-foot long ruggedized shipping container, pulled by a semi-trailer truck.[162]\\n\\n\\n\\n### AWS Snowcone[edit]\\n\\n\\nAWS Snowcone is a small, rugged, and secure edge computing and data transfer device.[163] It can collect, process, and move data to AWS, either offline by shipping the device through AWS Snowcone shipping, or online with AWS DataSync.[164]\\n\\n\\n\\n### AWS Outposts[edit]\\n\\n\\nAWS Outposts is a fully managed service that extends AWS infrastructure, AWS services, APIs, and tools to customer premises.[165] Outposts is ideal for workloads that require low latency access to on-premises systems, local data processing, or local data residency.[166]\\n\\n\\n\\n### AWS Local Zones[edit]\\n\\n\\nAWS Local Zones place compute, storage, database, and other select services closer to large population, industry, and IT centers where no AWS Region exists today.[167] AWS Local Zones allow customers to easily run applications that require single-digit millisecond latencies to end-users or on-premises installations.[168]\\n\\n\\n\\n### AWS Wavelength[edit]\\n\\n\\nAWS Wavelength embeds AWS compute and storage services within the telecommunications providers' datacenters at the edge of the 5G network.[169] This allows application traffic to reach application servers running in Wavelength Zones without leaving the telecommunications providers' network. This reduces the latency to connect to an application from a mobile device.[170]\\n\\n\\n\\n### AWS IoT Greengrass[edit]\\n\\n\\nAWS IoT Greengrass is an Internet of Things (IoT) open-source edge runtime and cloud service that lets connected devices perform AWS Lambda functions, keep device data in sync, and communicate with other devices securely \\u2013 even when not connected to the Internet.[171] With AWS IoT Greengrass, connected devices can respond quickly to local events, use AWS Lambda functions, process local data, and reduce the cost of transmitting IoT data to the cloud.[172]\\n\\n\\n\\n### AWS IoT Core[edit]\\n\\n\\nAWS IoT Core is a managed cloud service that lets connected devices easily and securely interact with cloud applications and other devices.[173] AWS IoT Core can support billions of devices and trillions of messages, and can process and route those messages to AWS endpoints and to other devices reliably and securely.[174]\\n\\n\\n\\n### AWS IoT Device Management[edit]\\n\\n\\nAWS IoT Device Management is a cloud service that makes it easy to securely onboard, organize, monitor, and remotely manage IoT devices at scale.[175] With AWS IoT Device Management, you can easily register your device, quickly find any IoT device in your device registry, remotely update the software running on your device, and remotely reboot, restart, and reset your devices.[176]\\n\\n\\n\\n### AWS IoT Analytics[edit]\\n\\n\\nAWS IoT Analytics is a fully-managed service that makes it easy to run and operationalize sophisticated analytics on massive volumes of IoT data without having to worry about the cost and complexity typically required to build an IoT analytics platform.[177] It is the easiest way to run analytics on IoT data and get insights to make better and more accurate decisions for IoT applications and machine learning use cases.[178]\\n\\n\\n\\n### AWS IoT Events[edit]\\n\\n\\nAWS IoT Events is a fully managed service that makes it easy to detect and respond to changes indicated by IoT sensor and application data.[179] It was designed to monitor equipment or industrial processes and to trigger actions or alerts in response to events, such as when a temperature reading indicates that a freezer door has been left open.[180]\\n\\n\\n\\n### AWS IoT SiteWise[edit]\\n\\n\\nAWS IoT SiteWise is a managed service that makes it easy to collect, store, organize and monitor data from industrial equipment at scale.[181] With AWS IoT SiteWise, you can easily monitor operations across multiple facilities, quickly compute common industrial performance metrics, and create applications to analyze industrial equipment data, prevent costly equipment issues, and reduce gaps in production.[182]\\n\\n\\n\\n### AWS IoT Things Graph[edit]\\n\\n\\nAWS IoT Things Graph is a service that makes it easy for developers to connect different devices and web services to build IoT applications.[183] AWS IoT Things Graph provides a visual drag-and-drop interface for connecting devices and web services.[184]\\n\\n\\n\\n### AWS IoT Greengrass v2[edit]\\n\\n\\nAWS IoT Greengrass v2 is an Internet of Things (IoT) open-source edge runtime and cloud service that lets you build, deploy, and manage device software. It enables devices to collect and process data, communicate with other devices securely \\u2013 even when they are offline \\u2013 and sync to the cloud.[185] AWS IoT Greengrass v2 automatically manages the complexity of securely connecting devices with each other and the cloud. This lets you focus on building IoT applications instead of managing infrastructure.[186]\\n\\n\\n\\n### AWS IoT TwinMaker[edit]\\n\\n\\nAWS IoT TwinMaker makes it easy to create digital twins of real-world systems such as buildings, factories, industrial equipment, and production lines.[187] With AWS IoT TwinMaker, you can easily create digital twins of any real-world system and use them to monitor and optimize the operations of the system.[188]\\n\\n\\n\\n### AWS Amplify[edit]\\n\\n\\nAWS Amplify is a set of tools and services that enables mobile and front-end web developers to build secure, scalable fullstack applications, powered by AWS.[189] With Amplify, you can easily add advanced features such as user authentication, analytics, and content delivery, or build your own custom business logic.[190]\\n\\n\\n\\n### AWS AppSync[edit]\\n\\n\\nAWS AppSync is a managed service that uses GraphQL to make it easy for applications to get exactly the data they need.[191] With AWS AppSync, you can build scalable applications, including those requiring real-time updates and offline data synchronization, by connecting your apps to data sources such as Amazon DynamoDB, Amazon Aurora, and Amazon S3.[192]\\n\\n\\n\\n### AWS Device Farm[edit]\\n\\n\\nAWS Device Farm is an app testing service that lets you test and interact with your Android, iOS, and web apps on many real, physical phones and tablets that are hosted by AWS.[193] You can choose from a large selection of physical devices to test your app for compatibility and performance.[194]\\n\\n\\n\\n### AWS Amplify Studio[edit]\\n\\n\\nAWS Amplify Studio is a visual development environment that offers a point-and-click interface and a real-time preview to build a fullstack serverless app in hours.[195] It automatically provisions the necessary AWS services and infrastructure to deploy and host your app.[196]\\n\\n\\n\\n### AWS CodeStar[edit]\\n\\n\\nAWS CodeStar enables you to quickly develop, build, and deploy applications on AWS.[197] AWS CodeStar provides a unified user interface, enabling you to easily manage your development activities in one place.[198]\\n\\n\\n\\n### AWS CodeCommit[edit]\\n\\n\\nAWS CodeCommit is a fully-managed source control service that hosts secure and highly scalable Git repositories.[199] CodeCommit eliminates the need to operate your own source control system or worry about scaling its infrastructure.[200]\\n\\n\\n\\n### AWS CodeBuild[edit]\\n\\n\\nAWS CodeBuild is a fully managed build service that compiles source code, runs tests, and produces software packages that are ready to deploy.[201] CodeBuild eliminates the need to provision, manage, and scale your own build servers. It processes multiple builds concurrently, ensuring that your build queue is never backed up.[202]\\n\\n\\n\\n### AWS CodeDeploy[edit]\\n\\n\\nAWS CodeDeploy is a deployment service that automates application deployments to Amazon EC2, AWS Fargate, AWS Lambda, and your on-premises servers.[203] CodeDeploy makes it easier for you to rapidly release new features, helps you avoid downtime during application deployment, and handles the complexity of updating your applications.[204]\\n\\n\\n\\n### AWS CodePipeline[edit]\\n\\n\\nAWS CodePipeline is a continuous integration and continuous delivery service for fast and reliable application and infrastructure updates.[205] CodePipeline builds, tests, and deploys your code every time there is a code change, based on the release process models you define.[206]\\n\\n\\n\\n### AWS CodeArtifact[edit]\\n\\n\\nAWS CodeArtifact is a fully managed artifact repository service that makes it easy for teams and organizations to store, publish, and share software packages used in their software development process.[207] All artifact assets are encrypted and you can integrate with existing tools to publish or retrieve artifacts.[208]\\n\\n\\n\\n### AWS CodeGuru[edit]\\n\\n\\nAWS CodeGuru is a developer tool powered by machine learning that provides intelligent recommendations for improving code quality and identifying an application's most expensive lines of code.[209] An automated code reviewer and application profiler, CodeGuru helps you find and fix code issues such as resource leaks, potential concurrency issues, and wasted CPU cycles.[210]\\n\\n\\n\\n### AWS Cloud9[edit]\\n\\n\\nAWS Cloud9 is a collection of tools that lets you write, run, and debug your code with just your browser.[211] This includes features such as a code editor, debugger, and terminal.[212]\\n\\n\\n\\n### AWS X-Ray[edit]\\n\\n\\nAWS X-Ray helps developers analyze and debug distributed applications, such as those built using a microservices architecture.[213] With X-Ray, you can understand how your application and its underlying services are performing to identify and troubleshoot the root cause of performance issues and errors.[214]\\n\\n\\n\\n### AWS App Runner[edit]\\n\\n\\nAWS App Runner is a fully managed service that makes it easy for developers to quickly deploy containerized web applications and APIs, at scale and with no infrastructure management.[215] With App Runner, you can easily build and run containerized web applications and APIs without managing servers.[216]\\n\\n\\n\\n### AWS Proton[edit]\\n\\n\\nAWS Proton is an application deployment service for containers and serverless architectures that is integrated with the AWS management console.[217] It automates and manages the infrastructure needed for microservices-based applications, including compute, networking, and service discovery.[218]\\n\\n\\n\\n### AWS Copilot CLI[edit]\\n\\n\\nThe AWS Copilot CLI is a command line interface tool that enables you to quickly launch and manage containerized applications on Amazon ECS and AWS Fargate.[219] It streamlines building, pushing and deploying your application as containers to the cloud.[220]\\n\\n\\n\\n### AWS Fargate[edit]\\n\\n\\nAWS Fargate is a serverless, pay-as-you-go compute engine for Amazon ECS that allows you to run containers without having to manage the underlying instances.[221] With Fargate, you no longer have to provision, configure, or scale clusters of virtual machines to run containers.[222]\\n\\n\\n\\n### AWS Bottlerocket[edit]\\n\\n\\nAWS Bottlerocket is a Linux-based open-source operating system that is purpose-built by Amazon Web Services for running containers.[223] As an operating system, Bottlerocket includes only the software required to run containers and is designed to improve security and reduce management overhead.[224]\\n\\n\\n\\n### AWS Lightsail Containers[edit]\\n\\n\\nAWS Lightsail Containers is a fully managed service that makes it easy to deploy and manage containers without requiring deep container orchestration expertise.[225] It offers a simple management console, pre-configured container images, and secure networking.[226]\\n\\n\\n\\n### AWS App2Container[edit]\\n\\n\\nAWS App2Container is a feature of AWS App Runner that enables you to build and deploy containerized applications directly from your source code or a container image.[227] It simplifies the process of containerizing applications and managing the underlying infrastructure.[228]\\n\\n\\n\\n### AWS Cloud Development Kit (CDK)[edit]\\n\\n\\nThe AWS Cloud Development Kit (AWS CDK) is an open-source software development framework to define cloud infrastructure in code and provision it through AWS CloudFormation.[229] It enables developers to use familiar programming languages to define reusable cloud components.[230]\\n\\n\\n\\n### AWS Amplify CodeGen[edit]\\n\\n\\nAWS Amplify CodeGen is a feature of AWS Amplify that automatically generates backend and frontend code for your application based on your data model.[231] It supports various authentication providers and integrates with AWS services like Amazon Cognito, AWS AppSync, and AWS Lambda.[232]\\n\\n\\n\\n### AWS CDK Pipelines[edit]\\n\\n\\nAWS CDK Pipelines is a feature of the AWS Cloud Development Kit (CDK) that enables you to create continuous integration and continuous delivery (CI/CD) pipelines for your serverless applications.[233] It automates the process of testing and deploying your CDK apps.[234]\\n\\n\\n\\n### AWS CDK Patterns[edit]\\n\\n\\nAWS CDK Patterns is a library of reusable, well-architected cloud components that you can compose to build serverless applications.[235] It provides a collection of patterns for common use cases, such as implementing authentication, authorization, and data storage.[236]\\n\\n\\n\\n### AWS CDK Constructs[edit]\\n\\n\\nAWS CDK Constructs is a library of reusable cloud components that you can use to build serverless applications.[237] It provides a higher level of abstraction than the AWS CDK, allowing you to define cloud resources using simple, declarative syntax.[238]\\n\\n\\n\\n### AWS CDK Aspects[edit]\\n\\n\\nAWS CDK Aspects is a feature of the AWS Cloud Development Kit (CDK) that enables you to apply cross-cutting concerns to your CDK applications.[239] Aspects allow you to modify the behavior of CDK constructs without changing their implementation.[240]\\n\\n\\n\\n### AWS CDK CLI[edit]\\n\\n\\nThe AWS CDK CLI is a command line interface tool that enables you to interact with the AWS Cloud Development Kit (CDK) from the command line.[241] It allows you to synthesize, deploy, and diff your CDK applications.[242]\\n\\n\\n\\n### AWS CDK Watchful[edit]\\n\\n\\nAWS CDK Watchful is a feature of the AWS Cloud Development Kit (CDK) that enables you to monitor and manage your CDK applications.[243] It provides a web-based dashboard that displays the status of your CDK stacks and allows you to take actions such as deploying or deleting stacks.[244]\\n\\n\\n\\n### AWS CDK Nag[edit]\\n\\n\\nAWS CDK Nag is a feature of the AWS Cloud Development Kit (CDK) that enables you to monitor the health and performance of your CDK applications.[245] It provides a set of Nagios plugins that you can use to monitor the status of your CDK stacks and resources.[246]\\n\\n\\n\\n### AWS CDK Pipeline IAM Roles[edit]\\n\\n\\nAWS CDK Pipeline IAM Roles is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the IAM roles required for your CDK pipelines.[247] It provides a set of pre-defined IAM roles that you can use to grant the necessary permissions to your CDK pipeline stages.[248]\\n\\n\\n\\n### AWS CDK Pipeline Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts produced by your CDK pipelines.[249] It provides a set of pre-defined artifact stores that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[250]\\n\\n\\n\\n### AWS CDK Pipeline Notifications[edit]\\n\\n\\nAWS CDK Pipeline Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of your CDK pipelines.[251] It provides a set of pre-defined notification channels that you can use to send notifications to your preferred communication channels.[252]\\n\\n\\n\\n### AWS CDK Pipeline Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for your CDK pipelines.[253] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[254]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[255] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages.[256]\\n\\n\\n\\n### AWS CDK Pipeline Stage Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the actions that are performed by the stages of your CDK pipelines.[257] It provides a set of pre-defined stage action types that you can use to automate the deployment and testing of your CDK applications.[258]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[259] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[260]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[261] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[262]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[263] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[264]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[265] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[266]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[267] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[268]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[269] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[270]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[271] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[272]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[273] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[274]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[275] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[276]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[277] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[278]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[279] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[280]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[281] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[282]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[283] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[284]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[285] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[286]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[287] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[288]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[289] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[290]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[291] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[292]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[293] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[294]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[295] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[296]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[297] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[298]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[299] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[300]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[301] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[302]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[303] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[304]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[305] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[306]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[307] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[308]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[309] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[310]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[311] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[312]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[313] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[314]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[315] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[316]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[317] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[318]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[319] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[320]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[321] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[322]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[323] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[324]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[325] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[326]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[327] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[328]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[329] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[330]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[331] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[332]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[333] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[334]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[335] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[336]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[337] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[338]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[339] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[340]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[341] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[342]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[343] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[344]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[345] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[346]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[347] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[348]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[349] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[350]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[351] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[352]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[353] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[354]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[355] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[356]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[357] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[358]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[359] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[360]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[361] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[362]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[363] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[364]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[365] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[366]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[367] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[368]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[369] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[370]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[371] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[372]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[373] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[374]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[375] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[376]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[377] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[378]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[379] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[380]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[381] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[382]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[383] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[384]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[385] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[386]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[387] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[388]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[389] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[390]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[391] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[392]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[393] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[394]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[395] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[396]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[397] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[398]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[399] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[400]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[401] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[402]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[403] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[404]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[405] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[406]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[407] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[408]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[409] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[410]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[411] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[412]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[413] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[414]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[415] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[416]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[417] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[418]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[419] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[420]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[421] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[422]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[423] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[424]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[425] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[426]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[427] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[428]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[429] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[430]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[431] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[432]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[433] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[434]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[435] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[436]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[437] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[438]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[439] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[440]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[441] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[442]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[443] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[444]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[445] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[446]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[447] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[448]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[449] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[450]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[451] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[452]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[453] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[454]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[455] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[456]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[457] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[458]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[459] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[460]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[461] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[462]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[463] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[464]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[465] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[466]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[467] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[468]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[469] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[470]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[471] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[472]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[473] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[474]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[475] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[476]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[477] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[478]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[479] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[480]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[481] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[482]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[483] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[484]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[485] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[486]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[487] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[488]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[489] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[490]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[491] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[492]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[493] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[494]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[495] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[496]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[497] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[498]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[499] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[500]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[501] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[502]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[503] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[504]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[505] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[506]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[507] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[508]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[509] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[510]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[511] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[512]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[513] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[514]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[515] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[516]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[517] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[518]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[519] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[520]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[521] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[522]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[523] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[524]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[525] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[526]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[527] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[528]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[529] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[530]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[531] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[532]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[533] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[534]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[535] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[536]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[537] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[538]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[539] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[540]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[541] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[542]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[543] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[544]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[545] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[546]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[547] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[548]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[549] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[550]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[551] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[552]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[553] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[554]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[555] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[556]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[557] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[558]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[559] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[560]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[561] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[562]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[563] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[564]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[565] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[566]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[567] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[568]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[569] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[570]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[571] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[572]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[573] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[574]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[575] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[576]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[577] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[578]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[579] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[580]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[581] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[582]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[583] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[584]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[585] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[586]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[587] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[588]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[589] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[590]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[591] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[592]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[593] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[594]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[595] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[596]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[597] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[598]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[599] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[600]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[601] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[602]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[603] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[604]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[605] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[606]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[607] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[608]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[609] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[610]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[611] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[612]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[613] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[614]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[615] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[616]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[617] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[618]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[619] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[620]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[621] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[622]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[623] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[624]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[625] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[626]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[627] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[628]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[629] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[630]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[631] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[632]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[633] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[634]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[635] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[636]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[637] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[638]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[639] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[640]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[641] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[642]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[643] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[644]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[645] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[646]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[647] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[648]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[649] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[650]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[651] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[652]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[653] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[654]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[655] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[656]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[657] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[658]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[659] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[660]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[661] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[662]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[663] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[664]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[665] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[666]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[667] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[668]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[669] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[670]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[671] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[672]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[673] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[674]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[675] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[676]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[677] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[678]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[679] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[680]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[681] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[682]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[683] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[684]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[685] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[686]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[687] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[688]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[689] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[690]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[691] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[692]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[693] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[694]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[695] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[696]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[697] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[698]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[699] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[700]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[701] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[702]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[703] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[704]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[705] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[706]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[707] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[708]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[709] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[710]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[711] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[712]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[713] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[714]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[715] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[716]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[717] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[718]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[719] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[720]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[721] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[722]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[723] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[724]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[725] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[726]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[727] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[728]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[729] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[730]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[731] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[732]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[733] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[734]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[735] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[736]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[737] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[738]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[739] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[740]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[741] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[742]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[743] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[744]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[745] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[746]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[747] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[748]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[749] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[750]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[751] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[752]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[753] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[754]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[755] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[756]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[757] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[758]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[759] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[760]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[761] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[762]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[763] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[764]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[765] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[766]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[767] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[768]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[769] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[770]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[771] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[772]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[773] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[774]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[775] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[776]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[777] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[778]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[779] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[780]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[781] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[782]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[783] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[784]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[785] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[786]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[787] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[788]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[789] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[790]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[791] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[792]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[793] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[794]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[795] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[796]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[797] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[798]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[799] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[800]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[801] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[802]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[803] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[804]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[805] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[806]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[807] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[808]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[809] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[810]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[811] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[812]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[813] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[814]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[815] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[816]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[817] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[818]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[819] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[820]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[821] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[822]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[823] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[824]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[825] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[826]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[827] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[828]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[829] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[830]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[831] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[832]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[833] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[834]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[835] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[836]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[837] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[838]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[839] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[840]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[841] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[842]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[843] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[844]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[845] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[846]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[847] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[848]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[849] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[850]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[851] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[852]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[853] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[854]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[855] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[856]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[857] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[858]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[859] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[860]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[861] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[862]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[863] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[864]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[865] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[866]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[867] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[868]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[869] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[870]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[871] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[872]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[873] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[874]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[875] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[876]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[877] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[878]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[879] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[880]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[881] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[882]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[883] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[884]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[885] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[886]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[887] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[888]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[889] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[890]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[891] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[892]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[893] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[894]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[895] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[896]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[897] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[898]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[899] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[900]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[901] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[902]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[903] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[904]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[905] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[906]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[907] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[908]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[909] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[910]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[911] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[912]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[913] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[914]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[915] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[916]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[917] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[918]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[919] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[920]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[921] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[922]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[923] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[924]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[925] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[926]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[927] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[928]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[929] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[930]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[931] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[932]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[933] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[934]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[935] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[936]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[937] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[938]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[939] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[940]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[941] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[942]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[943] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[944]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[945] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[946]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[947] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[948]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[949] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[950]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[951] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[952]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[953] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[954]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[955] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[956]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[957] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[958]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[959] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[960]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[961] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[962]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[963] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[964]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[965] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[966]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[967] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[968]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[969] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[970]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[971] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[972]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[973] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[974]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[975] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[976]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[977] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[978]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[979] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[980]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[981] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[982]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[983] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[984]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[985] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[986]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[987] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[988]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[989] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[990]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[991] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[992]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[993] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[994]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[995] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[996]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[997] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[998]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[999] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1000]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1001] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1002]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1003] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1004]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1005] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1006]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1007] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1008]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1009] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1010]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1011] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1012]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1013] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1014]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1015] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1016]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1017] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1018]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1019] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1020]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1021] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1022]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1023] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1024]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1025] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1026]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1027] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1028]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1029] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1030]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1031] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1032]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1033] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1034]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1035] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1036]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1037] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1038]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1039] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1040]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1041] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1042]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1043] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1044]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1045] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1046]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1047] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1048]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1049] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1050]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1051] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1052]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1053] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1054]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1055] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1056]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1057] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1058]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1059] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1060]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1061] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1062]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1063] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1064]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1065] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1066]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1067] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1068]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1069] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1070]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1071] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1072]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1073] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1074]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1075] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1076]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1077] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1078]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1079] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1080]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1081] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1082]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1083] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1084]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1085] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1086]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1087] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1088]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1089] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1090]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1091] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1092]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1093] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1094]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1095] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1096]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1097] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1098]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1099] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1100]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1101] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1102]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1103] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1104]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1105] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1106]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1107] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1108]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1109] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1110]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1111] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1112]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1113] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1114]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1115] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1116]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1117] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1118]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1119] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1120]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1121] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1122]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1123] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1124]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1125] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1126]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1127] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1128]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1129] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1130]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1131] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1132]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1133] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1134]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1135] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1136]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1137] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1138]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1139] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1140]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1141] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1142]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1143] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1144]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1145] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1146]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1147] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1148]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1149] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1150]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1151] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1152]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1153] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1154]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1155] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1156]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1157] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1158]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1159] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1160]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1161] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1162]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1163] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1164]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1165] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1166]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1167] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1168]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1169] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1170]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1171] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1172]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1173] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1174]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1175] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1176]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1177] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1178]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1179] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1180]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1181] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1182]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1183] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1184]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1185] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1186]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1187] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1188]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1189] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1190]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1191] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1192]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1193] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1194]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1195] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1196]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1197] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1198]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1199] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1200]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1201] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1202]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1203] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1204]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1205] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1206]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1207] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1208]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1209] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1210]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1211] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1212]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1213] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1214]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1215] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1216]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1217] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1218]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1219] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1220]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1221] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1222]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1223] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1224]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1225] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1226]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1227] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1228]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1229] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1230]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1231] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1232]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1233] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1234]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1235] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1236]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1237] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1238]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1239] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1240]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1241] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1242]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1243] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1244]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1245] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1246]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1247] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1248]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1249] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1250]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1251] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1252]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1253] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1254]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1255] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1256]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1257] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1258]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1259] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1260]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1261] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1262]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1263] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1264]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1265] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1266]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1267] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1268]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1269] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1270]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1271] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1272]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1273] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1274]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1275] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1276]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1277] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1278]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1279] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1280]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1281] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1282]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1283] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1284]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1285] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1286]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1287] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1288]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1289] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1290]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1291] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1292]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1293] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1294]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1295] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1296]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1297] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1298]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1299] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1300]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1301] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1302]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1303] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1304]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1305] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1306]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1307] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1308]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1309] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1310]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1311] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1312]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1313] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1314]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1315] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1316]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1317] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1318]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1319] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1320]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1321] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1322]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1323] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1324]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1325] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1326]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1327] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1328]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1329] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1330]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1331] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1332]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1333] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1334]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1335] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1336]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1337] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1338]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1339] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1340]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1341] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1342]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1343] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1344]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1345] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1346]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1347] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1348]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1349] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1350]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1351] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1352]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the outputs that are produced by the stages of your CDK pipelines.[1353] It provides a set of pre-defined stage output types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1354]\\n\\n\\n\\n### AWS CDK Pipeline Stage Inputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Inputs is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the inputs that are required by the stages of your CDK pipelines.[1355] It provides a set of pre-defined stage input types that you can use to provide the necessary data and resources to your CDK pipeline stages.[1356]\\n\\n\\n\\n### AWS CDK Pipeline Stage Artifacts[edit]\\n\\n\\nAWS CDK Pipeline Stage Artifacts is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the artifacts that are produced and consumed by the stages of your CDK pipelines.[1357] It provides a set of pre-defined artifact store types that you can use to store and retrieve the artifacts generated by your CDK pipeline stages.[1358]\\n\\n\\n\\n### AWS CDK Pipeline Stage Notifications[edit]\\n\\n\\nAWS CDK Pipeline Stage Notifications is a feature of the AWS Cloud Development Kit (CDK) that enables you to receive notifications about the status of the stages of your CDK pipelines.[1359] It provides a set of pre-defined notification channel types that you can use to send notifications to your preferred communication channels based on the status of your CDK pipeline stages.[1360]\\n\\n\\n\\n### AWS CDK Pipeline Stage Custom Actions[edit]\\n\\n\\nAWS CDK Pipeline Stage Custom Actions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define custom actions for the stages of your CDK pipelines.[1361] It provides a set of pre-defined custom action types that you can use to extend the functionality of your CDK pipeline stages.[1362]\\n\\n\\n\\n### AWS CDK Pipeline Stage Transitions[edit]\\n\\n\\nAWS CDK Pipeline Stage Transitions is a feature of the AWS Cloud Development Kit (CDK) that enables you to manage the transitions between the stages of your CDK pipelines.[1363] It provides a set of pre-defined stage transition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1364]\\n\\n\\n\\n### AWS CDK Pipeline Stage Conditions[edit]\\n\\n\\nAWS CDK Pipeline Stage Conditions is a feature of the AWS Cloud Development Kit (CDK) that enables you to define the conditions that must be met for the stages of your CDK pipelines to transition.[1365] It provides a set of pre-defined stage condition types that you can use to control the flow of your CDK pipeline stages based on the status of your CDK applications.[1366]\\n\\n\\n\\n### AWS CDK Pipeline Stage Outputs[edit]\\n\\n\\nAWS CDK Pipeline Stage Outputs is a feature of the AWS Cloud Development Kit (CDK) that enables",
          "name": "delegate",
          "tool_call_id": "0d006133-bd33-45df-8dfe-d0ec25fc90d8",
          "tool_calls": null,
          "is_tool_call_error": false
        }
      ],
      "state": "stopped",
      "name": "root",
      "engine_type": "MixtralFunctionCallingAdapter",
      "engine_repr": "MixtralFunctionCallingAdapter(engine=VLLMEngine(model=<vllm.engine.async_llm_engine.AsyncLLMEngine object at 0x7f8ecf532bd0>, tokenizer=CachedLlamaTokenizerFast(name_or_path='mistralai/Mistral-Large-Instruct-2407', vocab_size=32768, model_max_length=1000000000000000019884624838656, is_fast=True, padding_side='left', truncation_side='left', special_tokens={'bos_token': '<s>', 'eos_token': '</s>', 'unk_token': '<unk>'}, clean_up_tokenization_spaces=False),  added_tokens_decoder={\n\t0: AddedToken(\"<unk>\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t1: AddedToken(\"<s>\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t2: AddedToken(\"</s>\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t3: AddedToken(\"[INST]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t4: AddedToken(\"[/INST]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t5: AddedToken(\"[TOOL_CALLS]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t6: AddedToken(\"[AVAILABLE_TOOLS]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t7: AddedToken(\"[/AVAILABLE_TOOLS]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t8: AddedToken(\"[TOOL_RESULTS]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t9: AddedToken(\"[/TOOL_RESULTS]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t10: AddedToken(\"[IMG]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t11: AddedToken(\"[PREFIX]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t12: AddedToken(\"[MIDDLE]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t13: AddedToken(\"[SUFFIX]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t14: AddedToken(\"[IMG_BREAK]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t15: AddedToken(\"[IMG_END]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t16: AddedToken(\"[control_14]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t17: AddedToken(\"[control_15]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t18: AddedToken(\"[control_16]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t19: AddedToken(\"[control_17]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t20: AddedToken(\"[control_18]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t21: AddedToken(\"[control_19]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t22: AddedToken(\"[control_20]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t23: AddedToken(\"[control_21]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t24: AddedToken(\"[control_22]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t25: AddedToken(\"[control_23]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t26: AddedToken(\"[control_24]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t27: AddedToken(\"[control_25]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t28: AddedToken(\"[control_26]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t29: AddedToken(\"[control_27]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t30: AddedToken(\"[control_28]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t31: AddedToken(\"[control_29]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t32: AddedToken(\"[control_30]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t33: AddedToken(\"[control_31]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t34: AddedToken(\"[control_32]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t35: AddedToken(\"[control_33]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t36: AddedToken(\"[control_34]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t37: AddedToken(\"[control_35]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t38: AddedToken(\"[control_36]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t39: AddedToken(\"[control_37]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t40: AddedToken(\"[control_38]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t41: AddedToken(\"[control_39]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t42: AddedToken(\"[control_40]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t43: AddedToken(\"[control_41]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t44: AddedToken(\"[control_42]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t45: AddedToken(\"[control_43]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t46: AddedToken(\"[control_44]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t47: AddedToken(\"[control_45]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t48: AddedToken(\"[control_46]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t49: AddedToken(\"[control_47]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t50: AddedToken(\"[control_48]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t51: AddedToken(\"[control_49]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t52: AddedToken(\"[control_50]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t53: AddedToken(\"[control_51]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t54: AddedToken(\"[control_52]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t55: AddedToken(\"[control_53]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t56: AddedToken(\"[control_54]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t57: AddedToken(\"[control_55]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t58: AddedToken(\"[control_56]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t59: AddedToken(\"[control_57]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t60: AddedToken(\"[control_58]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t61: AddedToken(\"[control_59]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t62: AddedToken(\"[control_60]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t63: AddedToken(\"[control_61]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t64: AddedToken(\"[control_62]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t65: AddedToken(\"[control_63]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t66: AddedToken(\"[control_64]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t67: AddedToken(\"[control_65]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t68: AddedToken(\"[control_66]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t69: AddedToken(\"[control_67]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t70: AddedToken(\"[control_68]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t71: AddedToken(\"[control_69]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t72: AddedToken(\"[control_70]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t73: AddedToken(\"[control_71]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t74: AddedToken(\"[control_72]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t75: AddedToken(\"[control_73]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t76: AddedToken(\"[control_74]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t77: AddedToken(\"[control_75]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t78: AddedToken(\"[control_76]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t79: AddedToken(\"[control_77]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t80: AddedToken(\"[control_78]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t81: AddedToken(\"[control_79]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t82: AddedToken(\"[control_80]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t83: AddedToken(\"[control_81]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t84: AddedToken(\"[control_82]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t85: AddedToken(\"[control_83]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t86: AddedToken(\"[control_84]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t87: AddedToken(\"[control_85]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t88: AddedToken(\"[control_86]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t89: AddedToken(\"[control_87]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t90: AddedToken(\"[control_88]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t91: AddedToken(\"[control_89]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t92: AddedToken(\"[control_90]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t93: AddedToken(\"[control_91]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t94: AddedToken(\"[control_92]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t95: AddedToken(\"[control_93]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t96: AddedToken(\"[control_94]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t97: AddedToken(\"[control_95]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t98: AddedToken(\"[control_96]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t99: AddedToken(\"[control_97]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t100: AddedToken(\"[control_98]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t101: AddedToken(\"[control_99]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t102: AddedToken(\"[control_100]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t103: AddedToken(\"[control_101]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t104: AddedToken(\"[control_102]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t105: AddedToken(\"[control_103]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t106: AddedToken(\"[control_104]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t107: AddedToken(\"[control_105]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t108: AddedToken(\"[control_106]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t109: AddedToken(\"[control_107]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t110: AddedToken(\"[control_108]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t111: AddedToken(\"[control_109]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t112: AddedToken(\"[control_110]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t113: AddedToken(\"[control_111]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t114: AddedToken(\"[control_112]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t115: AddedToken(\"[control_113]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t116: AddedToken(\"[control_114]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t117: AddedToken(\"[control_115]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t118: AddedToken(\"[control_116]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t119: AddedToken(\"[control_117]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t120: AddedToken(\"[control_118]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t121: AddedToken(\"[control_119]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t122: AddedToken(\"[control_120]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t123: AddedToken(\"[control_121]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t124: AddedToken(\"[control_122]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t125: AddedToken(\"[control_123]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t126: AddedToken(\"[control_124]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t127: AddedToken(\"[control_125]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t128: AddedToken(\"[control_126]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t129: AddedToken(\"[control_127]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t130: AddedToken(\"[control_128]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t131: AddedToken(\"[control_129]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t132: AddedToken(\"[control_130]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t133: AddedToken(\"[control_131]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t134: AddedToken(\"[control_132]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t135: AddedToken(\"[control_133]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t136: AddedToken(\"[control_134]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t137: AddedToken(\"[control_135]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t138: AddedToken(\"[control_136]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t139: AddedToken(\"[control_137]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t140: AddedToken(\"[control_138]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t141: AddedToken(\"[control_139]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t142: AddedToken(\"[control_140]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t143: AddedToken(\"[control_141]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t144: AddedToken(\"[control_142]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t145: AddedToken(\"[control_143]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t146: AddedToken(\"[control_144]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t147: AddedToken(\"[control_145]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t148: AddedToken(\"[control_146]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t149: AddedToken(\"[control_147]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t150: AddedToken(\"[control_148]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t151: AddedToken(\"[control_149]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t152: AddedToken(\"[control_150]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t153: AddedToken(\"[control_151]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t154: AddedToken(\"[control_152]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t155: AddedToken(\"[control_153]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t156: AddedToken(\"[control_154]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t157: AddedToken(\"[control_155]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t158: AddedToken(\"[control_156]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t159: AddedToken(\"[control_157]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t160: AddedToken(\"[control_158]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t161: AddedToken(\"[control_159]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t162: AddedToken(\"[control_160]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t163: AddedToken(\"[control_161]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t164: AddedToken(\"[control_162]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t165: AddedToken(\"[control_163]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t166: AddedToken(\"[control_164]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t167: AddedToken(\"[control_165]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t168: AddedToken(\"[control_166]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t169: AddedToken(\"[control_167]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t170: AddedToken(\"[control_168]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t171: AddedToken(\"[control_169]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t172: AddedToken(\"[control_170]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t173: AddedToken(\"[control_171]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t174: AddedToken(\"[control_172]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t175: AddedToken(\"[control_173]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t176: AddedToken(\"[control_174]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t177: AddedToken(\"[control_175]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t178: AddedToken(\"[control_176]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t179: AddedToken(\"[control_177]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t180: AddedToken(\"[control_178]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t181: AddedToken(\"[control_179]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t182: AddedToken(\"[control_180]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t183: AddedToken(\"[control_181]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t184: AddedToken(\"[control_182]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t185: AddedToken(\"[control_183]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t186: AddedToken(\"[control_184]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t187: AddedToken(\"[control_185]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t188: AddedToken(\"[control_186]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t189: AddedToken(\"[control_187]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t190: AddedToken(\"[control_188]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t191: AddedToken(\"[control_189]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t192: AddedToken(\"[control_190]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t193: AddedToken(\"[control_191]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t194: AddedToken(\"[control_192]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t195: AddedToken(\"[control_193]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t196: AddedToken(\"[control_194]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t197: AddedToken(\"[control_195]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t198: AddedToken(\"[control_196]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t199: AddedToken(\"[control_197]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t200: AddedToken(\"[control_198]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t201: AddedToken(\"[control_199]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t202: AddedToken(\"[control_200]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t203: AddedToken(\"[control_201]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t204: AddedToken(\"[control_202]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t205: AddedToken(\"[control_203]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t206: AddedToken(\"[control_204]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t207: AddedToken(\"[control_205]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t208: AddedToken(\"[control_206]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t209: AddedToken(\"[control_207]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t210: AddedToken(\"[control_208]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t211: AddedToken(\"[control_209]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t212: AddedToken(\"[control_210]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t213: AddedToken(\"[control_211]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t214: AddedToken(\"[control_212]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t215: AddedToken(\"[control_213]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t216: AddedToken(\"[control_214]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t217: AddedToken(\"[control_215]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t218: AddedToken(\"[control_216]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t219: AddedToken(\"[control_217]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t220: AddedToken(\"[control_218]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t221: AddedToken(\"[control_219]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t222: AddedToken(\"[control_220]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t223: AddedToken(\"[control_221]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t224: AddedToken(\"[control_222]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t225: AddedToken(\"[control_223]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t226: AddedToken(\"[control_224]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t227: AddedToken(\"[control_225]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t228: AddedToken(\"[control_226]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t229: AddedToken(\"[control_227]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t230: AddedToken(\"[control_228]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t231: AddedToken(\"[control_229]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t232: AddedToken(\"[control_230]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t233: AddedToken(\"[control_231]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t234: AddedToken(\"[control_232]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t235: AddedToken(\"[control_233]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t236: AddedToken(\"[control_234]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t237: AddedToken(\"[control_235]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t238: AddedToken(\"[control_236]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t239: AddedToken(\"[control_237]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t240: AddedToken(\"[control_238]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t241: AddedToken(\"[control_239]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t242: AddedToken(\"[control_240]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t243: AddedToken(\"[control_241]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t244: AddedToken(\"[control_242]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t245: AddedToken(\"[control_243]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t246: AddedToken(\"[control_244]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t247: AddedToken(\"[control_245]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t248: AddedToken(\"[control_246]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t249: AddedToken(\"[control_247]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t250: AddedToken(\"[control_248]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t251: AddedToken(\"[control_249]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t252: AddedToken(\"[control_250]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t253: AddedToken(\"[control_251]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t254: AddedToken(\"[control_252]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t255: AddedToken(\"[control_253]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t256: AddedToken(\"[control_254]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t257: AddedToken(\"[control_255]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t258: AddedToken(\"[control_256]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t259: AddedToken(\"[control_257]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t260: AddedToken(\"[control_258]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t261: AddedToken(\"[control_259]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t262: AddedToken(\"[control_260]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t263: AddedToken(\"[control_261]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t264: AddedToken(\"[control_262]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t265: AddedToken(\"[control_263]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t266: AddedToken(\"[control_264]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t267: AddedToken(\"[control_265]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t268: AddedToken(\"[control_266]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t269: AddedToken(\"[control_267]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t270: AddedToken(\"[control_268]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t271: AddedToken(\"[control_269]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t272: AddedToken(\"[control_270]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t273: AddedToken(\"[control_271]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t274: AddedToken(\"[control_272]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t275: AddedToken(\"[control_273]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t276: AddedToken(\"[control_274]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t277: AddedToken(\"[control_275]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t278: AddedToken(\"[control_276]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t279: AddedToken(\"[control_277]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t280: AddedToken(\"[control_278]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t281: AddedToken(\"[control_279]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t282: AddedToken(\"[control_280]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t283: AddedToken(\"[control_281]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t284: AddedToken(\"[control_282]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t285: AddedToken(\"[control_283]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t286: AddedToken(\"[control_284]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t287: AddedToken(\"[control_285]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t288: AddedToken(\"[control_286]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t289: AddedToken(\"[control_287]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t290: AddedToken(\"[control_288]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t291: AddedToken(\"[control_289]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t292: AddedToken(\"[control_290]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t293: AddedToken(\"[control_291]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t294: AddedToken(\"[control_292]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t295: AddedToken(\"[control_293]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t296: AddedToken(\"[control_294]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t297: AddedToken(\"[control_295]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t298: AddedToken(\"[control_296]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t299: AddedToken(\"[control_297]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t300: AddedToken(\"[control_298]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t301: AddedToken(\"[control_299]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t302: AddedToken(\"[control_300]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t303: AddedToken(\"[control_301]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t304: AddedToken(\"[control_302]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t305: AddedToken(\"[control_303]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t306: AddedToken(\"[control_304]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t307: AddedToken(\"[control_305]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t308: AddedToken(\"[control_306]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t309: AddedToken(\"[control_307]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t310: AddedToken(\"[control_308]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t311: AddedToken(\"[control_309]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t312: AddedToken(\"[control_310]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t313: AddedToken(\"[control_311]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t314: AddedToken(\"[control_312]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t315: AddedToken(\"[control_313]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t316: AddedToken(\"[control_314]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t317: AddedToken(\"[control_315]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t318: AddedToken(\"[control_316]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t319: AddedToken(\"[control_317]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t320: AddedToken(\"[control_318]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t321: AddedToken(\"[control_319]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t322: AddedToken(\"[control_320]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t323: AddedToken(\"[control_321]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t324: AddedToken(\"[control_322]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t325: AddedToken(\"[control_323]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t326: AddedToken(\"[control_324]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t327: AddedToken(\"[control_325]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t328: AddedToken(\"[control_326]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t329: AddedToken(\"[control_327]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t330: AddedToken(\"[control_328]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t331: AddedToken(\"[control_329]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t332: AddedToken(\"[control_330]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t333: AddedToken(\"[control_331]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t334: AddedToken(\"[control_332]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t335: AddedToken(\"[control_333]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t336: AddedToken(\"[control_334]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t337: AddedToken(\"[control_335]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t338: AddedToken(\"[control_336]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t339: AddedToken(\"[control_337]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t340: AddedToken(\"[control_338]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t341: AddedToken(\"[control_339]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t342: AddedToken(\"[control_340]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t343: AddedToken(\"[control_341]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t344: AddedToken(\"[control_342]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t345: AddedToken(\"[control_343]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t346: AddedToken(\"[control_344]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t347: AddedToken(\"[control_345]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t348: AddedToken(\"[control_346]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t349: AddedToken(\"[control_347]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t350: AddedToken(\"[control_348]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t351: AddedToken(\"[control_349]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t352: AddedToken(\"[control_350]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t353: AddedToken(\"[control_351]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t354: AddedToken(\"[control_352]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t355: AddedToken(\"[control_353]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t356: AddedToken(\"[control_354]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t357: AddedToken(\"[control_355]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t358: AddedToken(\"[control_356]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t359: AddedToken(\"[control_357]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t360: AddedToken(\"[control_358]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t361: AddedToken(\"[control_359]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t362: AddedToken(\"[control_360]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t363: AddedToken(\"[control_361]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t364: AddedToken(\"[control_362]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t365: AddedToken(\"[control_363]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t366: AddedToken(\"[control_364]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t367: AddedToken(\"[control_365]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t368: AddedToken(\"[control_366]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t369: AddedToken(\"[control_367]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t370: AddedToken(\"[control_368]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t371: AddedToken(\"[control_369]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t372: AddedToken(\"[control_370]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t373: AddedToken(\"[control_371]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t374: AddedToken(\"[control_372]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t375: AddedToken(\"[control_373]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t376: AddedToken(\"[control_374]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t377: AddedToken(\"[control_375]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t378: AddedToken(\"[control_376]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t379: AddedToken(\"[control_377]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t380: AddedToken(\"[control_378]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t381: AddedToken(\"[control_379]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t382: AddedToken(\"[control_380]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t383: AddedToken(\"[control_381]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t384: AddedToken(\"[control_382]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t385: AddedToken(\"[control_383]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t386: AddedToken(\"[control_384]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t387: AddedToken(\"[control_385]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t388: AddedToken(\"[control_386]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t389: AddedToken(\"[control_387]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t390: AddedToken(\"[control_388]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t391: AddedToken(\"[control_389]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t392: AddedToken(\"[control_390]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t393: AddedToken(\"[control_391]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t394: AddedToken(\"[control_392]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t395: AddedToken(\"[control_393]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t396: AddedToken(\"[control_394]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t397: AddedToken(\"[control_395]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t398: AddedToken(\"[control_396]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t399: AddedToken(\"[control_397]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t400: AddedToken(\"[control_398]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t401: AddedToken(\"[control_399]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t402: AddedToken(\"[control_400]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t403: AddedToken(\"[control_401]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t404: AddedToken(\"[control_402]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t405: AddedToken(\"[control_403]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t406: AddedToken(\"[control_404]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t407: AddedToken(\"[control_405]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t408: AddedToken(\"[control_406]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t409: AddedToken(\"[control_407]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t410: AddedToken(\"[control_408]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t411: AddedToken(\"[control_409]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t412: AddedToken(\"[control_410]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t413: AddedToken(\"[control_411]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t414: AddedToken(\"[control_412]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t415: AddedToken(\"[control_413]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t416: AddedToken(\"[control_414]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t417: AddedToken(\"[control_415]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t418: AddedToken(\"[control_416]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t419: AddedToken(\"[control_417]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t420: AddedToken(\"[control_418]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t421: AddedToken(\"[control_419]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t422: AddedToken(\"[control_420]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t423: AddedToken(\"[control_421]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t424: AddedToken(\"[control_422]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t425: AddedToken(\"[control_423]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t426: AddedToken(\"[control_424]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t427: AddedToken(\"[control_425]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t428: AddedToken(\"[control_426]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t429: AddedToken(\"[control_427]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t430: AddedToken(\"[control_428]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t431: AddedToken(\"[control_429]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t432: AddedToken(\"[control_430]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t433: AddedToken(\"[control_431]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t434: AddedToken(\"[control_432]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t435: AddedToken(\"[control_433]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t436: AddedToken(\"[control_434]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t437: AddedToken(\"[control_435]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t438: AddedToken(\"[control_436]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t439: AddedToken(\"[control_437]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t440: AddedToken(\"[control_438]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t441: AddedToken(\"[control_439]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t442: AddedToken(\"[control_440]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t443: AddedToken(\"[control_441]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t444: AddedToken(\"[control_442]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t445: AddedToken(\"[control_443]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t446: AddedToken(\"[control_444]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t447: AddedToken(\"[control_445]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t448: AddedToken(\"[control_446]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t449: AddedToken(\"[control_447]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t450: AddedToken(\"[control_448]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t451: AddedToken(\"[control_449]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t452: AddedToken(\"[control_450]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t453: AddedToken(\"[control_451]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t454: AddedToken(\"[control_452]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t455: AddedToken(\"[control_453]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t456: AddedToken(\"[control_454]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t457: AddedToken(\"[control_455]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t458: AddedToken(\"[control_456]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t459: AddedToken(\"[control_457]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t460: AddedToken(\"[control_458]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t461: AddedToken(\"[control_459]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t462: AddedToken(\"[control_460]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t463: AddedToken(\"[control_461]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t464: AddedToken(\"[control_462]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t465: AddedToken(\"[control_463]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t466: AddedToken(\"[control_464]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t467: AddedToken(\"[control_465]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t468: AddedToken(\"[control_466]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t469: AddedToken(\"[control_467]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t470: AddedToken(\"[control_468]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t471: AddedToken(\"[control_469]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t472: AddedToken(\"[control_470]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t473: AddedToken(\"[control_471]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t474: AddedToken(\"[control_472]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t475: AddedToken(\"[control_473]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t476: AddedToken(\"[control_474]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t477: AddedToken(\"[control_475]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t478: AddedToken(\"[control_476]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t479: AddedToken(\"[control_477]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t480: AddedToken(\"[control_478]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t481: AddedToken(\"[control_479]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t482: AddedToken(\"[control_480]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t483: AddedToken(\"[control_481]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t484: AddedToken(\"[control_482]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t485: AddedToken(\"[control_483]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t486: AddedToken(\"[control_484]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t487: AddedToken(\"[control_485]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t488: AddedToken(\"[control_486]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t489: AddedToken(\"[control_487]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t490: AddedToken(\"[control_488]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t491: AddedToken(\"[control_489]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t492: AddedToken(\"[control_490]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t493: AddedToken(\"[control_491]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t494: AddedToken(\"[control_492]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t495: AddedToken(\"[control_493]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t496: AddedToken(\"[control_494]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t497: AddedToken(\"[control_495]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t498: AddedToken(\"[control_496]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t499: AddedToken(\"[control_497]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t500: AddedToken(\"[control_498]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t501: AddedToken(\"[control_499]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t502: AddedToken(\"[control_500]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t503: AddedToken(\"[control_501]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t504: AddedToken(\"[control_502]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t505: AddedToken(\"[control_503]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t506: AddedToken(\"[control_504]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t507: AddedToken(\"[control_505]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t508: AddedToken(\"[control_506]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t509: AddedToken(\"[control_507]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t510: AddedToken(\"[control_508]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t511: AddedToken(\"[control_509]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t512: AddedToken(\"[control_510]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t513: AddedToken(\"[control_511]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t514: AddedToken(\"[control_512]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t515: AddedToken(\"[control_513]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t516: AddedToken(\"[control_514]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t517: AddedToken(\"[control_515]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t518: AddedToken(\"[control_516]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t519: AddedToken(\"[control_517]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t520: AddedToken(\"[control_518]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t521: AddedToken(\"[control_519]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t522: AddedToken(\"[control_520]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t523: AddedToken(\"[control_521]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t524: AddedToken(\"[control_522]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t525: AddedToken(\"[control_523]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t526: AddedToken(\"[control_524]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t527: AddedToken(\"[control_525]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t528: AddedToken(\"[control_526]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t529: AddedToken(\"[control_527]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t530: AddedToken(\"[control_528]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t531: AddedToken(\"[control_529]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t532: AddedToken(\"[control_530]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t533: AddedToken(\"[control_531]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t534: AddedToken(\"[control_532]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t535: AddedToken(\"[control_533]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t536: AddedToken(\"[control_534]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t537: AddedToken(\"[control_535]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t538: AddedToken(\"[control_536]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t539: AddedToken(\"[control_537]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t540: AddedToken(\"[control_538]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t541: AddedToken(\"[control_539]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t542: AddedToken(\"[control_540]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t543: AddedToken(\"[control_541]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t544: AddedToken(\"[control_542]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t545: AddedToken(\"[control_543]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t546: AddedToken(\"[control_544]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t547: AddedToken(\"[control_545]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t548: AddedToken(\"[control_546]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t549: AddedToken(\"[control_547]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t550: AddedToken(\"[control_548]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t551: AddedToken(\"[control_549]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t552: AddedToken(\"[control_550]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t553: AddedToken(\"[control_551]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t554: AddedToken(\"[control_552]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t555: AddedToken(\"[control_553]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t556: AddedToken(\"[control_554]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t557: AddedToken(\"[control_555]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t558: AddedToken(\"[control_556]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t559: AddedToken(\"[control_557]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t560: AddedToken(\"[control_558]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t561: AddedToken(\"[control_559]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t562: AddedToken(\"[control_560]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t563: AddedToken(\"[control_561]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t564: AddedToken(\"[control_562]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t565: AddedToken(\"[control_563]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t566: AddedToken(\"[control_564]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t567: AddedToken(\"[control_565]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t568: AddedToken(\"[control_566]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t569: AddedToken(\"[control_567]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t570: AddedToken(\"[control_568]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t571: AddedToken(\"[control_569]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t572: AddedToken(\"[control_570]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t573: AddedToken(\"[control_571]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t574: AddedToken(\"[control_572]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t575: AddedToken(\"[control_573]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t576: AddedToken(\"[control_574]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t577: AddedToken(\"[control_575]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t578: AddedToken(\"[control_576]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t579: AddedToken(\"[control_577]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t580: AddedToken(\"[control_578]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t581: AddedToken(\"[control_579]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t582: AddedToken(\"[control_580]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t583: AddedToken(\"[control_581]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t584: AddedToken(\"[control_582]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t585: AddedToken(\"[control_583]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t586: AddedToken(\"[control_584]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t587: AddedToken(\"[control_585]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t588: AddedToken(\"[control_586]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t589: AddedToken(\"[control_587]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t590: AddedToken(\"[control_588]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t591: AddedToken(\"[control_589]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t592: AddedToken(\"[control_590]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t593: AddedToken(\"[control_591]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t594: AddedToken(\"[control_592]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t595: AddedToken(\"[control_593]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t596: AddedToken(\"[control_594]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t597: AddedToken(\"[control_595]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t598: AddedToken(\"[control_596]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t599: AddedToken(\"[control_597]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t600: AddedToken(\"[control_598]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t601: AddedToken(\"[control_599]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t602: AddedToken(\"[control_600]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t603: AddedToken(\"[control_601]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t604: AddedToken(\"[control_602]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t605: AddedToken(\"[control_603]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t606: AddedToken(\"[control_604]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t607: AddedToken(\"[control_605]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t608: AddedToken(\"[control_606]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t609: AddedToken(\"[control_607]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t610: AddedToken(\"[control_608]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t611: AddedToken(\"[control_609]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t612: AddedToken(\"[control_610]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t613: AddedToken(\"[control_611]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t614: AddedToken(\"[control_612]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t615: AddedToken(\"[control_613]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t616: AddedToken(\"[control_614]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t617: AddedToken(\"[control_615]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t618: AddedToken(\"[control_616]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t619: AddedToken(\"[control_617]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t620: AddedToken(\"[control_618]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t621: AddedToken(\"[control_619]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t622: AddedToken(\"[control_620]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t623: AddedToken(\"[control_621]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t624: AddedToken(\"[control_622]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t625: AddedToken(\"[control_623]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t626: AddedToken(\"[control_624]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t627: AddedToken(\"[control_625]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t628: AddedToken(\"[control_626]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t629: AddedToken(\"[control_627]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t630: AddedToken(\"[control_628]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t631: AddedToken(\"[control_629]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t632: AddedToken(\"[control_630]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t633: AddedToken(\"[control_631]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t634: AddedToken(\"[control_632]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t635: AddedToken(\"[control_633]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t636: AddedToken(\"[control_634]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t637: AddedToken(\"[control_635]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t638: AddedToken(\"[control_636]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t639: AddedToken(\"[control_637]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t640: AddedToken(\"[control_638]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t641: AddedToken(\"[control_639]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t642: AddedToken(\"[control_640]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t643: AddedToken(\"[control_641]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t644: AddedToken(\"[control_642]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t645: AddedToken(\"[control_643]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t646: AddedToken(\"[control_644]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t647: AddedToken(\"[control_645]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t648: AddedToken(\"[control_646]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t649: AddedToken(\"[control_647]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t650: AddedToken(\"[control_648]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t651: AddedToken(\"[control_649]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t652: AddedToken(\"[control_650]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t653: AddedToken(\"[control_651]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t654: AddedToken(\"[control_652]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t655: AddedToken(\"[control_653]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t656: AddedToken(\"[control_654]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t657: AddedToken(\"[control_655]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t658: AddedToken(\"[control_656]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t659: AddedToken(\"[control_657]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t660: AddedToken(\"[control_658]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t661: AddedToken(\"[control_659]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t662: AddedToken(\"[control_660]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t663: AddedToken(\"[control_661]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t664: AddedToken(\"[control_662]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t665: AddedToken(\"[control_663]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t666: AddedToken(\"[control_664]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t667: AddedToken(\"[control_665]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t668: AddedToken(\"[control_666]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t669: AddedToken(\"[control_667]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t670: AddedToken(\"[control_668]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t671: AddedToken(\"[control_669]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t672: AddedToken(\"[control_670]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t673: AddedToken(\"[control_671]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t674: AddedToken(\"[control_672]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t675: AddedToken(\"[control_673]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t676: AddedToken(\"[control_674]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t677: AddedToken(\"[control_675]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t678: AddedToken(\"[control_676]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t679: AddedToken(\"[control_677]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t680: AddedToken(\"[control_678]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t681: AddedToken(\"[control_679]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t682: AddedToken(\"[control_680]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t683: AddedToken(\"[control_681]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t684: AddedToken(\"[control_682]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t685: AddedToken(\"[control_683]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t686: AddedToken(\"[control_684]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t687: AddedToken(\"[control_685]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t688: AddedToken(\"[control_686]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t689: AddedToken(\"[control_687]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t690: AddedToken(\"[control_688]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t691: AddedToken(\"[control_689]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t692: AddedToken(\"[control_690]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t693: AddedToken(\"[control_691]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t694: AddedToken(\"[control_692]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t695: AddedToken(\"[control_693]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t696: AddedToken(\"[control_694]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t697: AddedToken(\"[control_695]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t698: AddedToken(\"[control_696]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t699: AddedToken(\"[control_697]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t700: AddedToken(\"[control_698]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t701: AddedToken(\"[control_699]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t702: AddedToken(\"[control_700]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t703: AddedToken(\"[control_701]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t704: AddedToken(\"[control_702]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t705: AddedToken(\"[control_703]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t706: AddedToken(\"[control_704]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t707: AddedToken(\"[control_705]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t708: AddedToken(\"[control_706]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t709: AddedToken(\"[control_707]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t710: AddedToken(\"[control_708]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t711: AddedToken(\"[control_709]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t712: AddedToken(\"[control_710]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t713: AddedToken(\"[control_711]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t714: AddedToken(\"[control_712]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t715: AddedToken(\"[control_713]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t716: AddedToken(\"[control_714]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t717: AddedToken(\"[control_715]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t718: AddedToken(\"[control_716]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t719: AddedToken(\"[control_717]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t720: AddedToken(\"[control_718]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t721: AddedToken(\"[control_719]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t722: AddedToken(\"[control_720]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t723: AddedToken(\"[control_721]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t724: AddedToken(\"[control_722]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t725: AddedToken(\"[control_723]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t726: AddedToken(\"[control_724]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t727: AddedToken(\"[control_725]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t728: AddedToken(\"[control_726]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t729: AddedToken(\"[control_727]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t730: AddedToken(\"[control_728]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t731: AddedToken(\"[control_729]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t732: AddedToken(\"[control_730]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t733: AddedToken(\"[control_731]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t734: AddedToken(\"[control_732]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t735: AddedToken(\"[control_733]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t736: AddedToken(\"[control_734]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t737: AddedToken(\"[control_735]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t738: AddedToken(\"[control_736]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t739: AddedToken(\"[control_737]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t740: AddedToken(\"[control_738]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t741: AddedToken(\"[control_739]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t742: AddedToken(\"[control_740]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t743: AddedToken(\"[control_741]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t744: AddedToken(\"[control_742]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t745: AddedToken(\"[control_743]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t746: AddedToken(\"[control_744]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t747: AddedToken(\"[control_745]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t748: AddedToken(\"[control_746]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t749: AddedToken(\"[control_747]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t750: AddedToken(\"[control_748]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t751: AddedToken(\"[REFERENCE_DOC_19]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t752: AddedToken(\"[REFERENCE_DOC_18]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t753: AddedToken(\"[REFERENCE_DOC_17]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t754: AddedToken(\"[REFERENCE_DOC_16]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t755: AddedToken(\"[REFERENCE_DOC_15]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t756: AddedToken(\"[REFERENCE_DOC_14]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t757: AddedToken(\"[REFERENCE_DOC_13]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t758: AddedToken(\"[REFERENCE_DOC_12]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t759: AddedToken(\"[REFERENCE_DOC_11]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t760: AddedToken(\"[REFERENCE_DOC_10]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t761: AddedToken(\"[REFERENCE_DOC_9]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t762: AddedToken(\"[REFERENCE_DOC_8]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t763: AddedToken(\"[REFERENCE_DOC_7]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t764: AddedToken(\"[REFERENCE_DOC_6]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t765: AddedToken(\"[REFERENCE_DOC_5]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t766: AddedToken(\"[REFERENCE_DOC_4]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t767: AddedToken(\"[REFERENCE_DOC_3]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t768: AddedToken(\"[REFERENCE_DOC_2]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t769: AddedToken(\"[REFERENCE_DOC_1]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t770: AddedToken(\"[REFERENCE_DOC_0]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n}, max_context_size=131072, hyperparams={'sampling_params': SamplingParams(n=1, best_of=1, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0, top_p=1.0, top_k=-1, min_p=0.0, seed=None, use_beam_search=False, length_penalty=1.0, early_stopping=False, stop=[], stop_token_ids=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=None, min_tokens=0, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True, truncate_prompt_tokens=None)}, pipeline=PromptPipeline([TranslateRole(role=<ChatRole.SYSTEM: 'system'>, predicate=None, to=<ChatRole.USER: 'user'>, warn='The Mistral prompt format does not natively support the SYSTEM role. These messages will be sent to the model as USER messages.'),\n MergeConsecutive(role=<ChatRole.USER: 'user'>, predicate=None, sep='\\n\\n', joiner=None, out_role=<ChatRole.USER: 'user'>),\n MergeConsecutive(role=<ChatRole.ASSISTANT: 'assistant'>, predicate=None, sep=' ', joiner=None, out_role=<ChatRole.ASSISTANT: 'assistant'>),\n Wrap(role=<ChatRole.USER: 'user'>, predicate=None, prefix='[INST] ', suffix='[/INST]'),\n EnsureBoundFunctionCalls(id_translator=<function <lambda> at 0x7f8ecf4d98a0>),\n FunctionCallFmt(func=<function json_tool_call at 0x7f8ecf4d9b20>, prefix='[TOOL_CALLS] [', sep=',', suffix=']'),\n Apply(role=<ChatRole.FUNCTION: 'function'>, predicate=None, func=<function fmt_function_call_result at 0x7f8ecf4d99e0>, func_wrapped=<function Apply.__init__.<locals>.<lambda> at 0x7f8ecf4d9440>),\n Apply(role=<ChatRole.USER: 'user'>, predicate=None, func=<function fmt_available_tools at 0x7f8ecf4d96c0>, func_wrapped=<function fmt_available_tools at 0x7f8ecf4d96c0>),\n MacroApply(func=<function ensure_available_tools at 0x7f8ecf4d9760>),\n ConversationFmt(prefix='<s>', sep='', suffix='', generation_suffix='', user_prefix='', user_suffix='', assistant_prefix=' ', assistant_suffix='</s>', assistant_suffix_if_last='', system_prefix='', system_suffix='', function_prefix='[TOOL_RESULTS] ', function_suffix='[/TOOL_RESULTS]')]), token_reserve=2))",
      "functions": [
        {
          "name": "delegate",
          "desc": "Ask a capable helper for help looking up a piece of information or performing an action.\nDo not simply repeat what the user said as instructions.\nYou should use this to break up complex user queries into multiple simpler steps.\nNOTE: Helpers cannot see previous parts of your conversation.",
          "auto_retry": true,
          "auto_truncate": null,
          "after": "assistant",
          "json_schema": {
            "properties": {
              "instructions": {
                "description": "Detailed instructions on what your helper should do to help you.",
                "type": "string"
              }
            },
            "required": [
              "instructions"
            ],
            "type": "object"
          }
        }
      ]
    }
  ]
}