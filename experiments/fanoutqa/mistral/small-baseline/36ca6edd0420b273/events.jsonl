{"type":"kani_spawn","timestamp":1729887385.2690253,"id":"92477fb6-a856-409f-9af4-758a1edf60ec","depth":0,"parent":null,"children":[],"always_included_messages":[],"chat_history":[],"state":"stopped","name":"root","engine_type":"MixtralFunctionCallingAdapter","engine_repr":"MixtralFunctionCallingAdapter(engine=VLLMEngine(model=<vllm.engine.async_llm_engine.AsyncLLMEngine object at 0x7f0c699d1990>, tokenizer=CachedLlamaTokenizerFast(name_or_path='mistralai/Mistral-Small-Instruct-2409', vocab_size=32768, model_max_length=1000000000000000019884624838656, is_fast=True, padding_side='left', truncation_side='left', special_tokens={'bos_token': '<s>', 'eos_token': '</s>', 'unk_token': '<unk>', 'pad_token': '</s>'}, clean_up_tokenization_spaces=False),  added_tokens_decoder={\n\t0: AddedToken(\"<unk>\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t1: AddedToken(\"<s>\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t2: AddedToken(\"</s>\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t3: AddedToken(\"[INST]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t4: AddedToken(\"[/INST]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t5: AddedToken(\"[TOOL_CALLS]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t6: AddedToken(\"[AVAILABLE_TOOLS]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t7: AddedToken(\"[/AVAILABLE_TOOLS]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t8: AddedToken(\"[TOOL_RESULTS]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t9: AddedToken(\"[/TOOL_RESULTS]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t10: AddedToken(\"[IMG]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t11: AddedToken(\"[PREFIX]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t12: AddedToken(\"[MIDDLE]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t13: AddedToken(\"[SUFFIX]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t14: AddedToken(\"[IMG_BREAK]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t15: AddedToken(\"[IMG_END]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t16: AddedToken(\"[control_14]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t17: AddedToken(\"[control_15]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t18: AddedToken(\"[control_16]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t19: AddedToken(\"[control_17]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t20: AddedToken(\"[control_18]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t21: AddedToken(\"[control_19]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t22: AddedToken(\"[control_20]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t23: AddedToken(\"[control_21]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t24: AddedToken(\"[control_22]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t25: AddedToken(\"[control_23]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t26: AddedToken(\"[control_24]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t27: AddedToken(\"[control_25]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t28: AddedToken(\"[control_26]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t29: AddedToken(\"[control_27]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t30: AddedToken(\"[control_28]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t31: AddedToken(\"[control_29]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t32: AddedToken(\"[control_30]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t33: AddedToken(\"[control_31]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t34: AddedToken(\"[control_32]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t35: AddedToken(\"[control_33]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t36: AddedToken(\"[control_34]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t37: AddedToken(\"[control_35]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t38: AddedToken(\"[control_36]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t39: AddedToken(\"[control_37]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t40: AddedToken(\"[control_38]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t41: AddedToken(\"[control_39]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t42: AddedToken(\"[control_40]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t43: AddedToken(\"[control_41]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t44: AddedToken(\"[control_42]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t45: AddedToken(\"[control_43]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t46: AddedToken(\"[control_44]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t47: AddedToken(\"[control_45]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t48: AddedToken(\"[control_46]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t49: AddedToken(\"[control_47]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t50: AddedToken(\"[control_48]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t51: AddedToken(\"[control_49]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t52: AddedToken(\"[control_50]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t53: AddedToken(\"[control_51]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t54: AddedToken(\"[control_52]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t55: AddedToken(\"[control_53]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t56: AddedToken(\"[control_54]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t57: AddedToken(\"[control_55]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t58: AddedToken(\"[control_56]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t59: AddedToken(\"[control_57]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t60: AddedToken(\"[control_58]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t61: AddedToken(\"[control_59]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t62: AddedToken(\"[control_60]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t63: AddedToken(\"[control_61]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t64: AddedToken(\"[control_62]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t65: AddedToken(\"[control_63]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t66: AddedToken(\"[control_64]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t67: AddedToken(\"[control_65]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t68: AddedToken(\"[control_66]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t69: AddedToken(\"[control_67]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t70: AddedToken(\"[control_68]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t71: AddedToken(\"[control_69]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t72: AddedToken(\"[control_70]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t73: AddedToken(\"[control_71]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t74: AddedToken(\"[control_72]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t75: AddedToken(\"[control_73]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t76: AddedToken(\"[control_74]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t77: AddedToken(\"[control_75]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t78: AddedToken(\"[control_76]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t79: AddedToken(\"[control_77]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t80: AddedToken(\"[control_78]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t81: AddedToken(\"[control_79]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t82: AddedToken(\"[control_80]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t83: AddedToken(\"[control_81]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t84: AddedToken(\"[control_82]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t85: AddedToken(\"[control_83]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t86: AddedToken(\"[control_84]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t87: AddedToken(\"[control_85]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t88: AddedToken(\"[control_86]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t89: AddedToken(\"[control_87]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t90: AddedToken(\"[control_88]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t91: AddedToken(\"[control_89]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t92: AddedToken(\"[control_90]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t93: AddedToken(\"[control_91]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t94: AddedToken(\"[control_92]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t95: AddedToken(\"[control_93]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t96: AddedToken(\"[control_94]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t97: AddedToken(\"[control_95]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t98: AddedToken(\"[control_96]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t99: AddedToken(\"[control_97]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t100: AddedToken(\"[control_98]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t101: AddedToken(\"[control_99]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t102: AddedToken(\"[control_100]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t103: AddedToken(\"[control_101]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t104: AddedToken(\"[control_102]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t105: AddedToken(\"[control_103]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t106: AddedToken(\"[control_104]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t107: AddedToken(\"[control_105]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t108: AddedToken(\"[control_106]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t109: AddedToken(\"[control_107]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t110: AddedToken(\"[control_108]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t111: AddedToken(\"[control_109]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t112: AddedToken(\"[control_110]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t113: AddedToken(\"[control_111]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t114: AddedToken(\"[control_112]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t115: AddedToken(\"[control_113]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t116: AddedToken(\"[control_114]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t117: AddedToken(\"[control_115]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t118: AddedToken(\"[control_116]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t119: AddedToken(\"[control_117]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t120: AddedToken(\"[control_118]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t121: AddedToken(\"[control_119]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t122: AddedToken(\"[control_120]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t123: AddedToken(\"[control_121]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t124: AddedToken(\"[control_122]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t125: AddedToken(\"[control_123]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t126: AddedToken(\"[control_124]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t127: AddedToken(\"[control_125]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t128: AddedToken(\"[control_126]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t129: AddedToken(\"[control_127]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t130: AddedToken(\"[control_128]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t131: AddedToken(\"[control_129]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t132: AddedToken(\"[control_130]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t133: AddedToken(\"[control_131]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t134: AddedToken(\"[control_132]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t135: AddedToken(\"[control_133]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t136: AddedToken(\"[control_134]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t137: AddedToken(\"[control_135]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t138: AddedToken(\"[control_136]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t139: AddedToken(\"[control_137]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t140: AddedToken(\"[control_138]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t141: AddedToken(\"[control_139]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t142: AddedToken(\"[control_140]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t143: AddedToken(\"[control_141]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t144: AddedToken(\"[control_142]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t145: AddedToken(\"[control_143]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t146: AddedToken(\"[control_144]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t147: AddedToken(\"[control_145]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t148: AddedToken(\"[control_146]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t149: AddedToken(\"[control_147]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t150: AddedToken(\"[control_148]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t151: AddedToken(\"[control_149]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t152: AddedToken(\"[control_150]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t153: AddedToken(\"[control_151]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t154: AddedToken(\"[control_152]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t155: AddedToken(\"[control_153]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t156: AddedToken(\"[control_154]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t157: AddedToken(\"[control_155]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t158: AddedToken(\"[control_156]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t159: AddedToken(\"[control_157]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t160: AddedToken(\"[control_158]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t161: AddedToken(\"[control_159]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t162: AddedToken(\"[control_160]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t163: AddedToken(\"[control_161]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t164: AddedToken(\"[control_162]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t165: AddedToken(\"[control_163]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t166: AddedToken(\"[control_164]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t167: AddedToken(\"[control_165]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t168: AddedToken(\"[control_166]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t169: AddedToken(\"[control_167]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t170: AddedToken(\"[control_168]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t171: AddedToken(\"[control_169]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t172: AddedToken(\"[control_170]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t173: AddedToken(\"[control_171]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t174: AddedToken(\"[control_172]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t175: AddedToken(\"[control_173]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t176: AddedToken(\"[control_174]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t177: AddedToken(\"[control_175]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t178: AddedToken(\"[control_176]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t179: AddedToken(\"[control_177]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t180: AddedToken(\"[control_178]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t181: AddedToken(\"[control_179]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t182: AddedToken(\"[control_180]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t183: AddedToken(\"[control_181]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t184: AddedToken(\"[control_182]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t185: AddedToken(\"[control_183]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t186: AddedToken(\"[control_184]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t187: AddedToken(\"[control_185]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t188: AddedToken(\"[control_186]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t189: AddedToken(\"[control_187]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t190: AddedToken(\"[control_188]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t191: AddedToken(\"[control_189]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t192: AddedToken(\"[control_190]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t193: AddedToken(\"[control_191]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t194: AddedToken(\"[control_192]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t195: AddedToken(\"[control_193]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t196: AddedToken(\"[control_194]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t197: AddedToken(\"[control_195]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t198: AddedToken(\"[control_196]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t199: AddedToken(\"[control_197]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t200: AddedToken(\"[control_198]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t201: AddedToken(\"[control_199]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t202: AddedToken(\"[control_200]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t203: AddedToken(\"[control_201]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t204: AddedToken(\"[control_202]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t205: AddedToken(\"[control_203]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t206: AddedToken(\"[control_204]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t207: AddedToken(\"[control_205]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t208: AddedToken(\"[control_206]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t209: AddedToken(\"[control_207]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t210: AddedToken(\"[control_208]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t211: AddedToken(\"[control_209]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t212: AddedToken(\"[control_210]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t213: AddedToken(\"[control_211]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t214: AddedToken(\"[control_212]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t215: AddedToken(\"[control_213]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t216: AddedToken(\"[control_214]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t217: AddedToken(\"[control_215]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t218: AddedToken(\"[control_216]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t219: AddedToken(\"[control_217]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t220: AddedToken(\"[control_218]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t221: AddedToken(\"[control_219]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t222: AddedToken(\"[control_220]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t223: AddedToken(\"[control_221]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t224: AddedToken(\"[control_222]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t225: AddedToken(\"[control_223]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t226: AddedToken(\"[control_224]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t227: AddedToken(\"[control_225]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t228: AddedToken(\"[control_226]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t229: AddedToken(\"[control_227]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t230: AddedToken(\"[control_228]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t231: AddedToken(\"[control_229]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t232: AddedToken(\"[control_230]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t233: AddedToken(\"[control_231]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t234: AddedToken(\"[control_232]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t235: AddedToken(\"[control_233]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t236: AddedToken(\"[control_234]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t237: AddedToken(\"[control_235]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t238: AddedToken(\"[control_236]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t239: AddedToken(\"[control_237]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t240: AddedToken(\"[control_238]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t241: AddedToken(\"[control_239]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t242: AddedToken(\"[control_240]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t243: AddedToken(\"[control_241]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t244: AddedToken(\"[control_242]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t245: AddedToken(\"[control_243]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t246: AddedToken(\"[control_244]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t247: AddedToken(\"[control_245]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t248: AddedToken(\"[control_246]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t249: AddedToken(\"[control_247]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t250: AddedToken(\"[control_248]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t251: AddedToken(\"[control_249]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t252: AddedToken(\"[control_250]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t253: AddedToken(\"[control_251]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t254: AddedToken(\"[control_252]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t255: AddedToken(\"[control_253]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t256: AddedToken(\"[control_254]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t257: AddedToken(\"[control_255]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t258: AddedToken(\"[control_256]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t259: AddedToken(\"[control_257]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t260: AddedToken(\"[control_258]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t261: AddedToken(\"[control_259]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t262: AddedToken(\"[control_260]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t263: AddedToken(\"[control_261]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t264: AddedToken(\"[control_262]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t265: AddedToken(\"[control_263]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t266: AddedToken(\"[control_264]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t267: AddedToken(\"[control_265]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t268: AddedToken(\"[control_266]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t269: AddedToken(\"[control_267]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t270: AddedToken(\"[control_268]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t271: AddedToken(\"[control_269]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t272: AddedToken(\"[control_270]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t273: AddedToken(\"[control_271]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t274: AddedToken(\"[control_272]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t275: AddedToken(\"[control_273]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t276: AddedToken(\"[control_274]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t277: AddedToken(\"[control_275]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t278: AddedToken(\"[control_276]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t279: AddedToken(\"[control_277]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t280: AddedToken(\"[control_278]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t281: AddedToken(\"[control_279]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t282: AddedToken(\"[control_280]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t283: AddedToken(\"[control_281]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t284: AddedToken(\"[control_282]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t285: AddedToken(\"[control_283]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t286: AddedToken(\"[control_284]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t287: AddedToken(\"[control_285]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t288: AddedToken(\"[control_286]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t289: AddedToken(\"[control_287]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t290: AddedToken(\"[control_288]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t291: AddedToken(\"[control_289]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t292: AddedToken(\"[control_290]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t293: AddedToken(\"[control_291]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t294: AddedToken(\"[control_292]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t295: AddedToken(\"[control_293]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t296: AddedToken(\"[control_294]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t297: AddedToken(\"[control_295]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t298: AddedToken(\"[control_296]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t299: AddedToken(\"[control_297]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t300: AddedToken(\"[control_298]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t301: AddedToken(\"[control_299]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t302: AddedToken(\"[control_300]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t303: AddedToken(\"[control_301]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t304: AddedToken(\"[control_302]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t305: AddedToken(\"[control_303]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t306: AddedToken(\"[control_304]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t307: AddedToken(\"[control_305]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t308: AddedToken(\"[control_306]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t309: AddedToken(\"[control_307]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t310: AddedToken(\"[control_308]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t311: AddedToken(\"[control_309]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t312: AddedToken(\"[control_310]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t313: AddedToken(\"[control_311]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t314: AddedToken(\"[control_312]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t315: AddedToken(\"[control_313]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t316: AddedToken(\"[control_314]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t317: AddedToken(\"[control_315]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t318: AddedToken(\"[control_316]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t319: AddedToken(\"[control_317]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t320: AddedToken(\"[control_318]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t321: AddedToken(\"[control_319]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t322: AddedToken(\"[control_320]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t323: AddedToken(\"[control_321]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t324: AddedToken(\"[control_322]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t325: AddedToken(\"[control_323]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t326: AddedToken(\"[control_324]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t327: AddedToken(\"[control_325]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t328: AddedToken(\"[control_326]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t329: AddedToken(\"[control_327]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t330: AddedToken(\"[control_328]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t331: AddedToken(\"[control_329]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t332: AddedToken(\"[control_330]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t333: AddedToken(\"[control_331]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t334: AddedToken(\"[control_332]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t335: AddedToken(\"[control_333]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t336: AddedToken(\"[control_334]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t337: AddedToken(\"[control_335]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t338: AddedToken(\"[control_336]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t339: AddedToken(\"[control_337]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t340: AddedToken(\"[control_338]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t341: AddedToken(\"[control_339]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t342: AddedToken(\"[control_340]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t343: AddedToken(\"[control_341]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t344: AddedToken(\"[control_342]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t345: AddedToken(\"[control_343]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t346: AddedToken(\"[control_344]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t347: AddedToken(\"[control_345]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t348: AddedToken(\"[control_346]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t349: AddedToken(\"[control_347]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t350: AddedToken(\"[control_348]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t351: AddedToken(\"[control_349]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t352: AddedToken(\"[control_350]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t353: AddedToken(\"[control_351]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t354: AddedToken(\"[control_352]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t355: AddedToken(\"[control_353]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t356: AddedToken(\"[control_354]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t357: AddedToken(\"[control_355]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t358: AddedToken(\"[control_356]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t359: AddedToken(\"[control_357]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t360: AddedToken(\"[control_358]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t361: AddedToken(\"[control_359]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t362: AddedToken(\"[control_360]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t363: AddedToken(\"[control_361]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t364: AddedToken(\"[control_362]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t365: AddedToken(\"[control_363]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t366: AddedToken(\"[control_364]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t367: AddedToken(\"[control_365]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t368: AddedToken(\"[control_366]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t369: AddedToken(\"[control_367]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t370: AddedToken(\"[control_368]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t371: AddedToken(\"[control_369]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t372: AddedToken(\"[control_370]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t373: AddedToken(\"[control_371]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t374: AddedToken(\"[control_372]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t375: AddedToken(\"[control_373]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t376: AddedToken(\"[control_374]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t377: AddedToken(\"[control_375]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t378: AddedToken(\"[control_376]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t379: AddedToken(\"[control_377]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t380: AddedToken(\"[control_378]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t381: AddedToken(\"[control_379]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t382: AddedToken(\"[control_380]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t383: AddedToken(\"[control_381]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t384: AddedToken(\"[control_382]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t385: AddedToken(\"[control_383]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t386: AddedToken(\"[control_384]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t387: AddedToken(\"[control_385]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t388: AddedToken(\"[control_386]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t389: AddedToken(\"[control_387]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t390: AddedToken(\"[control_388]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t391: AddedToken(\"[control_389]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t392: AddedToken(\"[control_390]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t393: AddedToken(\"[control_391]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t394: AddedToken(\"[control_392]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t395: AddedToken(\"[control_393]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t396: AddedToken(\"[control_394]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t397: AddedToken(\"[control_395]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t398: AddedToken(\"[control_396]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t399: AddedToken(\"[control_397]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t400: AddedToken(\"[control_398]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t401: AddedToken(\"[control_399]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t402: AddedToken(\"[control_400]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t403: AddedToken(\"[control_401]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t404: AddedToken(\"[control_402]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t405: AddedToken(\"[control_403]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t406: AddedToken(\"[control_404]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t407: AddedToken(\"[control_405]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t408: AddedToken(\"[control_406]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t409: AddedToken(\"[control_407]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t410: AddedToken(\"[control_408]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t411: AddedToken(\"[control_409]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t412: AddedToken(\"[control_410]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t413: AddedToken(\"[control_411]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t414: AddedToken(\"[control_412]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t415: AddedToken(\"[control_413]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t416: AddedToken(\"[control_414]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t417: AddedToken(\"[control_415]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t418: AddedToken(\"[control_416]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t419: AddedToken(\"[control_417]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t420: AddedToken(\"[control_418]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t421: AddedToken(\"[control_419]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t422: AddedToken(\"[control_420]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t423: AddedToken(\"[control_421]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t424: AddedToken(\"[control_422]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t425: AddedToken(\"[control_423]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t426: AddedToken(\"[control_424]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t427: AddedToken(\"[control_425]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t428: AddedToken(\"[control_426]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t429: AddedToken(\"[control_427]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t430: AddedToken(\"[control_428]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t431: AddedToken(\"[control_429]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t432: AddedToken(\"[control_430]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t433: AddedToken(\"[control_431]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t434: AddedToken(\"[control_432]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t435: AddedToken(\"[control_433]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t436: AddedToken(\"[control_434]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t437: AddedToken(\"[control_435]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t438: AddedToken(\"[control_436]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t439: AddedToken(\"[control_437]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t440: AddedToken(\"[control_438]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t441: AddedToken(\"[control_439]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t442: AddedToken(\"[control_440]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t443: AddedToken(\"[control_441]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t444: AddedToken(\"[control_442]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t445: AddedToken(\"[control_443]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t446: AddedToken(\"[control_444]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t447: AddedToken(\"[control_445]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t448: AddedToken(\"[control_446]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t449: AddedToken(\"[control_447]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t450: AddedToken(\"[control_448]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t451: AddedToken(\"[control_449]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t452: AddedToken(\"[control_450]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t453: AddedToken(\"[control_451]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t454: AddedToken(\"[control_452]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t455: AddedToken(\"[control_453]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t456: AddedToken(\"[control_454]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t457: AddedToken(\"[control_455]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t458: AddedToken(\"[control_456]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t459: AddedToken(\"[control_457]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t460: AddedToken(\"[control_458]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t461: AddedToken(\"[control_459]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t462: AddedToken(\"[control_460]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t463: AddedToken(\"[control_461]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t464: AddedToken(\"[control_462]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t465: AddedToken(\"[control_463]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t466: AddedToken(\"[control_464]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t467: AddedToken(\"[control_465]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t468: AddedToken(\"[control_466]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t469: AddedToken(\"[control_467]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t470: AddedToken(\"[control_468]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t471: AddedToken(\"[control_469]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t472: AddedToken(\"[control_470]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t473: AddedToken(\"[control_471]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t474: AddedToken(\"[control_472]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t475: AddedToken(\"[control_473]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t476: AddedToken(\"[control_474]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t477: AddedToken(\"[control_475]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t478: AddedToken(\"[control_476]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t479: AddedToken(\"[control_477]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t480: AddedToken(\"[control_478]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t481: AddedToken(\"[control_479]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t482: AddedToken(\"[control_480]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t483: AddedToken(\"[control_481]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t484: AddedToken(\"[control_482]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t485: AddedToken(\"[control_483]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t486: AddedToken(\"[control_484]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t487: AddedToken(\"[control_485]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t488: AddedToken(\"[control_486]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t489: AddedToken(\"[control_487]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t490: AddedToken(\"[control_488]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t491: AddedToken(\"[control_489]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t492: AddedToken(\"[control_490]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t493: AddedToken(\"[control_491]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t494: AddedToken(\"[control_492]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t495: AddedToken(\"[control_493]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t496: AddedToken(\"[control_494]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t497: AddedToken(\"[control_495]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t498: AddedToken(\"[control_496]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t499: AddedToken(\"[control_497]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t500: AddedToken(\"[control_498]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t501: AddedToken(\"[control_499]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t502: AddedToken(\"[control_500]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t503: AddedToken(\"[control_501]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t504: AddedToken(\"[control_502]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t505: AddedToken(\"[control_503]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t506: AddedToken(\"[control_504]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t507: AddedToken(\"[control_505]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t508: AddedToken(\"[control_506]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t509: AddedToken(\"[control_507]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t510: AddedToken(\"[control_508]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t511: AddedToken(\"[control_509]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t512: AddedToken(\"[control_510]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t513: AddedToken(\"[control_511]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t514: AddedToken(\"[control_512]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t515: AddedToken(\"[control_513]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t516: AddedToken(\"[control_514]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t517: AddedToken(\"[control_515]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t518: AddedToken(\"[control_516]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t519: AddedToken(\"[control_517]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t520: AddedToken(\"[control_518]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t521: AddedToken(\"[control_519]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t522: AddedToken(\"[control_520]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t523: AddedToken(\"[control_521]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t524: AddedToken(\"[control_522]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t525: AddedToken(\"[control_523]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t526: AddedToken(\"[control_524]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t527: AddedToken(\"[control_525]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t528: AddedToken(\"[control_526]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t529: AddedToken(\"[control_527]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t530: AddedToken(\"[control_528]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t531: AddedToken(\"[control_529]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t532: AddedToken(\"[control_530]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t533: AddedToken(\"[control_531]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t534: AddedToken(\"[control_532]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t535: AddedToken(\"[control_533]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t536: AddedToken(\"[control_534]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t537: AddedToken(\"[control_535]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t538: AddedToken(\"[control_536]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t539: AddedToken(\"[control_537]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t540: AddedToken(\"[control_538]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t541: AddedToken(\"[control_539]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t542: AddedToken(\"[control_540]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t543: AddedToken(\"[control_541]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t544: AddedToken(\"[control_542]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t545: AddedToken(\"[control_543]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t546: AddedToken(\"[control_544]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t547: AddedToken(\"[control_545]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t548: AddedToken(\"[control_546]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t549: AddedToken(\"[control_547]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t550: AddedToken(\"[control_548]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t551: AddedToken(\"[control_549]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t552: AddedToken(\"[control_550]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t553: AddedToken(\"[control_551]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t554: AddedToken(\"[control_552]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t555: AddedToken(\"[control_553]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t556: AddedToken(\"[control_554]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t557: AddedToken(\"[control_555]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t558: AddedToken(\"[control_556]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t559: AddedToken(\"[control_557]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t560: AddedToken(\"[control_558]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t561: AddedToken(\"[control_559]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t562: AddedToken(\"[control_560]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t563: AddedToken(\"[control_561]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t564: AddedToken(\"[control_562]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t565: AddedToken(\"[control_563]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t566: AddedToken(\"[control_564]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t567: AddedToken(\"[control_565]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t568: AddedToken(\"[control_566]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t569: AddedToken(\"[control_567]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t570: AddedToken(\"[control_568]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t571: AddedToken(\"[control_569]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t572: AddedToken(\"[control_570]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t573: AddedToken(\"[control_571]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t574: AddedToken(\"[control_572]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t575: AddedToken(\"[control_573]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t576: AddedToken(\"[control_574]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t577: AddedToken(\"[control_575]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t578: AddedToken(\"[control_576]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t579: AddedToken(\"[control_577]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t580: AddedToken(\"[control_578]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t581: AddedToken(\"[control_579]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t582: AddedToken(\"[control_580]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t583: AddedToken(\"[control_581]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t584: AddedToken(\"[control_582]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t585: AddedToken(\"[control_583]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t586: AddedToken(\"[control_584]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t587: AddedToken(\"[control_585]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t588: AddedToken(\"[control_586]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t589: AddedToken(\"[control_587]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t590: AddedToken(\"[control_588]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t591: AddedToken(\"[control_589]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t592: AddedToken(\"[control_590]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t593: AddedToken(\"[control_591]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t594: AddedToken(\"[control_592]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t595: AddedToken(\"[control_593]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t596: AddedToken(\"[control_594]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t597: AddedToken(\"[control_595]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t598: AddedToken(\"[control_596]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t599: AddedToken(\"[control_597]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t600: AddedToken(\"[control_598]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t601: AddedToken(\"[control_599]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t602: AddedToken(\"[control_600]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t603: AddedToken(\"[control_601]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t604: AddedToken(\"[control_602]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t605: AddedToken(\"[control_603]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t606: AddedToken(\"[control_604]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t607: AddedToken(\"[control_605]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t608: AddedToken(\"[control_606]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t609: AddedToken(\"[control_607]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t610: AddedToken(\"[control_608]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t611: AddedToken(\"[control_609]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t612: AddedToken(\"[control_610]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t613: AddedToken(\"[control_611]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t614: AddedToken(\"[control_612]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t615: AddedToken(\"[control_613]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t616: AddedToken(\"[control_614]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t617: AddedToken(\"[control_615]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t618: AddedToken(\"[control_616]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t619: AddedToken(\"[control_617]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t620: AddedToken(\"[control_618]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t621: AddedToken(\"[control_619]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t622: AddedToken(\"[control_620]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t623: AddedToken(\"[control_621]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t624: AddedToken(\"[control_622]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t625: AddedToken(\"[control_623]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t626: AddedToken(\"[control_624]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t627: AddedToken(\"[control_625]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t628: AddedToken(\"[control_626]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t629: AddedToken(\"[control_627]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t630: AddedToken(\"[control_628]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t631: AddedToken(\"[control_629]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t632: AddedToken(\"[control_630]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t633: AddedToken(\"[control_631]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t634: AddedToken(\"[control_632]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t635: AddedToken(\"[control_633]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t636: AddedToken(\"[control_634]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t637: AddedToken(\"[control_635]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t638: AddedToken(\"[control_636]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t639: AddedToken(\"[control_637]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t640: AddedToken(\"[control_638]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t641: AddedToken(\"[control_639]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t642: AddedToken(\"[control_640]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t643: AddedToken(\"[control_641]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t644: AddedToken(\"[control_642]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t645: AddedToken(\"[control_643]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t646: AddedToken(\"[control_644]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t647: AddedToken(\"[control_645]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t648: AddedToken(\"[control_646]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t649: AddedToken(\"[control_647]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t650: AddedToken(\"[control_648]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t651: AddedToken(\"[control_649]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t652: AddedToken(\"[control_650]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t653: AddedToken(\"[control_651]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t654: AddedToken(\"[control_652]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t655: AddedToken(\"[control_653]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t656: AddedToken(\"[control_654]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t657: AddedToken(\"[control_655]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t658: AddedToken(\"[control_656]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t659: AddedToken(\"[control_657]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t660: AddedToken(\"[control_658]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t661: AddedToken(\"[control_659]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t662: AddedToken(\"[control_660]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t663: AddedToken(\"[control_661]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t664: AddedToken(\"[control_662]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t665: AddedToken(\"[control_663]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t666: AddedToken(\"[control_664]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t667: AddedToken(\"[control_665]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t668: AddedToken(\"[control_666]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t669: AddedToken(\"[control_667]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t670: AddedToken(\"[control_668]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t671: AddedToken(\"[control_669]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t672: AddedToken(\"[control_670]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t673: AddedToken(\"[control_671]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t674: AddedToken(\"[control_672]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t675: AddedToken(\"[control_673]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t676: AddedToken(\"[control_674]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t677: AddedToken(\"[control_675]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t678: AddedToken(\"[control_676]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t679: AddedToken(\"[control_677]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t680: AddedToken(\"[control_678]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t681: AddedToken(\"[control_679]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t682: AddedToken(\"[control_680]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t683: AddedToken(\"[control_681]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t684: AddedToken(\"[control_682]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t685: AddedToken(\"[control_683]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t686: AddedToken(\"[control_684]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t687: AddedToken(\"[control_685]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t688: AddedToken(\"[control_686]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t689: AddedToken(\"[control_687]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t690: AddedToken(\"[control_688]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t691: AddedToken(\"[control_689]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t692: AddedToken(\"[control_690]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t693: AddedToken(\"[control_691]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t694: AddedToken(\"[control_692]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t695: AddedToken(\"[control_693]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t696: AddedToken(\"[control_694]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t697: AddedToken(\"[control_695]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t698: AddedToken(\"[control_696]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t699: AddedToken(\"[control_697]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t700: AddedToken(\"[control_698]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t701: AddedToken(\"[control_699]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t702: AddedToken(\"[control_700]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t703: AddedToken(\"[control_701]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t704: AddedToken(\"[control_702]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t705: AddedToken(\"[control_703]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t706: AddedToken(\"[control_704]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t707: AddedToken(\"[control_705]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t708: AddedToken(\"[control_706]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t709: AddedToken(\"[control_707]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t710: AddedToken(\"[control_708]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t711: AddedToken(\"[control_709]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t712: AddedToken(\"[control_710]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t713: AddedToken(\"[control_711]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t714: AddedToken(\"[control_712]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t715: AddedToken(\"[control_713]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t716: AddedToken(\"[control_714]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t717: AddedToken(\"[control_715]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t718: AddedToken(\"[control_716]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t719: AddedToken(\"[control_717]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t720: AddedToken(\"[control_718]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t721: AddedToken(\"[control_719]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t722: AddedToken(\"[control_720]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t723: AddedToken(\"[control_721]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t724: AddedToken(\"[control_722]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t725: AddedToken(\"[control_723]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t726: AddedToken(\"[control_724]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t727: AddedToken(\"[control_725]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t728: AddedToken(\"[control_726]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t729: AddedToken(\"[control_727]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t730: AddedToken(\"[control_728]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t731: AddedToken(\"[control_729]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t732: AddedToken(\"[control_730]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t733: AddedToken(\"[control_731]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t734: AddedToken(\"[control_732]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t735: AddedToken(\"[control_733]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t736: AddedToken(\"[control_734]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t737: AddedToken(\"[control_735]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t738: AddedToken(\"[control_736]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t739: AddedToken(\"[control_737]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t740: AddedToken(\"[control_738]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t741: AddedToken(\"[control_739]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t742: AddedToken(\"[control_740]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t743: AddedToken(\"[control_741]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t744: AddedToken(\"[control_742]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t745: AddedToken(\"[control_743]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t746: AddedToken(\"[control_744]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t747: AddedToken(\"[control_745]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t748: AddedToken(\"[control_746]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t749: AddedToken(\"[control_747]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t750: AddedToken(\"[control_748]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t751: AddedToken(\"[REFERENCE_DOC_19]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t752: AddedToken(\"[REFERENCE_DOC_18]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t753: AddedToken(\"[REFERENCE_DOC_17]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t754: AddedToken(\"[REFERENCE_DOC_16]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t755: AddedToken(\"[REFERENCE_DOC_15]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t756: AddedToken(\"[REFERENCE_DOC_14]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t757: AddedToken(\"[REFERENCE_DOC_13]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t758: AddedToken(\"[REFERENCE_DOC_12]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t759: AddedToken(\"[REFERENCE_DOC_11]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t760: AddedToken(\"[REFERENCE_DOC_10]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t761: AddedToken(\"[REFERENCE_DOC_9]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t762: AddedToken(\"[REFERENCE_DOC_8]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t763: AddedToken(\"[REFERENCE_DOC_7]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t764: AddedToken(\"[REFERENCE_DOC_6]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t765: AddedToken(\"[REFERENCE_DOC_5]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t766: AddedToken(\"[REFERENCE_DOC_4]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t767: AddedToken(\"[REFERENCE_DOC_3]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t768: AddedToken(\"[REFERENCE_DOC_2]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t769: AddedToken(\"[REFERENCE_DOC_1]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n\t770: AddedToken(\"[REFERENCE_DOC_0]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),\n}, max_context_size=32768, hyperparams={'sampling_params': SamplingParams(n=1, best_of=1, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.7, top_p=1.0, top_k=-1, min_p=0.0, seed=None, use_beam_search=False, length_penalty=1.0, early_stopping=False, stop=[], stop_token_ids=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=2048, min_tokens=0, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True, truncate_prompt_tokens=None)}, pipeline=PromptPipeline([TranslateRole(role=<ChatRole.SYSTEM: 'system'>, predicate=None, to=<ChatRole.USER: 'user'>, warn='The Mistral prompt format does not natively support the SYSTEM role. These messages will be sent to the model as USER messages.'),\n MergeConsecutive(role=<ChatRole.USER: 'user'>, predicate=None, sep='\\n\\n', joiner=None, out_role=<ChatRole.USER: 'user'>),\n MergeConsecutive(role=<ChatRole.ASSISTANT: 'assistant'>, predicate=None, sep=' ', joiner=None, out_role=<ChatRole.ASSISTANT: 'assistant'>),\n Wrap(role=<ChatRole.USER: 'user'>, predicate=None, prefix='[INST] ', suffix='[/INST]'),\n EnsureBoundFunctionCalls(id_translator=<function <lambda> at 0x7f0c62cdd940>),\n FunctionCallFmt(func=<function json_tool_call at 0x7f0c62cddbc0>, prefix='[TOOL_CALLS] [', sep=',', suffix=']'),\n Apply(role=<ChatRole.FUNCTION: 'function'>, predicate=None, func=<function fmt_function_call_result at 0x7f0c62cdda80>, func_wrapped=<function Apply.__init__.<locals>.<lambda> at 0x7f0c62cdd4e0>),\n Apply(role=<ChatRole.USER: 'user'>, predicate=None, func=<function fmt_available_tools at 0x7f0c62cdd760>, func_wrapped=<function fmt_available_tools at 0x7f0c62cdd760>),\n MacroApply(func=<function ensure_available_tools at 0x7f0c62cdd800>),\n ConversationFmt(prefix='<s>', sep='', suffix='', generation_suffix='', user_prefix='', user_suffix='', assistant_prefix=' ', assistant_suffix='</s>', assistant_suffix_if_last='', system_prefix='', system_suffix='', function_prefix='[TOOL_RESULTS] ', function_suffix='[/TOOL_RESULTS]')]), token_reserve=2))","functions":[{"name":"search","desc":"Search Wikipedia for an article with the given title, and get its content. If no such article is found, return similar article names.","auto_retry":true,"auto_truncate":null,"after":"assistant","json_schema":{"properties":{"query":{"type":"string"}},"required":["query"],"type":"object"}}]}
{"type":"kani_state_change","timestamp":1729887385.2690904,"id":"92477fb6-a856-409f-9af4-758a1edf60ec","state":"running"}
{"type":"kani_message","timestamp":1729887385.269108,"id":"92477fb6-a856-409f-9af4-758a1edf60ec","msg":{"role":"user","content":"Out of the top 5 Formula 1 drivers with the most race wins, who was born before 1990?","name":null,"tool_call_id":null,"tool_calls":null,"is_tool_call_error":null}}
{"type":"root_message","timestamp":1729887385.2691114,"msg":{"role":"user","content":"Out of the top 5 Formula 1 drivers with the most race wins, who was born before 1990?","name":null,"tool_call_id":null,"tool_calls":null,"is_tool_call_error":null}}
{"type":"kani_message","timestamp":1729887387.0383716,"id":"92477fb6-a856-409f-9af4-758a1edf60ec","msg":{"role":"assistant","content":"","name":null,"tool_call_id":null,"tool_calls":[{"id":"2fce57b9-52f2-46ce-bbd9-f158d046ad7d","type":"function","function":{"name":"search","arguments":"{\"query\": \"Formula 1 drivers with the most race wins\"}"}}],"is_tool_call_error":null}}
{"type":"root_message","timestamp":1729887387.038382,"msg":{"role":"assistant","content":"","name":null,"tool_call_id":null,"tool_calls":[{"id":"2fce57b9-52f2-46ce-bbd9-f158d046ad7d","type":"function","function":{"name":"search","arguments":"{\"query\": \"Formula 1 drivers with the most race wins\"}"}}],"is_tool_call_error":null}}
{"type":"tokens_used","timestamp":1729887387.0383902,"id":"92477fb6-a856-409f-9af4-758a1edf60ec","prompt_tokens":108,"completion_tokens":29}
{"type":"kani_message","timestamp":1729887387.4429348,"id":"92477fb6-a856-409f-9af4-758a1edf60ec","msg":{"role":"function","content":"No page with that title exists. Try searching for one of these similar articles instead:\n- List of Formula One driver records\n- List of Formula One drivers\n- Formula One drivers from Germany\n- 2024 Formula One World Championship\n- Formula One drivers from the United Kingdom\n- Michael Schumacher\n- List of Formula One sprint winners\n- Lewis Hamilton\n- Will Brown (racing driver)\n- Formula One drivers from the United States","name":"search","tool_call_id":"2fce57b9-52f2-46ce-bbd9-f158d046ad7d","tool_calls":null,"is_tool_call_error":false}}
{"type":"root_message","timestamp":1729887387.4429483,"msg":{"role":"function","content":"No page with that title exists. Try searching for one of these similar articles instead:\n- List of Formula One driver records\n- List of Formula One drivers\n- Formula One drivers from Germany\n- 2024 Formula One World Championship\n- Formula One drivers from the United Kingdom\n- Michael Schumacher\n- List of Formula One sprint winners\n- Lewis Hamilton\n- Will Brown (racing driver)\n- Formula One drivers from the United States","name":"search","tool_call_id":"2fce57b9-52f2-46ce-bbd9-f158d046ad7d","tool_calls":null,"is_tool_call_error":false}}
{"type":"kani_message","timestamp":1729887388.9773176,"id":"92477fb6-a856-409f-9af4-758a1edf60ec","msg":{"role":"assistant","content":"","name":null,"tool_call_id":null,"tool_calls":[{"id":"834aae24-863f-4517-b115-c2af5ecc1170","type":"function","function":{"name":"search","arguments":"{\"query\": \"List of Formula One driver records\"}"}}],"is_tool_call_error":null}}
{"type":"root_message","timestamp":1729887388.9773285,"msg":{"role":"assistant","content":"","name":null,"tool_call_id":null,"tool_calls":[{"id":"834aae24-863f-4517-b115-c2af5ecc1170","type":"function","function":{"name":"search","arguments":"{\"query\": \"List of Formula One driver records\"}"}}],"is_tool_call_error":null}}
{"type":"tokens_used","timestamp":1729887388.9773345,"id":"92477fb6-a856-409f-9af4-758a1edf60ec","prompt_tokens":275,"completion_tokens":25}
{"type":"foqa_article_retrieved","timestamp":1729887389.4310155,"id":"92477fb6-a856-409f-9af4-758a1edf60ec","article_title":"List of Formula One driver records","article_pageid":13599687,"article_revid":1185947380}
{"type":"foqa_retrieval_type","timestamp":1729887390.1929233,"id":"92477fb6-a856-409f-9af4-758a1edf60ec","retrieved_tokens":16093,"max_search_tokens":16384,"retrieval_type":"openai"}
{"type":"kani_message","timestamp":1729887390.194158,"id":"92477fb6-a856-409f-9af4-758a1edf60ec","msg":{"role":"function","content":"<document>\n<title>List of Formula One driver records</title>\n<fragment>\n|  | Driver\n | Age\n | Year\n |\n| --- | --- | --- | --- |\n| 1\n | ![Germany](image) Sebastian Vettel | 25 years, 146 days\n | 2012 |\n| 2\n | ![Netherlands](image) **Max Verstappen** | 26 years, 7 days\n | 2023 |\n| 3\n | ![United Kingdom](image) **Lewis Hamilton** | 30 years, 292 days\n | 2015 |\n| 4\n | ![Brazil](image) Ayrton Senna | 31 years, 214 days\n | 1991 |\n| 5\n | ![Germany](image) Michael Schumacher | 31 years, 280 days\n | 2000 |\n| 6\n | ![United Kingdom](image) Jackie Stewart | 34 years, 91 days\n | 1973 |\n| 7\n | ![France](image) Alain Prost | 34 years, 241 days\n | 1989 |\n| 8\n | ![Brazil](image) Nelson Piquet | 35 years, 63 days\n | 1987 |\n| 9\n | ![Austria](image) Niki Lauda | 35 years, 243 days\n | 1984 |\n| 10\n | ![Australia](image) Jack Brabham | 40 years, 128 days\n | 1966 |\n| Source:[75][76][78]\n |\n\n\n### Youngest World Drivers' Championship winners[edit]\n\n\n(at the moment they clinched the title)\n\n\n\n\n\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Year\n |\n| --- | --- | --- | --- |\n| 1\n | ![Germany](image) Sebastian Vettel | 23 years, 134 days\n | 2010 |\n| 2\n | ![United Kingdom](image) **Lewis Hamilton** | 23 years, 300 days\n | 2008 |\n| 3\n | ![Spain](image) **Fernando Alonso** | 24 years, 59 days\n | 2005 |\n| 4\n | ![Netherlands](image) **Max Verstappen** | 24 years, 73 days\n | 2021 |\n| 5\n | ![Germany](image) Sebastian Vettel | 24 years, 99 days\n | 2011 |\n| 6\n | ![Netherlands](image) **Max Verstappen** | 25 years, 9 days\n | 2022 |\n| 7\n | ![Spain](image) **Fernando Alonso** | 25 years, 85 days\n | 2006 |\n| 8\n | ![Germany](image) Sebastian Vettel | 25 years, 146 days\n | 2012 |\n| 9\n | ![Brazil](image) Emerson Fittipaldi | 25 years, 303 days\n | 1972 |\n| 10\n | ![Germany](image) Michael Schumacher | 25 years, 314 days\n | 1994 |\n| Source:[75][79]\n |\n\n\n### Oldest World Drivers' Championship winners[edit]\n\n\n(at the moment they clinched their only/last title)\n\n\n\n\n\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Year\n |\n| --- | --- | --- | --- |\n| 1\n | ![Germany](image) Sebastian Vettel | 24 years, 99 days\n | 2011 |\n| 2\n | ![Netherlands](image) **Max Verstappen** | 25 years, 9 days\n | 2022 |\n| 3\n | ![Spain](image) **Fernando Alonso** | 25 years, 85 days\n | 2006 |\n| 4\n | ![Germany](image) Michael Schumacher | 26 years, 293 days\n | 1995 |\n| 5\n | ![Brazil](image) Emerson Fittipaldi | 27 years, 299 days\n | 1974 |\n| 6\n | ![Austria](image) Niki Lauda | 28 years, 202 days\n | 1977 |\n| 7\n | ![United Kingdom](image) Jim Clark | 29 years, 137 days\n | 1965 |\n| 8\n | ![United Kingdom](image) **Lewis Hamilton** | 29 years, 321 days\n | 2014 |\n| 9\n | ![Brazil](image) Ayrton Senna | 30 years, 215 days\n | 1990 |\n| 10\n | ![Finland](image) Mika Häkkinen | 31 years, 33 days\n | 1999 |\n| Source:[75][76][77]\n |\n\n\n### Youngest triple World Drivers' Championship winners[edit]\n\n\n(at the moment they clinched their third title)\n\n\n\n\n\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Year\n |\n| --- | --- | --- | --- |\n| 1\n | ![Germany](image) Sebastian Vettel | 23 years, 134 days\n | 2010 |\n| 2\n | ![United Kingdom](image) **Lewis Hamilton** | 23 years, 300 days\n | 2008 |\n| 3\n | ![Spain](image) **Fernando Alonso** | 24 years, 59 days\n | 2005 |\n| 4\n | ![Netherlands](image) **Max Verstappen** | 24 years, 73 days\n | 2021 |\n| 5\n | ![Brazil](image) Emerson Fittipaldi | 25 years, 303 days\n | 1972 |\n| 6\n | ![Germany](image) Michael Schumacher | 25 years, 314 days\n | 1994 |\n| 7\n | ![Austria](image) Niki Lauda | 26 years, 197 days\n | 1975 |\n| 8\n | ![Canada](image) Jacques Villeneuve | 26 years, 200 days\n | 1997 |\n| 9\n | ![United Kingdom](image) Jim Clark | 27 years, 174 days\n | 1963 |\n| 10\n | ![Finland](image) Kimi Räikkönen | 28 years, 4 days\n | 2007 |\n| Sources:[4][75]\n |\n\n\n### Youngest double World Drivers' Championship winners[edit]\n\n\n(at the moment they clinched their second title)\n\n\n\n\n\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Seasons\n | Starts\n |\n| --- | --- | --- | --- |\n| 1\n | ![Spain](image) **Fernando Alonso** | 2001, 2003–2018, 2021–2023 | 376\n |\n| 2\n | ![Finland](image) Kimi Räikkönen | 2001–2009, 2012–2021 | 349\n |\n| 3\n | ![United Kingdom](image) **Lewis Hamilton** | 2007–2023 | 331\n |\n| 4\n | ![Brazil](image) Rubens Barrichello | 1993–2011 | 322\n |\n| 5\n | ![Germany](image) Michael Schumacher | 1991–2006, 2010–2012 | 306\n |\n| ![United Kingdom](image) Jenson Button | 2000–2017 |\n| 7\n | ![Germany](image) Sebastian Vettel | 2007–2022 | 299\n |\n| 8\n | ![Brazil](image) Felipe Massa | 2002, 2004–2017 | 269\n |\n| 9\n | ![Italy](image) Riccardo Patrese | 1977–1993 | 256\n |\n| ![Mexico](image) **Sergio Pérez** | 2011–2023 |\n| Sources:[2][3]\n |\n\n\n### Youngest drivers to start a race[edit]\n\n\n\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Seasons\n | Years\n |\n| --- | --- | --- | --- |\n| 1\n | ![Austria](image) Niki Lauda | 6\n | 1977 | 1984 |\n| 2\n | ![Australia](image) Jack Brabham | 5\n | 1960 | 1966 |\n| ![United Kingdom](image) Graham Hill | 1962 | 1968 |\n| ![United Kingdom](image) **Lewis Hamilton** | 2008 | 2014 |\n| 5\n | ![Germany](image) Michael Schumacher | 4\n | 1995 | 2000 |\n| 6\n | ![Brazil](image) Nelson Piquet | 3\n | 1983 | 1987 |\n| ![France](image) Alain Prost | 1989 | 1993 |\n\n\n### Youngest World Drivers' Championship first-time winners[edit]\n\n\n(at the moment they clinched their first/only title)\n\n\n\n\n\n\n</fragment>\n<fragment>\n\nLuigi Fagioli is the only World Championship race winner born in the 19th century.[15]\n\n\n\n### Fewest races before first win[edit]\n\n\n\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Age\n | Place\n | Race\n |\n| --- | --- | --- | --- | --- |\n| 1\n | ![Netherlands](image) **Max Verstappen** | 17 years, 166 days\n | Ret | 2015 Australian Grand Prix |\n| 2\n | ![Canada](image) **Lance Stroll** | 18 years, 148 days\n | Ret | 2017 Australian Grand Prix |\n| 3\n | ![United Kingdom](image) **Lando Norris** | 19 years, 124 days\n | 12th\n | 2019 Australian Grand Prix |\n| 4\n | ![Spain](image) Jaime Alguersuari | 19 years, 125 days\n | 15th\n | 2009 Hungarian Grand Prix |\n| 5\n | ![New Zealand](image) Mike Thackwell | 19 years, 182 days\n | Ret | 1980 Canadian Grand Prix |\n| 6\n | ![Mexico](image) Ricardo Rodríguez | 19 years, 208 days\n | Ret | 1961 Italian Grand Prix |\n| 7\n | ![Spain](image) **Fernando Alonso** | 19 years, 218 days\n | 12th\n | 2001 Australian Grand Prix |\n| 8\n | ![Argentina](image) Esteban Tuero | 19 years, 320 days\n | Ret | 1998 Australian Grand Prix |\n| 9\n | ![New Zealand](image) Chris Amon | 19 years, 324 days\n | Ret | 1963 Belgian Grand Prix |\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Place\n | Race\n | Career race number\n |\n| --- | --- | --- | --- | --- | --- |\n| 1\n | ![Netherlands](image) **Max Verstappen** | 17 years, 180 days\n | 7th\n | 2015 Malaysian Grand Prix | 2nd race\n |\n| 2\n | ![Canada](image) **Lance Stroll** | 18 years, 225 days\n | 9th\n | 2017 Canadian Grand Prix | 7th race\n |\n| 3\n | ![United Kingdom](image) **Lando Norris** | 19 years, 138 days\n | 6th\n | 2019 Bahrain Grand Prix | 2nd race\n |\n| 4\n | ![Russia](image) Daniil Kvyat | 19 years, 324 days\n | 9th\n | 2014 Australian Grand Prix | 1st race\n |\n| 5\n | ![Germany](image) Sebastian Vettel | 19 years, 349 days\n | 8th\n | 2007 United States Grand Prix | 1st race\n |\n| 6\n | ![Spain](image) Jaime Alguersuari | 20 years, 12 days\n | 9th\n | 2010 Malaysian Grand Prix | 11th race\n |\n| 7\n | ![United Kingdom](image) Jenson Button | 20 years, 67 days\n | 6th\n | 2000 Brazilian Grand Prix | 2nd race\n |\n| 8\n | ![Mexico](image) Ricardo Rodríguez | 20 years, 123 days\n | 4th\n | 1962 Belgian Grand Prix | 3rd race\n |\n| 9\n\n</fragment>\n<fragment>\n\n![Brazil](image) Ayrton Senna (1990–1991)![United Kingdom](image) Nigel Mansell (1992)![France](image) Alain Prost (1993)![Germany](image) Michael Schumacher (1994–1995)![United Kingdom](image) Damon Hill (1996)![Canada](image) Jacques Villeneuve (1997)![Finland](image) Mika Häkkinen (1998–1999)\n | [98][99] |\n| Fewest drivers becoming World Champion in a decade | 3 (2010s) | ![Germany](image) Sebastian Vettel (2010–2013)![United Kingdom](image) **Lewis Hamilton** (2014–2015, 2017–2019)![Germany](image) Nico Rosberg (2016) | [98][99] |\n| Wins\n |\n| Most different Grands Prix won | 31 | ![United Kingdom](image) **Lewis Hamilton** | [100] |\n| Wins at most different circuits | 31 | ![United Kingdom](image) **Lewis Hamilton** | [101] |\n| Most wins with the same constructor | 82 | ![United Kingdom](image) **Lewis Hamilton** (Mercedes) | [102] |\n| Wins with most different constructors | 5 | ![United Kingdom](image) Stirling Moss (Mercedes, Maserati, Vanwall, Cooper, Lotus) | [103] |\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Race\n |\n| --- | --- | --- | --- |\n| 1\n | ![Netherlands](image) **Max Verstappen** | 18 years, 228 days\n | 2016 Spanish Grand Prix |\n| 2\n | ![Germany](image) Sebastian Vettel | 21 years, 73 days\n | 2008 Italian Grand Prix |\n| 3\n | ![Monaco](image) **Charles Leclerc** | 21 years, 320 days\n | 2019 Belgian Grand Prix |\n| 4\n | ![Spain](image) **Fernando Alonso** | 22 years, 26 days\n | 2003 Hungarian Grand Prix |\n| 5\n | ![United States](image) Troy Ruttman[N 1] | 22 years, 80 days\n | 1952 Indianapolis 500[N 1] |\n| 6\n | ![New Zealand](image) Bruce McLaren | 22 years, 104 days\n | 1959 United States Grand Prix |\n| 7\n | ![United Kingdom](image) **Lewis Hamilton** | 22 years, 154 days\n | 2007 Canadian Grand Prix |\n| 8\n | ![Finland](image) Kimi Räikkönen | 23 years, 157 days\n | 2003 Malaysian Grand Prix |\n| 9\n | ![Poland](image) Robert Kubica | 23 years, 184 days\n | 2008 Canadian Grand Prix |\n| 10\n | ![Belgium](image) Jacky Ickx | 23 years, 188 days\n | 1968 French Grand Prix |\n| Source:[14]\n |\n\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Race\n |\n| --- | --- | --- | --- |\n| 1\n | ![Germany](image) Sebastian Vettel | 21 years, 72 days\n | 2008 Italian Grand Prix |\n| 2\n | ![Monaco](image) **Charles Leclerc** | 21 years, 165 days\n | 2019 Bahrain Grand Prix |\n| 3\n | ![Spain](image) **Fernando Alonso** | 21 years, 236 days\n | 2003 Malaysian Grand Prix |\n| 4\n | ![Netherlands](image) **Max Verstappen** | 21 years, 307 days\n | 2019 Hungarian Grand Prix |\n| 5\n | ![United Kingdom](image) **Lando Norris** | 21 years, 316 days\n | 2021 Russian Grand Prix |\n| 6\n | ![Canada](image) **Lance Stroll** | 22 years, 16 days\n | 2020 Turkish Grand Prix |\n| 7\n | ![Brazil](image) Rubens Barrichello | 22 years, 97 days\n | 1994 Belgian Grand Prix |\n| 8\n | ![United Kingdom](image) **Lewis Hamilton** | 22 years, 153 days\n | 2007 Canadian Grand Prix |\n| 9\n | ![Italy](image) Andrea de Cesaris | 22 years, 308 days\n | 1982 United States Grand Prix West |\n| 10\n | ![Germany](image) **Nico Hülkenberg** | 23 years, 79 days\n | 2010 Brazilian Grand Prix |\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Season\n | Races\n | Poles\n | Percentage\n |\n| --- | --- | --- | --- | --- | --- |\n| 1\n | ![United Kingdom](image) Nigel Mansell | 1992 | 16\n | 14\n | 87.50%\n |\n| 2\n | ![Brazil](image) Ayrton Senna | 1988 | 16\n | 13\n | 81.25%\n |\n| 1989 | 16\n | 13\n |\n| ![France](image) Alain Prost | 1993 | 16\n | 13\n |\n| 5\n | ![Germany](image) Sebastian Vettel | 2011 | 19\n | 15\n | 78.95%\n |\n| 6\n | ![Argentina](image) Juan Manuel Fangio | 1956 | 8\n | 6\n | 75.00%\n |\n| 7\n | ![United Kingdom](image) Jim Clark | 1963 | 10\n | 7\n | 70.00%\n |\n| 8\n | ![Finland](image) Mika Häkkinen | 1999 | 16\n | 11\n | 68.75%\n |\n| 9\n | ![Italy](image) Alberto Ascari | 1953 | 9\n | 6\n | 66.67%\n |\n| ![United Kingdom](image) Jim Clark | 1962 | 9\n | 6\n |\n| Source:[26]\n |\n\n\n### Youngest polesitters[edit]\n\n\n(only the first pole position for each driver is listed)\n\n\n\n\n\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Wins\n | Grand Prix\n | Seasons\n |\n| --- | --- | --- | --- | --- |\n| 1\n | ![Brazil](image) Ayrton Senna | 5\n | Monaco Grand Prix | 1989, 1990, 1991, 1992, 1993 |\n| ![United Kingdom](image) **Lewis Hamilton** | Spanish Grand Prix | 2017, 2018, 2019, 2020, 2021 |\n| 3\n | ![Argentina](image) Juan Manuel Fangio | 4\n | Argentine Grand Prix | 1954, 1955, 1956, 1957 |\n| ![United Kingdom](image) Jim Clark | Belgian Grand Prix | 1962, 1963, 1964, 1965 |\n| British Grand Prix | 1962, 1963, 1964, 1965 |\n| ![Brazil](image) Ayrton Senna | Belgian Grand Prix | 1988, 1989, 1990, 1991 |\n| ![Germany](image) Michael Schumacher | Spanish Grand Prix | 2001, 2002, 2003, 2004 |\n| United States Grand Prix | 2003, 2004, 2005, 2006 |\n| ![United Kingdom](image) **Lewis Hamilton** | British Grand Prix | 2014, 2015, 2016, 2017 |\n| United States Grand Prix | 2014, 2015, 2016, 2017 |\n| Source:[20]\n |\n\n\n### Most Grand Prix wins by drivers who have not won a World Championship[edit]\n\n\n\n\n</fragment>\n<fragment>\n\n*Note*: Bruce McLaren won the 1959 United States Grand Prix in the first season in which he drove a Formula One car, but he entered in two championship races in the 1958 season driving a Formula Two car on both occasions.\n\n\n\n### Youngest winners[edit]\n\n\n(only the first win for each driver is listed)\n\n\n\n\n\n\n</fragment>\n<fragment>\n | ![Argentina](image) José Froilán González | 1951 British Grand Prix |\n| ![Switzerland](image) Clay Regazzoni | 1970 Italian Grand Prix |\n| Source:[13]\n |\n\n\n### Most races before first win[edit]\n\n\n\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Race\n |\n| --- | --- | --- | --- |\n| 1\n | ![Netherlands](image) **Max Verstappen** | 18 years, 228 days\n | 2016 Spanish Grand Prix |\n| 2\n | ![Germany](image) Sebastian Vettel | 20 years, 89 days\n | 2007 Japanese Grand Prix |\n| 3\n | ![Monaco](image) **Charles Leclerc** | 21 years, 166 days\n | 2019 Bahrain Grand Prix |\n| 4\n | ![Switzerland](image) Sébastien Buemi | 21 years, 225 days\n | 2010 Canadian Grand Prix |\n| 5\n | ![Spain](image) **Fernando Alonso** | 21 years, 237 days\n | 2003 Malaysian Grand Prix |\n| 6\n | ![Poland](image) Robert Kubica | 21 years, 278 days\n | 2006 Italian Grand Prix |\n| 7\n | ![Mexico](image) Esteban Gutiérrez | 21 years, 280 days\n | 2013 Spanish Grand Prix |\n| 8\n | ![United States](image) Jimmy Davies[N 1] | 21 years, 285 days\n | 1951 Indianapolis 500[N 1] |\n| 9\n | ![United Kingdom](image) **Lando Norris** | 21 years, 303 days\n | 2021 Italian Grand Prix |\n| 10\n | ![Canada](image) **Lance Stroll** | 22 years, 17 days\n | 2020 Turkish Grand Prix |\n| Source:[63] |\n\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Race\n |\n| --- | --- | --- | --- |\n| 1\n | ![Argentina](image) Juan Manuel Fangio | 46 years, 209 days\n | 1958 Argentine Grand Prix |\n| 2\n | ![Italy](image) Piero Taruffi | 45 years, 219 days\n | 1952 Swiss Grand Prix |\n| 3\n | ![Italy](image) Giuseppe Farina | 44 years, 321 days\n | 1951 Italian Grand Prix |\n| 4\n | ![Australia](image) Jack Brabham | 44 years, 107 days\n | 1970 British Grand Prix |\n| 5\n | ![Italy](image) Luigi Villoresi | 44 years, 22 days\n | 1953 Dutch Grand Prix |\n| 6\n | ![Germany](image) Karl Kling | 43 years, 319 days\n | 1954 German Grand Prix |\n| 7\n | ![Germany](image) Michael Schumacher | 43 years, 201 days\n | 2012 German Grand Prix |\n| 8\n | ![United States](image) Paul Russo | 42 years, 50 days\n | 1956 Indianapolis 500 |\n| 9\n | ![France](image) Maurice Trintignant | 42 years, 43 days\n | 1959 United States Grand Prix |\n| 10\n | ![Spain](image) **Fernando Alonso** | 42 years, 29 days\n | 2023 Dutch Grand Prix |\n| Source:[34] |\n\n\n## Podium finishes[edit]\n\n\n</fragment>\n<fragment>\n| Most consecutive entries without starting | 14 | ![Italy](image) Claudio Langes (1990 United States Grand Prix – 1990 Spanish Grand Prix) | [139] |\n| Most consecutive race starts without scoring points | 53 | ![Finland](image) Heikki Kovalainen (2010 Monaco Grand Prix – 2012 Brazilian Grand Prix) |  |\n| Most races before scoring first points | 69 (43 starts) | ![Italy](image) Nicola Larini |  |\n| Shortest Formula One career (having qualified for at least one race) | 2 metres (6+1⁄2 ft) | ![Germany](image) Ernst Loof (1953 German Grand Prix)[N 19] | [150] |\n| Most seasons with at least one start | 20 | ![Spain](image) **Fernando Alonso** (2001, 2003–2018, 2021–2023) | [151] |\n| Youngest driver to drive at a Grand Prix meeting | 17 years, 3 days | ![Netherlands](image) **Max Verstappen** (2014 Japanese Grand Prix) | [152] |\n| Finishes\n |\n| Most classified finishes | 310 | ![Spain](image) **Fernando Alonso** | [153] |\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Age\n | Race\n |\n| --- | --- | --- | --- |\n| 1\n | ![Italy](image) Giuseppe Farina | 47 years, 79 days\n | 1954 Argentine Grand Prix |\n| 2\n | ![Argentina](image) Juan Manuel Fangio | 46 years, 209 days\n | 1958 Argentine Grand Prix |\n| 3\n | ![Australia](image) Jack Brabham | 44 years, 17 days\n | 1970 Spanish Grand Prix |\n| 4\n | ![United States](image) Mario Andretti | 42 years, 196 days\n | 1982 Italian Grand Prix |\n| 5\n | ![United Kingdom](image) Nigel Mansell | 41 years, 97 days\n | 1994 Australian Grand Prix |\n| 6\n | ![Argentina](image) Carlos Reutemann | 39 years, 188 days\n | 1981 Caesars Palace Grand Prix |\n| 7\n | ![United Kingdom](image) Graham Hill | 39 years, 156 days\n | 1968 British Grand Prix |\n| 8\n | ![Finland](image) Kimi Räikkönen | 38 years, 319 days\n | 2018 Italian Grand Prix |\n| 9\n | ![United States](image) Fred Agabashian[N 1] | 38 years, 283 days\n | 1952 Indianapolis 500[N 1] |\n| 10\n | ![France](image) Alain Prost | 38 years, 241 days\n | 1993 Japanese Grand Prix |\n| Source:[28]\n |\n\n\n</fragment>\n<fragment>\n\n(excluding drivers who competed from the very first championship season of 1950; including winning season)\n\n\n\n\n\n|  | Driver\n | Seasons[N 13] | First championship\n | Debut year\n |\n| --- | --- | --- | --- | --- |\n| 1\n | ![Canada](image) Jacques Villeneuve | 2\n | 1997 | 1996 |\n| ![United Kingdom](image) **Lewis Hamilton** | 2008 | 2007 |\n| 3\n | ![New Zealand](image) Denny Hulme | 3\n | 1967 | 1965 |\n| ![Brazil](image) Emerson Fittipaldi | 1972 | 1970 |\n| 5\n | ![United States](image) Phil Hill | 4\n | 1961 | 1958 |\n| ![United Kingdom](image) Jim Clark | 1963 | 1960 |\n| ![United Kingdom](image) James Hunt | 1976 | 1973 |\n| ![Brazil](image) Nelson Piquet | 1981 | 1978 |\n| ![Germany](image) Michael Schumacher | 1994 | 1991 |\n| ![Spain](image) **Fernando Alonso** | 2005 | 2001[N 14] |\n| ![Germany](image) Sebastian Vettel | 2010 | 2007 |\n| Source:[74] |\n\n\n### Most World Championship seasons before first title[edit]\n\n\n\n\n</fragment>\n<fragment>\n\n| Record\n | Driver\n | Age\n | Race\n |\n| --- | --- | --- | --- |\n| Pole and win\n | ![Germany](image) Sebastian Vettel | 21 years, 73 days\n | 2008 Italian Grand Prix |\n| Pole, win, and fastest lap(hat-trick)\n | ![Germany](image) Sebastian Vettel | 21 years, 353 days\n | 2009 British Grand Prix |\n| Pole, win, fastest lap, and led every lap(grand slam)\n | ![Netherlands](image) **Max Verstappen** | 23 years, 277 days\n | 2021 Austrian Grand Prix |\n| Source:[72] |\n\n\n### Oldest[edit]\n\n\n\n\n| Record\n | Driver\n | Age\n | Race\n |\n| --- | --- | --- | --- |\n| Pole and win\n | ![Argentina](image) Juan Manuel Fangio | 46 years, 41 days\n | 1957 German Grand Prix |\n| Pole, win, and fastest lap(hat-trick)\n | ![Argentina](image) Juan Manuel Fangio | 46 years, 41 days\n | 1957 German Grand Prix |\n| Pole, win, fastest lap, and led every lap(grand slam)\n | ![Argentina](image) Juan Manuel Fangio | 45 years, 42 days\n | 1956 German Grand Prix |\n| Source:[*citation needed*] |\n\n\n## Drivers' Championships[edit]\n\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Year\n |\n| --- | --- | --- | --- |\n| 1\n | ![Argentina](image) Juan Manuel Fangio | 46 years, 41 days\n | 1957 |\n| 2\n | ![Italy](image) Giuseppe Farina | 43 years, 308 days\n | 1950 |\n| 3\n | ![Australia](image) Jack Brabham | 40 years, 155 days\n | 1966 |\n| 4\n | ![United Kingdom](image) Graham Hill | 39 years, 262 days\n | 1968 |\n| 5\n | ![United Kingdom](image) Nigel Mansell | 39 years, 8 days\n | 1992 |\n| 6\n | ![France](image) Alain Prost | 38 years, 214 days\n | 1993 |\n| 7\n | ![United States](image) Mario Andretti | 38 years, 194 days\n | 1978 |\n| 8\n | ![United Kingdom](image) Damon Hill | 36 years, 26 days\n | 1996 |\n| 9\n | ![United Kingdom](image) **Lewis Hamilton** | 35 years, 313 days\n | 2020 |\n| 10\n | ![Austria](image) Niki Lauda | 35 years, 242 days\n | 1984 |\n| Source:[75][80]\n |\n\n\n## Other driver records[edit]\n\n\n\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Place\n | Race\n |\n| --- | --- | --- | --- | --- |\n| 1\n | ![Netherlands](image) **Max Verstappen** | 18 years, 228 days\n | 1st\n | 2016 Spanish Grand Prix |\n| 2\n | ![Canada](image) **Lance Stroll** | 18 years, 239 days\n | 3rd\n | 2017 Azerbaijan Grand Prix |\n| 3\n | ![United Kingdom](image) **Lando Norris** | 20 years, 235 days\n | 3rd\n | 2020 Austrian Grand Prix |\n| 4\n | ![Germany](image) Sebastian Vettel | 21 years, 73 days\n | 1st\n | 2008 Italian Grand Prix |\n| 5\n | ![Russia](image) Daniil Kvyat | 21 years, 91 days\n | 2nd\n | 2015 Hungarian Grand Prix |\n| 6\n | ![Denmark](image) **Kevin Magnussen** | 21 years, 162 days\n | 2nd\n | 2014 Australian Grand Prix |\n| 7\n | ![Monaco](image) **Charles Leclerc** | 21 years, 166 days\n | 3rd\n | 2019 Bahrain Grand Prix |\n| 8\n | ![Spain](image) **Fernando Alonso** | 21 years, 237 days\n | 3rd\n | 2003 Malaysian Grand Prix |\n| 9\n | ![Poland](image) Robert Kubica | 21 years, 278 days\n | 3rd\n | 2006 Italian Grand Prix |\n| 10\n\n</fragment>\n<fragment>\n| Sources:[10][11]\n |\n\n\n### Percentage wins[edit]\n\n\n\n\n|  | Driver\n | Seasons\n | Entries\n | Wins\n | Percentage\n |\n| --- | --- | --- | --- | --- | --- |\n| 1\n | ![Argentina](image) Juan Manuel Fangio | 1950–1951, 1953–1958 | 52[N 2] | 24\n | 46.15%\n |\n| 2\n | ![Italy](image) Alberto Ascari | 1950–1955 | 33[N 3] | 13\n | 39.39%\n |\n| 3\n | ![United Kingdom](image) Jim Clark | 1960–1968 | 73\n | 25\n | 34.25%\n |\n| 4\n | ![United States](image) Lee Wallard[N 1] | 1950–1951, 1954 | 3\n | 1\n | 33.33%\n |\n| ![United States](image) Bill Vukovich[N 1] | 1950–1955 | 6\n | 2\n |\n| 6\n | ![United Kingdom](image) **Lewis Hamilton** | 2007–2023 | 331\n | 103\n | 31.12%\n |\n| 7\n | ![Germany](image) Michael Schumacher | 1991–2006, 2010–2012 | 308\n | 91\n | 29.55%\n |\n| 8\n | ![Netherlands](image) **Max Verstappen** | 2015–2023 | 184\n | 53\n | 28.80%\n |\n| 9\n | ![United Kingdom](image) Jackie Stewart | 1965–1973 | 100\n | 27\n | 27.00%\n |\n| 10\n | ![Brazil](image) Ayrton Senna | 1984–1994 | 162\n | 41\n | 25.31%\n |\n| Sources:[10][11]\n |\n\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Race\n |\n| --- | --- | --- | --- |\n| 1\n | ![Netherlands](image) **Max Verstappen** | 19 years, 44 days\n | 2016 Brazilian Grand Prix |\n| 2\n | ![United Kingdom](image) **Lando Norris** | 20 years, 235 days\n | 2020 Austrian Grand Prix |\n| 3\n | ![Germany](image) Nico Rosberg | 20 years, 258 days\n | 2006 Bahrain Grand Prix |\n| 4\n | ![Monaco](image) **Charles Leclerc** | 21 years, 166 days\n | 2019 Bahrain Grand Prix |\n| 5\n | ![Mexico](image) Esteban Gutiérrez | 21 years, 280 days\n | 2013 Spanish Grand Prix |\n| 6\n | ![Spain](image) **Fernando Alonso** | 21 years, 321 days\n | 2003 Canadian Grand Prix |\n| 7\n | ![New Zealand](image) Bruce McLaren | 21 years, 322 days\n | 1959 British Grand Prix |\n| 8\n | ![Germany](image) Sebastian Vettel | 21 years, 353 days\n | 2009 British Grand Prix |\n| 9\n | ![Russia](image) Daniil Kvyat | 22 years, 19 days\n | 2016 Spanish Grand Prix |\n| 10\n | ![United Kingdom](image) **Lewis Hamilton** | 22 years, 91 days\n | 2007 Malaysian Grand Prix |\n| Source:[34] |\n\n\n</fragment>\n<fragment>\n| Longest time between first and last wins | 5,691 days | ![Finland](image) Kimi Räikkönen (2003 Malaysian Grand Prix – 2018 United States Grand Prix) | [104] |\n| Longest time between successive wins | 2,402 days | ![Italy](image) Riccardo Patrese (1983 South African Grand Prix – 1990 San Marino Grand Prix) | [105] |\n| Most races between successive wins | 114 | ![Finland](image) Kimi Räikkönen (2013 Australian Grand Prix – 2018 United States Grand Prix)\n | [105] |\n| Most race winners in one year | 11(1982) | ![France](image) Alain Prost![Austria](image) Niki Lauda![France](image) Didier Pironi![United Kingdom](image) John Watson![Italy](image) Riccardo Patrese![Brazil](image) Nelson Piquet![France](image) René Arnoux![France](image) Patrick Tambay![Italy](image) Elio de Angelis![Finland](image) Keke Rosberg ![Italy](image) Michele Alboreto | [106][107] |\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Consecutive entries\n | Races\n |\n| --- | --- | --- | --- |\n| 1\n | ![Brazil](image) Rubens Barrichello | 326\n | 1993 South African – 2011 Brazilian |\n| 2\n | ![Germany](image) Sebastian Vettel | 280\n | 2007 Hungarian – 2021 Abu Dhabi |\n| 3\n | ![United Kingdom](image) **Lewis Hamilton** | 265\n | 2007 Australian – 2020 Bahrain |\n| 4\n | ![United Kingdom](image) David Coulthard | 239\n | 1995 Brazilian – 2008 Brazilian |\n| 5\n | ![Australia](image) **Daniel Ricciardo** | 232\n | 2011 British – 2022 Abu Dhabi |\n| 6\n | ![Italy](image) Giancarlo Fisichella | 223\n | 1997 Australian – 2009 Abu Dhabi |\n| 7\n | ![Finland](image) **Valtteri Bottas** | 222\n | 2013 Australian – 2023 Las Vegas (ongoing) |\n| 8\n | ![Spain](image) **Fernando Alonso** | 219\n | 2003 Australian – 2014 Abu Dhabi |\n| ![United Kingdom](image) Jenson Button | 2005 European – 2016 Abu Dhabi |\n| 10\n | ![Australia](image) Mark Webber | 217\n | 2002 Australian – 2013 Brazilian |\n| Source:[7]\n |\n\n\n### Most races with a single constructor[edit]\n\n\n\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Points\n | Best WDC finish\n |\n| --- | --- | --- | --- |\n| 1\n | ![Finland](image) **Valtteri Bottas** | 1797\n | 2nd in 2019 and 2020 |\n| 2\n | ![Mexico](image) **Sergio Pérez** | 1474\n | 2nd in 2023 |\n| 3\n | ![Australia](image) **Daniel Ricciardo** | 1317\n | 3rd in 2014 and 2016 |\n| 4\n | ![Brazil](image) Felipe Massa | 1167\n | 2nd in 2008 |\n| 5\n | ![Monaco](image) **Charles Leclerc** | 1056\n | 2nd in 2022 |\n| 6\n | ![Australia](image) Mark Webber | 1047.5\n | 3rd in 2010, 2011 and 2013 |\n| 7\n | ![Spain](image) **Carlos Sainz Jr.** | 982.5\n | 5th in 2021 and 2022 |\n| 8\n | ![Brazil](image) Rubens Barrichello | 658\n | 2nd in 2002 and 2004 |\n| 9\n | ![United Kingdom](image) **Lando Norris** | 623\n | 6th in 2021 |\n| 10\n | ![United Kingdom](image) David Coulthard | 535\n | 2nd in 2001 |\n| Source:[53] |\n\n\n### World Champions with fewest career points[edit]\n\n\n\n\n</fragment>\n<fragment>\n| Fewest race winners in one year | 3 (1950)(1952)(1963)(1988)(2014)(2015) | ![Italy](image) Giuseppe Farina ![Argentina](image) Juan Manuel Fangio ![United States](image) Johnnie Parsons![Italy](image) Piero Taruffi ![United States](image) Troy Ruttman ![Italy](image) Alberto Ascari![United Kingdom](image) Jim Clark ![United Kingdom](image) Graham Hill ![United Kingdom](image) John Surtees![Brazil](image) Ayrton Senna ![France](image) Alain Prost ![Austria](image) Gerhard Berger ![United Kingdom](image) **Lewis Hamilton** ![Germany](image) Nico Rosberg ![Australia](image) **Daniel Ricciardo**![United Kingdom](image) **Lewis Hamilton** ![Germany](image) Nico Rosberg ![Germany](image) Sebastian Vettel | [108] |\n\n</fragment>\n<fragment>\n | ![Belgium](image) Thierry Boutsen | 1989 Canadian Grand Prix |\n| Sources:[16][17]\n |\n\n\n### Most races without a win[edit]\n\n\n\n\n|  | Driver\n | Entries\n | Starts\n | Best result\n |\n| --- | --- | --- | --- | --- |\n| 1\n | ![Italy](image) Andrea de Cesaris | 214\n | 208\n | 2nd\n |\n| 2\n | ![Germany](image) **Nico Hülkenberg** | 205\n | 202\n | 4th\n |\n| 3\n | ![Germany](image) Nick Heidfeld | 185\n | 183\n | 2nd\n |\n| 4\n | ![France](image) Romain Grosjean | 181\n | 179\n | 2nd\n |\n| 5\n | ![United Kingdom](image) Martin Brundle | 165\n | 158\n | 2nd\n |\n| 6\n | ![Denmark](image) **Kevin Magnussen** | 163\n | 162\n | 2nd\n |\n| 7\n | ![United Kingdom](image) Derek Warwick | 162\n | 147\n | 2nd\n |\n| 8\n | ![Canada](image) **Lance Stroll** | 144\n | 142\n | 3rd\n |\n| 9\n | ![France](image) Jean-Pierre Jarier | 143\n | 134\n | 3rd\n |\n| ![United States](image) Eddie Cheever | 132\n | 2nd\n |\n| Source:[18]\n |\n\n\n### Wins from farthest back on the starting grid[edit]\n\n\n\n\n</fragment>\n<fragment>\n14. ^ ***a*** ***b*** Briggs, Gemma (14 September 2008). \"Vettel stuns formula one with masterful victory in the rain at Monza\". *Guardian.com*. The Guardian. Archived from the original on 21 December 2013. Retrieved 20 December 2013.\n15. **^** \"One-win wonders — every F1 driver with a single GP victory to their name\". 25 February 2023.\n16. **^** Cary, Tom (12 July 2009). \"German GP: Mark Webber wins in Nurburgring\". *Telegraph.co.uk*. Archived from the original on 29 January 2014. Retrieved 20 December 2013.\n17. ^ ***a*** ***b*** Lynch, Steven (10 May 2013). \"The king of fastest laps\". *ESPN F1*. Archived from the original on 18 November 2014. Retrieved 24 November 2014.\n18. **^** \"Grands Prix Without win\". *StatsF1.com*. Retrieved 5 March 2023.\n19. **^** \"F1's best losers, famous Belgians and chasing crumpet\". *ESPN F1*. 12 January 2011. Archived from the original on 31 December 2013. Retrieved 10 January 2014.\n\n</fragment>\n<fragment>\n| Most different race winners in consecutive races (starting from first race of the season) | 7 (2012) | ![United Kingdom](image) Jenson Button (2012 Australian Grand Prix)![Spain](image) **Fernando Alonso** (2012 Malaysian Grand Prix)![Germany](image) Nico Rosberg (2012 Chinese Grand Prix)![Germany](image) Sebastian Vettel (2012 Bahrain Grand Prix)![Venezuela](image) Pastor Maldonado (2012 Spanish Grand Prix)![Australia](image) Mark Webber (2012 Monaco Grand Prix)![United Kingdom](image) **Lewis Hamilton** (2012 Canadian Grand Prix)\n | [110] |\n| Fewest race wins in World Championship winning year | 1 | ![United Kingdom](image) Mike Hawthorn (1958)![Finland](image) Keke Rosberg (1982)\n | [111] |\n| World Champion with fewest career wins | 3 | ![United Kingdom](image) Mike Hawthorn![United States](image) Phil Hill | [112][113] |\n| Most race wins in one season without becoming World Champion | 10 (2016) | ![United Kingdom](image) **Lewis Hamilton** | [114] |\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Seasons\n | Entries\n | Races led\n | Percentage\n |\n| --- | --- | --- | --- | --- | --- |\n| 1\n | ![Germany](image) Markus Winkelhock | 2007 | 1\n | 1\n | 100.00%\n |\n| 2\n | ![Argentina](image) Juan Manuel Fangio | 1950–1951, 1953–1958 | 52\n | 38\n | 73.08%\n |\n| 3\n | ![United States](image) Jack McGrath | 1950–1955 | 6\n | 4\n | 66.67%\n |\n| ![United States](image) Bill Vukovich | 1950–1955 | 6\n | 4\n |\n| 5\n | ![Italy](image) Alberto Ascari | 1950–1955 | 33\n | 21\n | 63.64%\n |\n| 6\n | ![United Kingdom](image) Jim Clark | 1960–1968 | 73\n | 43\n | 58.90%\n |\n| 7\n | ![United Kingdom](image) **Lewis Hamilton** | 2007–2023 | 331\n | 187\n | 56.50%\n |\n| 8\n | ![Brazil](image) Ayrton Senna | 1984–1994 | 162\n | 86\n | 53.09%\n |\n| 9\n | ![United Kingdom](image) Jackie Stewart | 1965–1973 | 100\n | 51\n | 51.00%\n |\n| 10\n | ![United States](image) Cecil Green | 1950–1951 | 2\n | 1\n | 50.00%\n |\n| Source:[*citation needed*] |\n\n\n### For at least one lap, youngest leaders[edit]\n\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Seasons\n | Entries\n | Wins\n |\n| --- | --- | --- | --- | --- |\n| 1\n | ![United Kingdom](image) Stirling Moss | 1951–1961 | 67\n | 16\n |\n| 2\n | ![United Kingdom](image) David Coulthard | 1994–2008 | 247\n | 13\n |\n| 3\n | ![Argentina](image) Carlos Reutemann | 1972–1982 | 146\n | 12\n |\n| 4\n | ![Brazil](image) Rubens Barrichello | 1993–2011 | 326\n | 11\n |\n| ![Brazil](image) Felipe Massa | 2002–2017 | 272\n |\n| 6\n | ![Sweden](image) Ronnie Peterson | 1970–1978 | 123\n | 10\n |\n| ![Austria](image) Gerhard Berger | 1984–1997 | 210\n |\n| ![Finland](image) **Valtteri Bottas** | 2013–2023 | 222\n |\n| 9\n | ![Australia](image) Mark Webber | 2002–2013 | 217\n | 9\n |\n| 10\n | ![Belgium](image) Jacky Ickx | 1967–1979 | 122\n | 8\n |\n| ![Australia](image) **Daniel Ricciardo** | 2011–2023 | 239\n |\n| Source:[21] |\n\n\n### Most consecutive seasons with at least one Grand Prix win[edit]\n\n\n\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Seasons[N 13] | First championship\n | Debut year\n |\n| --- | --- | --- | --- | --- |\n| 1\n | ![United Kingdom](image) Nigel Mansell | 13\n | 1992 | 1980 |\n| 2\n | ![Germany](image) Nico Rosberg | 11\n | 2016 | 2006 |\n| 3\n | ![United States](image) Mario Andretti | 10\n | 1978 | 1968[N 15] |\n| ![United Kingdom](image) Jenson Button | 2009 | 2000 |\n| 5\n | ![South Africa](image) Jody Scheckter | 8\n | 1979 | 1972 |\n| ![Finland](image) Mika Häkkinen | 1998 | 1991 |\n| 7\n | ![United Kingdom](image) Mike Hawthorn | 7\n | 1958 | 1952 |\n| ![Austria](image) Jochen Rindt | 1970 | 1964 |\n| ![Finland](image) Kimi Räikkönen | 2007 | 2001 |\n| ![Netherlands](image) **Max Verstappen** | 2021 | 2015 |\n| Source:[74] |\n\n\n### Largest gap between titles[edit]\n\n\n\n\n</fragment>\n<fragment>\n | ![Switzerland](image) Sébastien Buemi | 20 years, 149 days\n | 7th\n | 2009 Australian Grand Prix | 1st race\n |\n| 10\n | ![France](image) **Esteban Ocon** | 20 years, 190 days\n | 10th\n | 2017 Australian Grand Prix | 10th race\n |\n| Source:[4] |\n\n\n### Oldest drivers to score points[edit]\n\n\n(only the last points finish for each driver is listed)\n\n\n\n\n\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Season\n | Percentage\n | Races\n | Wins\n |\n| --- | --- | --- | --- | --- | --- |\n| 1\n | ![Netherlands](image) **Max Verstappen** | 2023\\*\n | 86.36%\\*\n | 22\\*\n | 19\\*\n |\n| 2\n | ![Italy](image) Alberto Ascari | 1952 | 75.00%\n | 8\n | 6\n |\n| 3\n | ![Germany](image) Michael Schumacher | 2004 | 72.22%\n | 18\n | 13\n |\n| 4\n | ![United Kingdom](image) Jim Clark | 1963 | 70.00%\n | 10\n | 7\n |\n| 5\n | ![Germany](image) Sebastian Vettel | 2013 | 68.42%\n | 19\n | 13\n |\n| 6\n | ![Netherlands](image) **Max Verstappen** | 2022 | 68.18%\n | 22\n | 15\n |\n| 7\n | ![Argentina](image) Juan Manuel Fangio | 1954 | 66.67%\n | 9\n | 6\n |\n| 8\n | ![Germany](image) Michael Schumacher | 2002 | 64.71%\n | 17\n | 11\n |\n| ![United Kingdom](image) **Lewis Hamilton** | 2020 | 17\n | 11\n |\n| 10\n | ![United Kingdom](image) Jim Clark | 1965 | 60.00%\n | 10\n | 6\n |\n| Sources:[12][13]\n |\n\n\n\\* Season still in progress.\n\n\n\n### Most consecutive wins[edit]\n\n\n\n\n</fragment>\n<fragment>\n\n### Percentage podium finishes[edit]\n\n\n\n\n|  | Driver\n | Seasons\n | Entries\n | Podiums\n | Percentage\n |\n| --- | --- | --- | --- | --- | --- |\n| 1\n | ![Italy](image) Dorino Serafini | 1950 | 1\n | 1\n | 100.00%\n |\n| 2\n | ![Italy](image) Luigi Fagioli | 1950–1951 | 7\n | 6\n | 85.71%\n |\n| 3\n | ![Argentina](image) Juan Manuel Fangio | 1950–1951, 1953–1958 | 52[N 2] | 35\n | 67.31%\n |\n| 4\n | ![United Kingdom](image) **Lewis Hamilton** | 2007–2023 | 331\n | 197\n | 59.52%\n |\n| 5\n | ![Argentina](image) José Froilán González | 1950–1957, 1960 | 26\n | 15\n | 57.69%\n |\n| 6\n | ![Italy](image) Giuseppe Farina | 1950–1955 | 35\n | 20[N 9] | 57.14%\n |\n| 7\n | ![Netherlands](image) **Max Verstappen** | 2015–2023 | 184\n | 97\n | 52.72%\n |\n| 8\n | ![France](image) Alain Prost | 1980–1991, 1993 | 202\n | 106\n | 52.48%\n |\n| 9\n | ![Italy](image) Alberto Ascari | 1950–1955 | 33[N 3] | 17\n | 51.52%\n |\n| 10\n | ![Germany](image) Michael Schumacher | 1991–2006, 2010–2012 | 308\n | 155\n | 50.32%\n |\n| Source:[35] |\n\n\n</fragment>\n</document>","name":"search","tool_call_id":"834aae24-863f-4517-b115-c2af5ecc1170","tool_calls":null,"is_tool_call_error":false}}
{"type":"root_message","timestamp":1729887390.194169,"msg":{"role":"function","content":"<document>\n<title>List of Formula One driver records</title>\n<fragment>\n|  | Driver\n | Age\n | Year\n |\n| --- | --- | --- | --- |\n| 1\n | ![Germany](image) Sebastian Vettel | 25 years, 146 days\n | 2012 |\n| 2\n | ![Netherlands](image) **Max Verstappen** | 26 years, 7 days\n | 2023 |\n| 3\n | ![United Kingdom](image) **Lewis Hamilton** | 30 years, 292 days\n | 2015 |\n| 4\n | ![Brazil](image) Ayrton Senna | 31 years, 214 days\n | 1991 |\n| 5\n | ![Germany](image) Michael Schumacher | 31 years, 280 days\n | 2000 |\n| 6\n | ![United Kingdom](image) Jackie Stewart | 34 years, 91 days\n | 1973 |\n| 7\n | ![France](image) Alain Prost | 34 years, 241 days\n | 1989 |\n| 8\n | ![Brazil](image) Nelson Piquet | 35 years, 63 days\n | 1987 |\n| 9\n | ![Austria](image) Niki Lauda | 35 years, 243 days\n | 1984 |\n| 10\n | ![Australia](image) Jack Brabham | 40 years, 128 days\n | 1966 |\n| Source:[75][76][78]\n |\n\n\n### Youngest World Drivers' Championship winners[edit]\n\n\n(at the moment they clinched the title)\n\n\n\n\n\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Year\n |\n| --- | --- | --- | --- |\n| 1\n | ![Germany](image) Sebastian Vettel | 23 years, 134 days\n | 2010 |\n| 2\n | ![United Kingdom](image) **Lewis Hamilton** | 23 years, 300 days\n | 2008 |\n| 3\n | ![Spain](image) **Fernando Alonso** | 24 years, 59 days\n | 2005 |\n| 4\n | ![Netherlands](image) **Max Verstappen** | 24 years, 73 days\n | 2021 |\n| 5\n | ![Germany](image) Sebastian Vettel | 24 years, 99 days\n | 2011 |\n| 6\n | ![Netherlands](image) **Max Verstappen** | 25 years, 9 days\n | 2022 |\n| 7\n | ![Spain](image) **Fernando Alonso** | 25 years, 85 days\n | 2006 |\n| 8\n | ![Germany](image) Sebastian Vettel | 25 years, 146 days\n | 2012 |\n| 9\n | ![Brazil](image) Emerson Fittipaldi | 25 years, 303 days\n | 1972 |\n| 10\n | ![Germany](image) Michael Schumacher | 25 years, 314 days\n | 1994 |\n| Source:[75][79]\n |\n\n\n### Oldest World Drivers' Championship winners[edit]\n\n\n(at the moment they clinched their only/last title)\n\n\n\n\n\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Year\n |\n| --- | --- | --- | --- |\n| 1\n | ![Germany](image) Sebastian Vettel | 24 years, 99 days\n | 2011 |\n| 2\n | ![Netherlands](image) **Max Verstappen** | 25 years, 9 days\n | 2022 |\n| 3\n | ![Spain](image) **Fernando Alonso** | 25 years, 85 days\n | 2006 |\n| 4\n | ![Germany](image) Michael Schumacher | 26 years, 293 days\n | 1995 |\n| 5\n | ![Brazil](image) Emerson Fittipaldi | 27 years, 299 days\n | 1974 |\n| 6\n | ![Austria](image) Niki Lauda | 28 years, 202 days\n | 1977 |\n| 7\n | ![United Kingdom](image) Jim Clark | 29 years, 137 days\n | 1965 |\n| 8\n | ![United Kingdom](image) **Lewis Hamilton** | 29 years, 321 days\n | 2014 |\n| 9\n | ![Brazil](image) Ayrton Senna | 30 years, 215 days\n | 1990 |\n| 10\n | ![Finland](image) Mika Häkkinen | 31 years, 33 days\n | 1999 |\n| Source:[75][76][77]\n |\n\n\n### Youngest triple World Drivers' Championship winners[edit]\n\n\n(at the moment they clinched their third title)\n\n\n\n\n\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Year\n |\n| --- | --- | --- | --- |\n| 1\n | ![Germany](image) Sebastian Vettel | 23 years, 134 days\n | 2010 |\n| 2\n | ![United Kingdom](image) **Lewis Hamilton** | 23 years, 300 days\n | 2008 |\n| 3\n | ![Spain](image) **Fernando Alonso** | 24 years, 59 days\n | 2005 |\n| 4\n | ![Netherlands](image) **Max Verstappen** | 24 years, 73 days\n | 2021 |\n| 5\n | ![Brazil](image) Emerson Fittipaldi | 25 years, 303 days\n | 1972 |\n| 6\n | ![Germany](image) Michael Schumacher | 25 years, 314 days\n | 1994 |\n| 7\n | ![Austria](image) Niki Lauda | 26 years, 197 days\n | 1975 |\n| 8\n | ![Canada](image) Jacques Villeneuve | 26 years, 200 days\n | 1997 |\n| 9\n | ![United Kingdom](image) Jim Clark | 27 years, 174 days\n | 1963 |\n| 10\n | ![Finland](image) Kimi Räikkönen | 28 years, 4 days\n | 2007 |\n| Sources:[4][75]\n |\n\n\n### Youngest double World Drivers' Championship winners[edit]\n\n\n(at the moment they clinched their second title)\n\n\n\n\n\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Seasons\n | Starts\n |\n| --- | --- | --- | --- |\n| 1\n | ![Spain](image) **Fernando Alonso** | 2001, 2003–2018, 2021–2023 | 376\n |\n| 2\n | ![Finland](image) Kimi Räikkönen | 2001–2009, 2012–2021 | 349\n |\n| 3\n | ![United Kingdom](image) **Lewis Hamilton** | 2007–2023 | 331\n |\n| 4\n | ![Brazil](image) Rubens Barrichello | 1993–2011 | 322\n |\n| 5\n | ![Germany](image) Michael Schumacher | 1991–2006, 2010–2012 | 306\n |\n| ![United Kingdom](image) Jenson Button | 2000–2017 |\n| 7\n | ![Germany](image) Sebastian Vettel | 2007–2022 | 299\n |\n| 8\n | ![Brazil](image) Felipe Massa | 2002, 2004–2017 | 269\n |\n| 9\n | ![Italy](image) Riccardo Patrese | 1977–1993 | 256\n |\n| ![Mexico](image) **Sergio Pérez** | 2011–2023 |\n| Sources:[2][3]\n |\n\n\n### Youngest drivers to start a race[edit]\n\n\n\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Seasons\n | Years\n |\n| --- | --- | --- | --- |\n| 1\n | ![Austria](image) Niki Lauda | 6\n | 1977 | 1984 |\n| 2\n | ![Australia](image) Jack Brabham | 5\n | 1960 | 1966 |\n| ![United Kingdom](image) Graham Hill | 1962 | 1968 |\n| ![United Kingdom](image) **Lewis Hamilton** | 2008 | 2014 |\n| 5\n | ![Germany](image) Michael Schumacher | 4\n | 1995 | 2000 |\n| 6\n | ![Brazil](image) Nelson Piquet | 3\n | 1983 | 1987 |\n| ![France](image) Alain Prost | 1989 | 1993 |\n\n\n### Youngest World Drivers' Championship first-time winners[edit]\n\n\n(at the moment they clinched their first/only title)\n\n\n\n\n\n\n</fragment>\n<fragment>\n\nLuigi Fagioli is the only World Championship race winner born in the 19th century.[15]\n\n\n\n### Fewest races before first win[edit]\n\n\n\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Age\n | Place\n | Race\n |\n| --- | --- | --- | --- | --- |\n| 1\n | ![Netherlands](image) **Max Verstappen** | 17 years, 166 days\n | Ret | 2015 Australian Grand Prix |\n| 2\n | ![Canada](image) **Lance Stroll** | 18 years, 148 days\n | Ret | 2017 Australian Grand Prix |\n| 3\n | ![United Kingdom](image) **Lando Norris** | 19 years, 124 days\n | 12th\n | 2019 Australian Grand Prix |\n| 4\n | ![Spain](image) Jaime Alguersuari | 19 years, 125 days\n | 15th\n | 2009 Hungarian Grand Prix |\n| 5\n | ![New Zealand](image) Mike Thackwell | 19 years, 182 days\n | Ret | 1980 Canadian Grand Prix |\n| 6\n | ![Mexico](image) Ricardo Rodríguez | 19 years, 208 days\n | Ret | 1961 Italian Grand Prix |\n| 7\n | ![Spain](image) **Fernando Alonso** | 19 years, 218 days\n | 12th\n | 2001 Australian Grand Prix |\n| 8\n | ![Argentina](image) Esteban Tuero | 19 years, 320 days\n | Ret | 1998 Australian Grand Prix |\n| 9\n | ![New Zealand](image) Chris Amon | 19 years, 324 days\n | Ret | 1963 Belgian Grand Prix |\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Place\n | Race\n | Career race number\n |\n| --- | --- | --- | --- | --- | --- |\n| 1\n | ![Netherlands](image) **Max Verstappen** | 17 years, 180 days\n | 7th\n | 2015 Malaysian Grand Prix | 2nd race\n |\n| 2\n | ![Canada](image) **Lance Stroll** | 18 years, 225 days\n | 9th\n | 2017 Canadian Grand Prix | 7th race\n |\n| 3\n | ![United Kingdom](image) **Lando Norris** | 19 years, 138 days\n | 6th\n | 2019 Bahrain Grand Prix | 2nd race\n |\n| 4\n | ![Russia](image) Daniil Kvyat | 19 years, 324 days\n | 9th\n | 2014 Australian Grand Prix | 1st race\n |\n| 5\n | ![Germany](image) Sebastian Vettel | 19 years, 349 days\n | 8th\n | 2007 United States Grand Prix | 1st race\n |\n| 6\n | ![Spain](image) Jaime Alguersuari | 20 years, 12 days\n | 9th\n | 2010 Malaysian Grand Prix | 11th race\n |\n| 7\n | ![United Kingdom](image) Jenson Button | 20 years, 67 days\n | 6th\n | 2000 Brazilian Grand Prix | 2nd race\n |\n| 8\n | ![Mexico](image) Ricardo Rodríguez | 20 years, 123 days\n | 4th\n | 1962 Belgian Grand Prix | 3rd race\n |\n| 9\n\n</fragment>\n<fragment>\n\n![Brazil](image) Ayrton Senna (1990–1991)![United Kingdom](image) Nigel Mansell (1992)![France](image) Alain Prost (1993)![Germany](image) Michael Schumacher (1994–1995)![United Kingdom](image) Damon Hill (1996)![Canada](image) Jacques Villeneuve (1997)![Finland](image) Mika Häkkinen (1998–1999)\n | [98][99] |\n| Fewest drivers becoming World Champion in a decade | 3 (2010s) | ![Germany](image) Sebastian Vettel (2010–2013)![United Kingdom](image) **Lewis Hamilton** (2014–2015, 2017–2019)![Germany](image) Nico Rosberg (2016) | [98][99] |\n| Wins\n |\n| Most different Grands Prix won | 31 | ![United Kingdom](image) **Lewis Hamilton** | [100] |\n| Wins at most different circuits | 31 | ![United Kingdom](image) **Lewis Hamilton** | [101] |\n| Most wins with the same constructor | 82 | ![United Kingdom](image) **Lewis Hamilton** (Mercedes) | [102] |\n| Wins with most different constructors | 5 | ![United Kingdom](image) Stirling Moss (Mercedes, Maserati, Vanwall, Cooper, Lotus) | [103] |\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Race\n |\n| --- | --- | --- | --- |\n| 1\n | ![Netherlands](image) **Max Verstappen** | 18 years, 228 days\n | 2016 Spanish Grand Prix |\n| 2\n | ![Germany](image) Sebastian Vettel | 21 years, 73 days\n | 2008 Italian Grand Prix |\n| 3\n | ![Monaco](image) **Charles Leclerc** | 21 years, 320 days\n | 2019 Belgian Grand Prix |\n| 4\n | ![Spain](image) **Fernando Alonso** | 22 years, 26 days\n | 2003 Hungarian Grand Prix |\n| 5\n | ![United States](image) Troy Ruttman[N 1] | 22 years, 80 days\n | 1952 Indianapolis 500[N 1] |\n| 6\n | ![New Zealand](image) Bruce McLaren | 22 years, 104 days\n | 1959 United States Grand Prix |\n| 7\n | ![United Kingdom](image) **Lewis Hamilton** | 22 years, 154 days\n | 2007 Canadian Grand Prix |\n| 8\n | ![Finland](image) Kimi Räikkönen | 23 years, 157 days\n | 2003 Malaysian Grand Prix |\n| 9\n | ![Poland](image) Robert Kubica | 23 years, 184 days\n | 2008 Canadian Grand Prix |\n| 10\n | ![Belgium](image) Jacky Ickx | 23 years, 188 days\n | 1968 French Grand Prix |\n| Source:[14]\n |\n\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Race\n |\n| --- | --- | --- | --- |\n| 1\n | ![Germany](image) Sebastian Vettel | 21 years, 72 days\n | 2008 Italian Grand Prix |\n| 2\n | ![Monaco](image) **Charles Leclerc** | 21 years, 165 days\n | 2019 Bahrain Grand Prix |\n| 3\n | ![Spain](image) **Fernando Alonso** | 21 years, 236 days\n | 2003 Malaysian Grand Prix |\n| 4\n | ![Netherlands](image) **Max Verstappen** | 21 years, 307 days\n | 2019 Hungarian Grand Prix |\n| 5\n | ![United Kingdom](image) **Lando Norris** | 21 years, 316 days\n | 2021 Russian Grand Prix |\n| 6\n | ![Canada](image) **Lance Stroll** | 22 years, 16 days\n | 2020 Turkish Grand Prix |\n| 7\n | ![Brazil](image) Rubens Barrichello | 22 years, 97 days\n | 1994 Belgian Grand Prix |\n| 8\n | ![United Kingdom](image) **Lewis Hamilton** | 22 years, 153 days\n | 2007 Canadian Grand Prix |\n| 9\n | ![Italy](image) Andrea de Cesaris | 22 years, 308 days\n | 1982 United States Grand Prix West |\n| 10\n | ![Germany](image) **Nico Hülkenberg** | 23 years, 79 days\n | 2010 Brazilian Grand Prix |\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Season\n | Races\n | Poles\n | Percentage\n |\n| --- | --- | --- | --- | --- | --- |\n| 1\n | ![United Kingdom](image) Nigel Mansell | 1992 | 16\n | 14\n | 87.50%\n |\n| 2\n | ![Brazil](image) Ayrton Senna | 1988 | 16\n | 13\n | 81.25%\n |\n| 1989 | 16\n | 13\n |\n| ![France](image) Alain Prost | 1993 | 16\n | 13\n |\n| 5\n | ![Germany](image) Sebastian Vettel | 2011 | 19\n | 15\n | 78.95%\n |\n| 6\n | ![Argentina](image) Juan Manuel Fangio | 1956 | 8\n | 6\n | 75.00%\n |\n| 7\n | ![United Kingdom](image) Jim Clark | 1963 | 10\n | 7\n | 70.00%\n |\n| 8\n | ![Finland](image) Mika Häkkinen | 1999 | 16\n | 11\n | 68.75%\n |\n| 9\n | ![Italy](image) Alberto Ascari | 1953 | 9\n | 6\n | 66.67%\n |\n| ![United Kingdom](image) Jim Clark | 1962 | 9\n | 6\n |\n| Source:[26]\n |\n\n\n### Youngest polesitters[edit]\n\n\n(only the first pole position for each driver is listed)\n\n\n\n\n\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Wins\n | Grand Prix\n | Seasons\n |\n| --- | --- | --- | --- | --- |\n| 1\n | ![Brazil](image) Ayrton Senna | 5\n | Monaco Grand Prix | 1989, 1990, 1991, 1992, 1993 |\n| ![United Kingdom](image) **Lewis Hamilton** | Spanish Grand Prix | 2017, 2018, 2019, 2020, 2021 |\n| 3\n | ![Argentina](image) Juan Manuel Fangio | 4\n | Argentine Grand Prix | 1954, 1955, 1956, 1957 |\n| ![United Kingdom](image) Jim Clark | Belgian Grand Prix | 1962, 1963, 1964, 1965 |\n| British Grand Prix | 1962, 1963, 1964, 1965 |\n| ![Brazil](image) Ayrton Senna | Belgian Grand Prix | 1988, 1989, 1990, 1991 |\n| ![Germany](image) Michael Schumacher | Spanish Grand Prix | 2001, 2002, 2003, 2004 |\n| United States Grand Prix | 2003, 2004, 2005, 2006 |\n| ![United Kingdom](image) **Lewis Hamilton** | British Grand Prix | 2014, 2015, 2016, 2017 |\n| United States Grand Prix | 2014, 2015, 2016, 2017 |\n| Source:[20]\n |\n\n\n### Most Grand Prix wins by drivers who have not won a World Championship[edit]\n\n\n\n\n</fragment>\n<fragment>\n\n*Note*: Bruce McLaren won the 1959 United States Grand Prix in the first season in which he drove a Formula One car, but he entered in two championship races in the 1958 season driving a Formula Two car on both occasions.\n\n\n\n### Youngest winners[edit]\n\n\n(only the first win for each driver is listed)\n\n\n\n\n\n\n</fragment>\n<fragment>\n | ![Argentina](image) José Froilán González | 1951 British Grand Prix |\n| ![Switzerland](image) Clay Regazzoni | 1970 Italian Grand Prix |\n| Source:[13]\n |\n\n\n### Most races before first win[edit]\n\n\n\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Race\n |\n| --- | --- | --- | --- |\n| 1\n | ![Netherlands](image) **Max Verstappen** | 18 years, 228 days\n | 2016 Spanish Grand Prix |\n| 2\n | ![Germany](image) Sebastian Vettel | 20 years, 89 days\n | 2007 Japanese Grand Prix |\n| 3\n | ![Monaco](image) **Charles Leclerc** | 21 years, 166 days\n | 2019 Bahrain Grand Prix |\n| 4\n | ![Switzerland](image) Sébastien Buemi | 21 years, 225 days\n | 2010 Canadian Grand Prix |\n| 5\n | ![Spain](image) **Fernando Alonso** | 21 years, 237 days\n | 2003 Malaysian Grand Prix |\n| 6\n | ![Poland](image) Robert Kubica | 21 years, 278 days\n | 2006 Italian Grand Prix |\n| 7\n | ![Mexico](image) Esteban Gutiérrez | 21 years, 280 days\n | 2013 Spanish Grand Prix |\n| 8\n | ![United States](image) Jimmy Davies[N 1] | 21 years, 285 days\n | 1951 Indianapolis 500[N 1] |\n| 9\n | ![United Kingdom](image) **Lando Norris** | 21 years, 303 days\n | 2021 Italian Grand Prix |\n| 10\n | ![Canada](image) **Lance Stroll** | 22 years, 17 days\n | 2020 Turkish Grand Prix |\n| Source:[63] |\n\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Race\n |\n| --- | --- | --- | --- |\n| 1\n | ![Argentina](image) Juan Manuel Fangio | 46 years, 209 days\n | 1958 Argentine Grand Prix |\n| 2\n | ![Italy](image) Piero Taruffi | 45 years, 219 days\n | 1952 Swiss Grand Prix |\n| 3\n | ![Italy](image) Giuseppe Farina | 44 years, 321 days\n | 1951 Italian Grand Prix |\n| 4\n | ![Australia](image) Jack Brabham | 44 years, 107 days\n | 1970 British Grand Prix |\n| 5\n | ![Italy](image) Luigi Villoresi | 44 years, 22 days\n | 1953 Dutch Grand Prix |\n| 6\n | ![Germany](image) Karl Kling | 43 years, 319 days\n | 1954 German Grand Prix |\n| 7\n | ![Germany](image) Michael Schumacher | 43 years, 201 days\n | 2012 German Grand Prix |\n| 8\n | ![United States](image) Paul Russo | 42 years, 50 days\n | 1956 Indianapolis 500 |\n| 9\n | ![France](image) Maurice Trintignant | 42 years, 43 days\n | 1959 United States Grand Prix |\n| 10\n | ![Spain](image) **Fernando Alonso** | 42 years, 29 days\n | 2023 Dutch Grand Prix |\n| Source:[34] |\n\n\n## Podium finishes[edit]\n\n\n</fragment>\n<fragment>\n| Most consecutive entries without starting | 14 | ![Italy](image) Claudio Langes (1990 United States Grand Prix – 1990 Spanish Grand Prix) | [139] |\n| Most consecutive race starts without scoring points | 53 | ![Finland](image) Heikki Kovalainen (2010 Monaco Grand Prix – 2012 Brazilian Grand Prix) |  |\n| Most races before scoring first points | 69 (43 starts) | ![Italy](image) Nicola Larini |  |\n| Shortest Formula One career (having qualified for at least one race) | 2 metres (6+1⁄2 ft) | ![Germany](image) Ernst Loof (1953 German Grand Prix)[N 19] | [150] |\n| Most seasons with at least one start | 20 | ![Spain](image) **Fernando Alonso** (2001, 2003–2018, 2021–2023) | [151] |\n| Youngest driver to drive at a Grand Prix meeting | 17 years, 3 days | ![Netherlands](image) **Max Verstappen** (2014 Japanese Grand Prix) | [152] |\n| Finishes\n |\n| Most classified finishes | 310 | ![Spain](image) **Fernando Alonso** | [153] |\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Age\n | Race\n |\n| --- | --- | --- | --- |\n| 1\n | ![Italy](image) Giuseppe Farina | 47 years, 79 days\n | 1954 Argentine Grand Prix |\n| 2\n | ![Argentina](image) Juan Manuel Fangio | 46 years, 209 days\n | 1958 Argentine Grand Prix |\n| 3\n | ![Australia](image) Jack Brabham | 44 years, 17 days\n | 1970 Spanish Grand Prix |\n| 4\n | ![United States](image) Mario Andretti | 42 years, 196 days\n | 1982 Italian Grand Prix |\n| 5\n | ![United Kingdom](image) Nigel Mansell | 41 years, 97 days\n | 1994 Australian Grand Prix |\n| 6\n | ![Argentina](image) Carlos Reutemann | 39 years, 188 days\n | 1981 Caesars Palace Grand Prix |\n| 7\n | ![United Kingdom](image) Graham Hill | 39 years, 156 days\n | 1968 British Grand Prix |\n| 8\n | ![Finland](image) Kimi Räikkönen | 38 years, 319 days\n | 2018 Italian Grand Prix |\n| 9\n | ![United States](image) Fred Agabashian[N 1] | 38 years, 283 days\n | 1952 Indianapolis 500[N 1] |\n| 10\n | ![France](image) Alain Prost | 38 years, 241 days\n | 1993 Japanese Grand Prix |\n| Source:[28]\n |\n\n\n</fragment>\n<fragment>\n\n(excluding drivers who competed from the very first championship season of 1950; including winning season)\n\n\n\n\n\n|  | Driver\n | Seasons[N 13] | First championship\n | Debut year\n |\n| --- | --- | --- | --- | --- |\n| 1\n | ![Canada](image) Jacques Villeneuve | 2\n | 1997 | 1996 |\n| ![United Kingdom](image) **Lewis Hamilton** | 2008 | 2007 |\n| 3\n | ![New Zealand](image) Denny Hulme | 3\n | 1967 | 1965 |\n| ![Brazil](image) Emerson Fittipaldi | 1972 | 1970 |\n| 5\n | ![United States](image) Phil Hill | 4\n | 1961 | 1958 |\n| ![United Kingdom](image) Jim Clark | 1963 | 1960 |\n| ![United Kingdom](image) James Hunt | 1976 | 1973 |\n| ![Brazil](image) Nelson Piquet | 1981 | 1978 |\n| ![Germany](image) Michael Schumacher | 1994 | 1991 |\n| ![Spain](image) **Fernando Alonso** | 2005 | 2001[N 14] |\n| ![Germany](image) Sebastian Vettel | 2010 | 2007 |\n| Source:[74] |\n\n\n### Most World Championship seasons before first title[edit]\n\n\n\n\n</fragment>\n<fragment>\n\n| Record\n | Driver\n | Age\n | Race\n |\n| --- | --- | --- | --- |\n| Pole and win\n | ![Germany](image) Sebastian Vettel | 21 years, 73 days\n | 2008 Italian Grand Prix |\n| Pole, win, and fastest lap(hat-trick)\n | ![Germany](image) Sebastian Vettel | 21 years, 353 days\n | 2009 British Grand Prix |\n| Pole, win, fastest lap, and led every lap(grand slam)\n | ![Netherlands](image) **Max Verstappen** | 23 years, 277 days\n | 2021 Austrian Grand Prix |\n| Source:[72] |\n\n\n### Oldest[edit]\n\n\n\n\n| Record\n | Driver\n | Age\n | Race\n |\n| --- | --- | --- | --- |\n| Pole and win\n | ![Argentina](image) Juan Manuel Fangio | 46 years, 41 days\n | 1957 German Grand Prix |\n| Pole, win, and fastest lap(hat-trick)\n | ![Argentina](image) Juan Manuel Fangio | 46 years, 41 days\n | 1957 German Grand Prix |\n| Pole, win, fastest lap, and led every lap(grand slam)\n | ![Argentina](image) Juan Manuel Fangio | 45 years, 42 days\n | 1956 German Grand Prix |\n| Source:[*citation needed*] |\n\n\n## Drivers' Championships[edit]\n\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Year\n |\n| --- | --- | --- | --- |\n| 1\n | ![Argentina](image) Juan Manuel Fangio | 46 years, 41 days\n | 1957 |\n| 2\n | ![Italy](image) Giuseppe Farina | 43 years, 308 days\n | 1950 |\n| 3\n | ![Australia](image) Jack Brabham | 40 years, 155 days\n | 1966 |\n| 4\n | ![United Kingdom](image) Graham Hill | 39 years, 262 days\n | 1968 |\n| 5\n | ![United Kingdom](image) Nigel Mansell | 39 years, 8 days\n | 1992 |\n| 6\n | ![France](image) Alain Prost | 38 years, 214 days\n | 1993 |\n| 7\n | ![United States](image) Mario Andretti | 38 years, 194 days\n | 1978 |\n| 8\n | ![United Kingdom](image) Damon Hill | 36 years, 26 days\n | 1996 |\n| 9\n | ![United Kingdom](image) **Lewis Hamilton** | 35 years, 313 days\n | 2020 |\n| 10\n | ![Austria](image) Niki Lauda | 35 years, 242 days\n | 1984 |\n| Source:[75][80]\n |\n\n\n## Other driver records[edit]\n\n\n\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Place\n | Race\n |\n| --- | --- | --- | --- | --- |\n| 1\n | ![Netherlands](image) **Max Verstappen** | 18 years, 228 days\n | 1st\n | 2016 Spanish Grand Prix |\n| 2\n | ![Canada](image) **Lance Stroll** | 18 years, 239 days\n | 3rd\n | 2017 Azerbaijan Grand Prix |\n| 3\n | ![United Kingdom](image) **Lando Norris** | 20 years, 235 days\n | 3rd\n | 2020 Austrian Grand Prix |\n| 4\n | ![Germany](image) Sebastian Vettel | 21 years, 73 days\n | 1st\n | 2008 Italian Grand Prix |\n| 5\n | ![Russia](image) Daniil Kvyat | 21 years, 91 days\n | 2nd\n | 2015 Hungarian Grand Prix |\n| 6\n | ![Denmark](image) **Kevin Magnussen** | 21 years, 162 days\n | 2nd\n | 2014 Australian Grand Prix |\n| 7\n | ![Monaco](image) **Charles Leclerc** | 21 years, 166 days\n | 3rd\n | 2019 Bahrain Grand Prix |\n| 8\n | ![Spain](image) **Fernando Alonso** | 21 years, 237 days\n | 3rd\n | 2003 Malaysian Grand Prix |\n| 9\n | ![Poland](image) Robert Kubica | 21 years, 278 days\n | 3rd\n | 2006 Italian Grand Prix |\n| 10\n\n</fragment>\n<fragment>\n| Sources:[10][11]\n |\n\n\n### Percentage wins[edit]\n\n\n\n\n|  | Driver\n | Seasons\n | Entries\n | Wins\n | Percentage\n |\n| --- | --- | --- | --- | --- | --- |\n| 1\n | ![Argentina](image) Juan Manuel Fangio | 1950–1951, 1953–1958 | 52[N 2] | 24\n | 46.15%\n |\n| 2\n | ![Italy](image) Alberto Ascari | 1950–1955 | 33[N 3] | 13\n | 39.39%\n |\n| 3\n | ![United Kingdom](image) Jim Clark | 1960–1968 | 73\n | 25\n | 34.25%\n |\n| 4\n | ![United States](image) Lee Wallard[N 1] | 1950–1951, 1954 | 3\n | 1\n | 33.33%\n |\n| ![United States](image) Bill Vukovich[N 1] | 1950–1955 | 6\n | 2\n |\n| 6\n | ![United Kingdom](image) **Lewis Hamilton** | 2007–2023 | 331\n | 103\n | 31.12%\n |\n| 7\n | ![Germany](image) Michael Schumacher | 1991–2006, 2010–2012 | 308\n | 91\n | 29.55%\n |\n| 8\n | ![Netherlands](image) **Max Verstappen** | 2015–2023 | 184\n | 53\n | 28.80%\n |\n| 9\n | ![United Kingdom](image) Jackie Stewart | 1965–1973 | 100\n | 27\n | 27.00%\n |\n| 10\n | ![Brazil](image) Ayrton Senna | 1984–1994 | 162\n | 41\n | 25.31%\n |\n| Sources:[10][11]\n |\n\n\n</fragment>\n<fragment>\n|  | Driver\n | Age\n | Race\n |\n| --- | --- | --- | --- |\n| 1\n | ![Netherlands](image) **Max Verstappen** | 19 years, 44 days\n | 2016 Brazilian Grand Prix |\n| 2\n | ![United Kingdom](image) **Lando Norris** | 20 years, 235 days\n | 2020 Austrian Grand Prix |\n| 3\n | ![Germany](image) Nico Rosberg | 20 years, 258 days\n | 2006 Bahrain Grand Prix |\n| 4\n | ![Monaco](image) **Charles Leclerc** | 21 years, 166 days\n | 2019 Bahrain Grand Prix |\n| 5\n | ![Mexico](image) Esteban Gutiérrez | 21 years, 280 days\n | 2013 Spanish Grand Prix |\n| 6\n | ![Spain](image) **Fernando Alonso** | 21 years, 321 days\n | 2003 Canadian Grand Prix |\n| 7\n | ![New Zealand](image) Bruce McLaren | 21 years, 322 days\n | 1959 British Grand Prix |\n| 8\n | ![Germany](image) Sebastian Vettel | 21 years, 353 days\n | 2009 British Grand Prix |\n| 9\n | ![Russia](image) Daniil Kvyat | 22 years, 19 days\n | 2016 Spanish Grand Prix |\n| 10\n | ![United Kingdom](image) **Lewis Hamilton** | 22 years, 91 days\n | 2007 Malaysian Grand Prix |\n| Source:[34] |\n\n\n</fragment>\n<fragment>\n| Longest time between first and last wins | 5,691 days | ![Finland](image) Kimi Räikkönen (2003 Malaysian Grand Prix – 2018 United States Grand Prix) | [104] |\n| Longest time between successive wins | 2,402 days | ![Italy](image) Riccardo Patrese (1983 South African Grand Prix – 1990 San Marino Grand Prix) | [105] |\n| Most races between successive wins | 114 | ![Finland](image) Kimi Räikkönen (2013 Australian Grand Prix – 2018 United States Grand Prix)\n | [105] |\n| Most race winners in one year | 11(1982) | ![France](image) Alain Prost![Austria](image) Niki Lauda![France](image) Didier Pironi![United Kingdom](image) John Watson![Italy](image) Riccardo Patrese![Brazil](image) Nelson Piquet![France](image) René Arnoux![France](image) Patrick Tambay![Italy](image) Elio de Angelis![Finland](image) Keke Rosberg ![Italy](image) Michele Alboreto | [106][107] |\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Consecutive entries\n | Races\n |\n| --- | --- | --- | --- |\n| 1\n | ![Brazil](image) Rubens Barrichello | 326\n | 1993 South African – 2011 Brazilian |\n| 2\n | ![Germany](image) Sebastian Vettel | 280\n | 2007 Hungarian – 2021 Abu Dhabi |\n| 3\n | ![United Kingdom](image) **Lewis Hamilton** | 265\n | 2007 Australian – 2020 Bahrain |\n| 4\n | ![United Kingdom](image) David Coulthard | 239\n | 1995 Brazilian – 2008 Brazilian |\n| 5\n | ![Australia](image) **Daniel Ricciardo** | 232\n | 2011 British – 2022 Abu Dhabi |\n| 6\n | ![Italy](image) Giancarlo Fisichella | 223\n | 1997 Australian – 2009 Abu Dhabi |\n| 7\n | ![Finland](image) **Valtteri Bottas** | 222\n | 2013 Australian – 2023 Las Vegas (ongoing) |\n| 8\n | ![Spain](image) **Fernando Alonso** | 219\n | 2003 Australian – 2014 Abu Dhabi |\n| ![United Kingdom](image) Jenson Button | 2005 European – 2016 Abu Dhabi |\n| 10\n | ![Australia](image) Mark Webber | 217\n | 2002 Australian – 2013 Brazilian |\n| Source:[7]\n |\n\n\n### Most races with a single constructor[edit]\n\n\n\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Points\n | Best WDC finish\n |\n| --- | --- | --- | --- |\n| 1\n | ![Finland](image) **Valtteri Bottas** | 1797\n | 2nd in 2019 and 2020 |\n| 2\n | ![Mexico](image) **Sergio Pérez** | 1474\n | 2nd in 2023 |\n| 3\n | ![Australia](image) **Daniel Ricciardo** | 1317\n | 3rd in 2014 and 2016 |\n| 4\n | ![Brazil](image) Felipe Massa | 1167\n | 2nd in 2008 |\n| 5\n | ![Monaco](image) **Charles Leclerc** | 1056\n | 2nd in 2022 |\n| 6\n | ![Australia](image) Mark Webber | 1047.5\n | 3rd in 2010, 2011 and 2013 |\n| 7\n | ![Spain](image) **Carlos Sainz Jr.** | 982.5\n | 5th in 2021 and 2022 |\n| 8\n | ![Brazil](image) Rubens Barrichello | 658\n | 2nd in 2002 and 2004 |\n| 9\n | ![United Kingdom](image) **Lando Norris** | 623\n | 6th in 2021 |\n| 10\n | ![United Kingdom](image) David Coulthard | 535\n | 2nd in 2001 |\n| Source:[53] |\n\n\n### World Champions with fewest career points[edit]\n\n\n\n\n</fragment>\n<fragment>\n| Fewest race winners in one year | 3 (1950)(1952)(1963)(1988)(2014)(2015) | ![Italy](image) Giuseppe Farina ![Argentina](image) Juan Manuel Fangio ![United States](image) Johnnie Parsons![Italy](image) Piero Taruffi ![United States](image) Troy Ruttman ![Italy](image) Alberto Ascari![United Kingdom](image) Jim Clark ![United Kingdom](image) Graham Hill ![United Kingdom](image) John Surtees![Brazil](image) Ayrton Senna ![France](image) Alain Prost ![Austria](image) Gerhard Berger ![United Kingdom](image) **Lewis Hamilton** ![Germany](image) Nico Rosberg ![Australia](image) **Daniel Ricciardo**![United Kingdom](image) **Lewis Hamilton** ![Germany](image) Nico Rosberg ![Germany](image) Sebastian Vettel | [108] |\n\n</fragment>\n<fragment>\n | ![Belgium](image) Thierry Boutsen | 1989 Canadian Grand Prix |\n| Sources:[16][17]\n |\n\n\n### Most races without a win[edit]\n\n\n\n\n|  | Driver\n | Entries\n | Starts\n | Best result\n |\n| --- | --- | --- | --- | --- |\n| 1\n | ![Italy](image) Andrea de Cesaris | 214\n | 208\n | 2nd\n |\n| 2\n | ![Germany](image) **Nico Hülkenberg** | 205\n | 202\n | 4th\n |\n| 3\n | ![Germany](image) Nick Heidfeld | 185\n | 183\n | 2nd\n |\n| 4\n | ![France](image) Romain Grosjean | 181\n | 179\n | 2nd\n |\n| 5\n | ![United Kingdom](image) Martin Brundle | 165\n | 158\n | 2nd\n |\n| 6\n | ![Denmark](image) **Kevin Magnussen** | 163\n | 162\n | 2nd\n |\n| 7\n | ![United Kingdom](image) Derek Warwick | 162\n | 147\n | 2nd\n |\n| 8\n | ![Canada](image) **Lance Stroll** | 144\n | 142\n | 3rd\n |\n| 9\n | ![France](image) Jean-Pierre Jarier | 143\n | 134\n | 3rd\n |\n| ![United States](image) Eddie Cheever | 132\n | 2nd\n |\n| Source:[18]\n |\n\n\n### Wins from farthest back on the starting grid[edit]\n\n\n\n\n</fragment>\n<fragment>\n14. ^ ***a*** ***b*** Briggs, Gemma (14 September 2008). \"Vettel stuns formula one with masterful victory in the rain at Monza\". *Guardian.com*. The Guardian. Archived from the original on 21 December 2013. Retrieved 20 December 2013.\n15. **^** \"One-win wonders — every F1 driver with a single GP victory to their name\". 25 February 2023.\n16. **^** Cary, Tom (12 July 2009). \"German GP: Mark Webber wins in Nurburgring\". *Telegraph.co.uk*. Archived from the original on 29 January 2014. Retrieved 20 December 2013.\n17. ^ ***a*** ***b*** Lynch, Steven (10 May 2013). \"The king of fastest laps\". *ESPN F1*. Archived from the original on 18 November 2014. Retrieved 24 November 2014.\n18. **^** \"Grands Prix Without win\". *StatsF1.com*. Retrieved 5 March 2023.\n19. **^** \"F1's best losers, famous Belgians and chasing crumpet\". *ESPN F1*. 12 January 2011. Archived from the original on 31 December 2013. Retrieved 10 January 2014.\n\n</fragment>\n<fragment>\n| Most different race winners in consecutive races (starting from first race of the season) | 7 (2012) | ![United Kingdom](image) Jenson Button (2012 Australian Grand Prix)![Spain](image) **Fernando Alonso** (2012 Malaysian Grand Prix)![Germany](image) Nico Rosberg (2012 Chinese Grand Prix)![Germany](image) Sebastian Vettel (2012 Bahrain Grand Prix)![Venezuela](image) Pastor Maldonado (2012 Spanish Grand Prix)![Australia](image) Mark Webber (2012 Monaco Grand Prix)![United Kingdom](image) **Lewis Hamilton** (2012 Canadian Grand Prix)\n | [110] |\n| Fewest race wins in World Championship winning year | 1 | ![United Kingdom](image) Mike Hawthorn (1958)![Finland](image) Keke Rosberg (1982)\n | [111] |\n| World Champion with fewest career wins | 3 | ![United Kingdom](image) Mike Hawthorn![United States](image) Phil Hill | [112][113] |\n| Most race wins in one season without becoming World Champion | 10 (2016) | ![United Kingdom](image) **Lewis Hamilton** | [114] |\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Seasons\n | Entries\n | Races led\n | Percentage\n |\n| --- | --- | --- | --- | --- | --- |\n| 1\n | ![Germany](image) Markus Winkelhock | 2007 | 1\n | 1\n | 100.00%\n |\n| 2\n | ![Argentina](image) Juan Manuel Fangio | 1950–1951, 1953–1958 | 52\n | 38\n | 73.08%\n |\n| 3\n | ![United States](image) Jack McGrath | 1950–1955 | 6\n | 4\n | 66.67%\n |\n| ![United States](image) Bill Vukovich | 1950–1955 | 6\n | 4\n |\n| 5\n | ![Italy](image) Alberto Ascari | 1950–1955 | 33\n | 21\n | 63.64%\n |\n| 6\n | ![United Kingdom](image) Jim Clark | 1960–1968 | 73\n | 43\n | 58.90%\n |\n| 7\n | ![United Kingdom](image) **Lewis Hamilton** | 2007–2023 | 331\n | 187\n | 56.50%\n |\n| 8\n | ![Brazil](image) Ayrton Senna | 1984–1994 | 162\n | 86\n | 53.09%\n |\n| 9\n | ![United Kingdom](image) Jackie Stewart | 1965–1973 | 100\n | 51\n | 51.00%\n |\n| 10\n | ![United States](image) Cecil Green | 1950–1951 | 2\n | 1\n | 50.00%\n |\n| Source:[*citation needed*] |\n\n\n### For at least one lap, youngest leaders[edit]\n\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Seasons\n | Entries\n | Wins\n |\n| --- | --- | --- | --- | --- |\n| 1\n | ![United Kingdom](image) Stirling Moss | 1951–1961 | 67\n | 16\n |\n| 2\n | ![United Kingdom](image) David Coulthard | 1994–2008 | 247\n | 13\n |\n| 3\n | ![Argentina](image) Carlos Reutemann | 1972–1982 | 146\n | 12\n |\n| 4\n | ![Brazil](image) Rubens Barrichello | 1993–2011 | 326\n | 11\n |\n| ![Brazil](image) Felipe Massa | 2002–2017 | 272\n |\n| 6\n | ![Sweden](image) Ronnie Peterson | 1970–1978 | 123\n | 10\n |\n| ![Austria](image) Gerhard Berger | 1984–1997 | 210\n |\n| ![Finland](image) **Valtteri Bottas** | 2013–2023 | 222\n |\n| 9\n | ![Australia](image) Mark Webber | 2002–2013 | 217\n | 9\n |\n| 10\n | ![Belgium](image) Jacky Ickx | 1967–1979 | 122\n | 8\n |\n| ![Australia](image) **Daniel Ricciardo** | 2011–2023 | 239\n |\n| Source:[21] |\n\n\n### Most consecutive seasons with at least one Grand Prix win[edit]\n\n\n\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Seasons[N 13] | First championship\n | Debut year\n |\n| --- | --- | --- | --- | --- |\n| 1\n | ![United Kingdom](image) Nigel Mansell | 13\n | 1992 | 1980 |\n| 2\n | ![Germany](image) Nico Rosberg | 11\n | 2016 | 2006 |\n| 3\n | ![United States](image) Mario Andretti | 10\n | 1978 | 1968[N 15] |\n| ![United Kingdom](image) Jenson Button | 2009 | 2000 |\n| 5\n | ![South Africa](image) Jody Scheckter | 8\n | 1979 | 1972 |\n| ![Finland](image) Mika Häkkinen | 1998 | 1991 |\n| 7\n | ![United Kingdom](image) Mike Hawthorn | 7\n | 1958 | 1952 |\n| ![Austria](image) Jochen Rindt | 1970 | 1964 |\n| ![Finland](image) Kimi Räikkönen | 2007 | 2001 |\n| ![Netherlands](image) **Max Verstappen** | 2021 | 2015 |\n| Source:[74] |\n\n\n### Largest gap between titles[edit]\n\n\n\n\n</fragment>\n<fragment>\n | ![Switzerland](image) Sébastien Buemi | 20 years, 149 days\n | 7th\n | 2009 Australian Grand Prix | 1st race\n |\n| 10\n | ![France](image) **Esteban Ocon** | 20 years, 190 days\n | 10th\n | 2017 Australian Grand Prix | 10th race\n |\n| Source:[4] |\n\n\n### Oldest drivers to score points[edit]\n\n\n(only the last points finish for each driver is listed)\n\n\n\n\n\n\n</fragment>\n<fragment>\n\n|  | Driver\n | Season\n | Percentage\n | Races\n | Wins\n |\n| --- | --- | --- | --- | --- | --- |\n| 1\n | ![Netherlands](image) **Max Verstappen** | 2023\\*\n | 86.36%\\*\n | 22\\*\n | 19\\*\n |\n| 2\n | ![Italy](image) Alberto Ascari | 1952 | 75.00%\n | 8\n | 6\n |\n| 3\n | ![Germany](image) Michael Schumacher | 2004 | 72.22%\n | 18\n | 13\n |\n| 4\n | ![United Kingdom](image) Jim Clark | 1963 | 70.00%\n | 10\n | 7\n |\n| 5\n | ![Germany](image) Sebastian Vettel | 2013 | 68.42%\n | 19\n | 13\n |\n| 6\n | ![Netherlands](image) **Max Verstappen** | 2022 | 68.18%\n | 22\n | 15\n |\n| 7\n | ![Argentina](image) Juan Manuel Fangio | 1954 | 66.67%\n | 9\n | 6\n |\n| 8\n | ![Germany](image) Michael Schumacher | 2002 | 64.71%\n | 17\n | 11\n |\n| ![United Kingdom](image) **Lewis Hamilton** | 2020 | 17\n | 11\n |\n| 10\n | ![United Kingdom](image) Jim Clark | 1965 | 60.00%\n | 10\n | 6\n |\n| Sources:[12][13]\n |\n\n\n\\* Season still in progress.\n\n\n\n### Most consecutive wins[edit]\n\n\n\n\n</fragment>\n<fragment>\n\n### Percentage podium finishes[edit]\n\n\n\n\n|  | Driver\n | Seasons\n | Entries\n | Podiums\n | Percentage\n |\n| --- | --- | --- | --- | --- | --- |\n| 1\n | ![Italy](image) Dorino Serafini | 1950 | 1\n | 1\n | 100.00%\n |\n| 2\n | ![Italy](image) Luigi Fagioli | 1950–1951 | 7\n | 6\n | 85.71%\n |\n| 3\n | ![Argentina](image) Juan Manuel Fangio | 1950–1951, 1953–1958 | 52[N 2] | 35\n | 67.31%\n |\n| 4\n | ![United Kingdom](image) **Lewis Hamilton** | 2007–2023 | 331\n | 197\n | 59.52%\n |\n| 5\n | ![Argentina](image) José Froilán González | 1950–1957, 1960 | 26\n | 15\n | 57.69%\n |\n| 6\n | ![Italy](image) Giuseppe Farina | 1950–1955 | 35\n | 20[N 9] | 57.14%\n |\n| 7\n | ![Netherlands](image) **Max Verstappen** | 2015–2023 | 184\n | 97\n | 52.72%\n |\n| 8\n | ![France](image) Alain Prost | 1980–1991, 1993 | 202\n | 106\n | 52.48%\n |\n| 9\n | ![Italy](image) Alberto Ascari | 1950–1955 | 33[N 3] | 17\n | 51.52%\n |\n| 10\n | ![Germany](image) Michael Schumacher | 1991–2006, 2010–2012 | 308\n | 155\n | 50.32%\n |\n| Source:[35] |\n\n\n</fragment>\n</document>","name":"search","tool_call_id":"834aae24-863f-4517-b115-c2af5ecc1170","tool_calls":null,"is_tool_call_error":false}}
{"type":"kani_message","timestamp":1729887400.6802068,"id":"92477fb6-a856-409f-9af4-758a1edf60ec","msg":{"role":"assistant","content":"Based on the provided data, the top 5 Formula 1 drivers with the most race wins are:\n\n1. Sebastian Vettel - 53 wins\n2. Max Verstappen - 39 wins\n3. Lewis Hamilton - 103 wins\n4. Ayrton Senna - 41 wins\n5. Alain Prost - 51 wins\n\nAmong these drivers, Lewis Hamilton was born before 1990. He was born on January 7, 1985, and has won 103 races.","name":null,"tool_call_id":null,"tool_calls":[],"is_tool_call_error":null}}
{"type":"root_message","timestamp":1729887400.6802256,"msg":{"role":"assistant","content":"Based on the provided data, the top 5 Formula 1 drivers with the most race wins are:\n\n1. Sebastian Vettel - 53 wins\n2. Max Verstappen - 39 wins\n3. Lewis Hamilton - 103 wins\n4. Ayrton Senna - 41 wins\n5. Alain Prost - 51 wins\n\nAmong these drivers, Lewis Hamilton was born before 1990. He was born on January 7, 1985, and has won 103 races.","name":null,"tool_call_id":null,"tool_calls":[],"is_tool_call_error":null}}
{"type":"tokens_used","timestamp":1729887400.6802368,"id":"92477fb6-a856-409f-9af4-758a1edf60ec","prompt_tokens":18017,"completion_tokens":124}
{"type":"kani_state_change","timestamp":1729887400.6802788,"id":"92477fb6-a856-409f-9af4-758a1edf60ec","state":"stopped"}
{"type":"round_complete","timestamp":1729887400.6802945,"session_id":"1729887385-83300437-4784-43e0-8a87-a9fd2e66d4bf"}
